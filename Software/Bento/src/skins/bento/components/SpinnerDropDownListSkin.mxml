<?xml version="1.0" encoding="utf-8"?>
<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

--> 
<!--- The default skin class for the Spark DropDownList component. 
The skin for the anchor button for a DropDownList component 
is defined by the DropDownListButtonSkin class.  

<p>In a custom skin class that uses transitions, set the 
<code>itemDestructionPolicy</code> property to <code>none</code>
for the PopUpAnchor defined by the popUp property.</p>      

@see spark.components.DropDownList        
@see spark.skins.spark.DropDownListButtonSkin

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" alpha.disabled=".5" xmlns:components="com.clarityenglish.components.*"> 
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("com.clarityenglish.components.SpinnerDropDownList")]
		]]>
	</fx:Metadata> 
	
	<!--
	NOTE: this skin file contains sub-parts that may continue to react to
	Style code.  To remove this behavior create new copies of those skins
	and remove the styles.
	-->
	<s:states>
		<s:State name="normal" />
		<s:State name="open" />
		<s:State name="disabled" />
	</s:states>
	
	<!-- background (we need to go to -1 right in order to always cover the text) -->
	<s:Rect left="0" right="-1" top="0" bottom="0">
		<s:fill>
			<s:SolidColor color="0xFFFFFF" />
		</s:fill>
	</s:Rect>
	
	<!--- 
	The PopUpAnchor control that opens the drop-down list. 
	
	<p>In a custom skin class that uses transitions, set the 
	<code>itemDestructionPolicy</code> property to <code>none</code>.</p>
	-->
	<s:PopUpAnchor id="popUp" displayPopUp.normal="false" displayPopUp.open="true" includeIn="open"
				   left="0" right="0" top="-1" bottom="0" itemDestructionPolicy="auto"
				   popUpPosition="below" popUpWidthMatchesAnchorWidth="true">
		
		<s:SpinnerListContainer>
			<components:PatchedSpinnerList width="100%" dataProvider="{dataGroup.dataProvider}" selectedItem="{hostComponent.selectedItem}" valueCommit="hostComponent.selectedItem = event.target.selectedItem" />
		</s:SpinnerListContainer>
	</s:PopUpAnchor>
	
	<!-- A fake dataGroup bound to the spinner so we can mostly keep default DropDownList functionality -->
	<s:DataGroup id="dataGroup" visible="false">
		<s:itemRenderer>
			<fx:Component>
				<s:ItemRenderer />
			</fx:Component>
		</s:itemRenderer>
	</s:DataGroup>
	
	<!---  The default skin is DropDownListButtonSkin. 
	@copy spark.components.supportClasses.DropDownListBase#openButton
	@see spark.skins.spark.DropDownListButtonSkin -->
	<s:Button id="openButton" left="0" right="0" top="-5" bottom="-1" focusEnabled="false" tabEnabled="false"
			  skinClass="skins.bento.exercise.ExerciseDropDownListButtonSkin" label="{hostComponent.selectedItem.toString()}" excludeFrom="disabled" />  
	
	<!--- @copy spark.components.DropDownList#labelDisplay -->
	<s:Label id="labelDisplay" verticalAlign="middle" maxDisplayedLines="1" 
			 mouseEnabled="false" mouseChildren="false"
			 left="27" left.disabled="0" top="0" bottom="0" verticalCenter="0" /> 
	
	<!-- underline -->
	<s:Line left="0" width="100%" bottom="1" includeIn="disabled">
		<s:stroke>
			<s:SolidColorStroke color="#6A6A6A" weight="1" alpha="0.8" />
		</s:stroke>
	</s:Line>
	
</s:SparkSkin>
