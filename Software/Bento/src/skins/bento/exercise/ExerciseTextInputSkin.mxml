<?xml version="1.0" encoding="utf-8"?>
<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->
<!--- The default skin class for Spark TextInput component.  

     @see spark.components.TextInput
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<!-- gh#472 Don't dull the 'disabled' fields as this just means after marking -->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
    alpha.disabledStates="1" blendMode="normal">

    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.TextInput")]

        ]]>
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
        /** 
         * @private 
         */     
        private static const focusExclusions:Array = ["textDisplay"];

        /**
         *  @private
         */
        override public function get focusSkinExclusions():Array { return focusExclusions;};
        ]]>
    </fx:Script>
    
    <s:states>
        <s:State name="normal"/>
        <s:State name="disabled" stateGroups="disabledStates"/>
        <s:State name="normalWithPrompt"/>
        <s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
    </s:states>
    
	<!-- background (we need to go negative on a few coordinates in order to always cover the text) -->
            <!--- @private Defines the background fill color. -->
	<!-- gh#472 remove the background altogether
    <s:Rect id="background" left="0" right="0" top="0" bottom="0">
        <s:fill>
            <s:SolidColor id="bgFill" color="0xFF0000" />
        </s:fill>
    </s:Rect>
    -->
	
	<!-- background (for drop targets - determined by whether or not the component is editable) gh#60 -->
	<!-- gh#472 --> 
	<!-- 
	<s:Rect left="-2" right="-2" top="-3" bottom="-3" radiusX="3" radiusY="3" visible="{!hostComponent.editable}">
		<s:stroke>
			<s:SolidColorStroke color="#6A6A6A" weight="1" alpha="0.8" color.disabledStates="#6A6A6A"/>
		</s:stroke>
	</s:Rect>
	-->
    <!-- text -->
    <s:RichEditableText id="textDisplay"
                        verticalAlign="middle"
                        widthInChars="10"
                        left="0" right="0" top="0" bottom="0" />

    <!-- gh#996 This blob colour should be picked up from program.css -->
    <s:Group verticalCenter="0" horizontalCenter="0" visible="{!hostComponent.editable &amp;&amp; !hostComponent.text}">
        <s:Ellipse y="0" width="8" height="8" >
            <s:fill>
                <s:SolidColor id="dropDownMarker" color="#0A789D" />
            </s:fill>
        </s:Ellipse>
    </s:Group>

	<!-- underline (for text input - determined by whether or not the component is editable) gh#60 -->
	<!-- gh#472 {hostComponent.editable} -->
	<s:Line left="0" right="0" bottom="0" visible="true">
		<s:stroke>
			<s:SolidColorStroke color="#6A6A6A" weight="1" alpha="0.8" color.disabledStates="#6A6A6A"/>
		</s:stroke>
	</s:Line>
		
</s:SparkSkin>
