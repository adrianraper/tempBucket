{
	"info": {
		"_postman_id": "3384ca90-976e-44d9-ac73-d9b9d5c749d7",
		"name": "Clarity API collection",
		"description": "APIs used by ip.com and ce.com for \n. sign in\n. account creation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "sign in",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1d205bc8-dfac-4718-86cd-375fa8ed6c42",
						"type": "text/javascript",
						"exec": [
							"let email = \"spaghetti@dev\";",
							"let password = \"password\";",
							"let hashedPassword = CryptoJS.MD5(email + password).toString(CryptoJS.enc.Hex);",
							"postman.setEnvironmentVariable('email',email);",
							"postman.setEnvironmentVariable('password',hashedPassword);",
							"console.log('email='+email+' password='+hashedPassword);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0b9ee6d1-817e-4e5c-8eb2-df0cea800665",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Sign in succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct user id returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.user.id).to.eql(11259);",
							"});",
							"",
							"if (jsonData.success) {",
							"    pm.environment.unset(\"token\");",
							"    pm.environment.set(\"token\", pm.response.json().details.authentication);",
							"    console.log('got: ' + pm.response.json().details.authentication);",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\": \"signin\", \"email\":\"{{email}}\", \"password\":\"{{password}}\"}"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c7b06187-bd53-45c0-9dbe-e59e802028f4",
						"type": "text/javascript",
						"exec": [
							"let email = \"1234@clarity\";",
							"let password = \"password\";",
							"let hashedPassword = CryptoJS.MD5(email + password).toString(CryptoJS.enc.Hex);",
							"postman.setEnvironmentVariable('email',email);",
							"postman.setEnvironmentVariable('password',hashedPassword);",
							"console.log('email='+email+' password='+hashedPassword);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6144c910-20f3-4b24-b0ef-cc640c0d6fbe",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Sign in succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct user id returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.user.id).to.eql(11259);",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"getUser\", \"email\":\"{{email}}\", \"password\":\"{{password}}\"}"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "addUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b66a1d52-fdb0-4331-9f38-69306c41f42b",
						"type": "text/javascript",
						"exec": [
							"let email = \"pontoon@clarity\";",
							"let password = \"password\";",
							"let hashedPassword = CryptoJS.MD5(email + password).toString(CryptoJS.enc.Hex);",
							"postman.setEnvironmentVariable('email',email);",
							"postman.setEnvironmentVariable('password',hashedPassword);",
							"console.log('email='+email+' password='+hashedPassword);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6144c910-20f3-4b24-b0ef-cc640c0d6fbe",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Sign in succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct user id returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.user.id).to.eql(11259);",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"addUser\", \"email\":\"{{email}}\", \"password\":\"{{password}}\", \"name\":\"Panther\", \"rootId\":163, \"groupId\":74548}"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get result",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "63290d12-94ef-4999-b3ea-6192346db3e9",
						"type": "text/javascript",
						"exec": [
							"var token = pm.environment.get(\"token\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b6a9981c-ea34-4165-9deb-abaeaeb8355a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Get result succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.level).to.eql('U');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\": \"getResult\",\"token\":\"{{token}}\",\"productCode\":63}"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "get licence usage",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "03eaba62-b676-4f75-a53b-8c714ca21201",
						"type": "text/javascript",
						"exec": [
							"var token = pm.environment.get(\"token\");",
							"console.log(token);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "47923000-5f3e-4403-8aad-7c37a436858b",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Get result succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.maxLicences).to.eql(30);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\": \"getLicenceUse\",\"token\":\"{{token}}\",\"productCode\":68}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "convert bento licences to couloir",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b67d2739-a19e-49f0-9cb1-20fdc411d952",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5c178887-46f8-4b7d-aefd-317695bb8ef9",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Convert licences succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.maxLicences).to.eql(30);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"convertLicences\", \"rootId\":26098, \"productCode\":69, \"dbHost\":200}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "dbCheck",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b67d2739-a19e-49f0-9cb1-20fdc411d952",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "363caad0-0ec1-4b66-ad69-5e898875aa7a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"dbCheck succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"dbCheck\", \"dbHost\":23}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a715b6de-9592-41dc-9b2a-327516baa07c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aa147ac6-2c42-4ad2-bbc9-db8d3989a8f7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check email succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Email is unique\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.status).to.eql('new');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\": \"getEmailStatus\",\"email\":\"presbertarian@clarity\"}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "check token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2eb470fe-38c2-461a-9956-17903791350a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ee762c67-b3ea-4669-a644-d7ff31f421c7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check token succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.status).to.eql('ok');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"getTokenStatus\", \"token\":\"8535-6020-8016-4\"}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "getToken",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2eb470fe-38c2-461a-9956-17903791350a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ee762c67-b3ea-4669-a644-d7ff31f421c7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check token succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.status).to.eql('ok');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"getToken\", \"token\":\"8535-6020-8016-4\"}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "generate tokens",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "6c41d979-84f2-46eb-8a69-1dbd3dc01479",
						"type": "text/javascript",
						"exec": [
							"let quantity=10;",
							"postman.setEnvironmentVariable('quantity',quantity);",
							"console.log('generate '+quantity+' tokens');"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2ea94074-cb4e-45a8-a171-83cdbd512817",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Generate token succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.length).to.eql(parseInt(postman.getEnvironmentVariable('quantity')));",
							"});",
							"// Could have a test that count(tokens) = quantity from request",
							"console.log('generated ' + pm.response.json().details.length + ' tokens');",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"generateTokens\",\"quantity\":10,\"productCode\":68,\"rootId\":10719,\"groupId\":57728,\"duration\":30,\"productVersion\":\"FV\",\"expiryDate\":\"2018-10-01\"}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "activate token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "019233f8-06c7-43ff-85af-0e2ca1cf22bb",
						"type": "text/javascript",
						"exec": [
							"let username = \"spaghetti\";",
							"let email = username + \"@dev\";",
							"let password = \"password\";",
							"let serial = '8019-5368-2016-9';",
							"let hashedPassword = CryptoJS.MD5(email + password).toString(CryptoJS.enc.Hex);",
							"postman.setEnvironmentVariable('email',email);",
							"postman.setEnvironmentVariable('password',hashedPassword);",
							"postman.setEnvironmentVariable('name',username);",
							"postman.setEnvironmentVariable('serial',serial);",
							"console.log('email='+email+' password='+hashedPassword+' serial='+serial);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fc638dc2-c3ba-447f-b232-4c50b368a3ad",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Activate token succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct result returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.user.id).to.eql(11259);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"activateToken\",\"email\":\"{{email}}\", \"password\":\"{{password}}\",\"name\":\"{{name}}\",\"token\":\"{{serial}}\",\"appVersion\":\"1\"}"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "forgotPassword",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a715b6de-9592-41dc-9b2a-327516baa07c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aa147ac6-2c42-4ad2-bbc9-db8d3989a8f7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check email succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Email is unique\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.status).to.eql('new');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\": \"getEmailStatus\",\"email\":\"presbertarian@clarity\"}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "readJWT",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a715b6de-9592-41dc-9b2a-327516baa07c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aa147ac6-2c42-4ad2-bbc9-db8d3989a8f7",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Check email succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Email is unique\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.status).to.eql('new');",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\": \"getEmailStatus\",\"email\":\"presbertarian@clarity\"}\n"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "changePassword",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "64c819cb-fa89-4f86-bd81-c4362e3be95e",
						"type": "text/javascript",
						"exec": [
							"let email = \"adrian@clarity\";",
							"let password = \"password\";",
							"let hashedPassword = CryptoJS.MD5(email + password).toString(CryptoJS.enc.Hex);",
							"postman.setEnvironmentVariable('email',email);",
							"postman.setEnvironmentVariable('password',hashedPassword);",
							"console.log('email='+email+' password='+hashedPassword);"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6144c910-20f3-4b24-b0ef-cc640c0d6fbe",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Sign in succeeded\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.eql(true);",
							"});",
							"pm.test(\"Correct user id returned\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.details.user.id).to.eql(11259);",
							"});",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"command\":\"changePassword\", \"email\":\"{{email}}\", \"password\":\"{{password}}\"}"
				},
				"url": {
					"raw": "{{domain}}{{apiGateway}}",
					"host": [
						"{{domain}}{{apiGateway}}"
					]
				}
			},
			"response": []
		}
	]
}