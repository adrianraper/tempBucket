<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:login="com.clarityenglish.testadmin.view.login.components.*"
				xmlns:management="com.clarityenglish.resultsmanager.view.management.components.*"
				backgroundColor="#ffffff" creationComplete="creationComplete()"
				disabledColor="0x000000" disabledOverlayAlpha="0.5"
				implements="com.clarityenglish.common.view.interfaces.CopyReceiver"
				modalTransparency="0.8" paddingBottom="1" paddingLeft="1" paddingRight="1"
				paddingTop="1">
	<!-- xmlns:usage="com.clarityenglish.resultsmanager.view.usage.components.*"
	     xmlns:loginopts="com.clarityenglish.resultsmanager.view.loginopts.components.*" -->
	<mx:Style source="../../../../css/clarity.css"/>
	
	<mx:Script>
		<![CDATA[
			import com.clarityenglish.common.CommonNotifications;
			import com.clarityenglish.common.model.interfaces.CopyProvider;
			import com.clarityenglish.common.vo.content.Title;
			import com.clarityenglish.common.vo.manageable.User;
			import com.clarityenglish.resultsmanager.Constants;
			import com.clarityenglish.resultsmanager.RMNotifications;
			import com.clarityenglish.testadmin.ApplicationFacade;
			import com.clarityenglish.utils.TraceUtils;
			
			import flash.display.MovieClip;
			import flash.ui.ContextMenu;
			
			import mx.controls.Alert;
			
			private var facade:ApplicationFacade = ApplicationFacade.getInstance();
			private var copyProvider:CopyProvider;
			
			private function creationComplete():void {

				//TraceUtils.myTrace("RM started now");

				//TraceUtils.myTrace("RM started");
				// Hide the built in context menu
				var cm:ContextMenu = new ContextMenu();
				cm.hideBuiltInItems();
				this.contextMenu = cm;
				MovieClip(systemManager).contextMenu = this.contextMenu.clone();
				
				// Start the PureMVC framework
				facade.sendNotification(RMNotifications.STARTUP, this);
				// See if anything has been passed on as flashvars

				// Pick up any flashvars. If present, can I directly call the loginEvent?
				// And if it failed would it go to the login screen for messages?
				// Can I fire up the login screen and tell it to work with this data?
				// AR I think this is unnecessary, see startupCommand.as
				//var flashvarsName:String = Application.application.parameters.username;
				//var flashvarsPassword:String = Application.application.parameters.password;
				//var flashvarsRootID:String = Application.application.parameters.rootID;
				//TraceUtils.myTrace("flashvars username=" + flashvarsName);
				//if (flashvarsName) loginView.passedVars(flashvarsName, flashvarsPassword, flashvarsRootID);
				
				// gh#1492 Only use test admin if specifically added in direct start
				/* 
					if (mainStack.contains(testadminView))
					mainStack.removeChild(testadminView);
				*/
			}
			
			private function onLogout():void {
				resetTabs();
				facade.sendNotification(CommonNotifications.LOGOUT);
			}
			
			public function setCopyProvider(copyProvider:CopyProvider):void {
				this.copyProvider = copyProvider;
				//if (mainStack.contains(testadminView)) testadminView.label = copyProvider.getCopyForId("testadminTab");
				//if (mainStack.contains(usageView)) usageView.label = copyProvider.getCopyForId("usageStatisticsTab");
				//if (mainStack.contains(loginOptsView)) loginOptsView.label = copyProvider.getCopyForId("loginOptionsTab");
				
				logoutButton.label = copyProvider.getCopyForId("logoutButton");
				//brandingLabel.text = copyProvider.getCopyForId("applicationName") + " " + Constants.version;
				// Take this over for the account name. See below.
				//brandingLabel.text = "V" + Constants.version;
			}
			
			/**
			 * Show/hide various tabs based on the currently logged in userType.  Unfortunately viewStacks and tabNavigators don't allow
			 * visible to show/hide a tab so we can't use an MXML property bound to Constants.userType, but this method works fine.
			 */
			public function configureTabsForLoggedInUser():void {
				//TraceUtils.myTrace("logged in user is a " + Constants.userType);
				// This might run after directStart tabbing, so only remove tabs here.
				// If you use logout, hopefully you will reset it all somewhere? No it doesn't.
				//if (Constants.userType == User.USER_TYPE_ADMINISTRATOR) {
					//if (!(mainStack.contains(loginOptsView)))
					//	mainStack.addChild(loginOptsView);
					//if (!(mainStack.contains(testadminView)))
					//	mainStack.addChild(testadminView);
				//} else {
				//	if ((mainStack.contains(loginOptsView)))
				//		mainStack.removeChild(loginOptsView);
				//}
				// v3.4 Add a note about who you are.
				// v3.5 And what account you are in?
				//whoAmILabel.text = "You are logged in as " + Constants.userName + ", " + copyProvider.getCopyForId("userType" + Constants.userType) + ". " +
				//				Constants.accountName + ".";
				//whoAmILabel.text = "You are signed in as " + Constants.userName + ".";
				var replaceObj:Object = {"username": Constants.userName};
				whoAmILabel.text = copyProvider.getCopyForId("signedInUser", replaceObj);
				//brandingLabel.text = Constants.accountName;

				// v3.5 Don't let reporters see usage stats. I think eventually teachers should only see stats for their group too.				
				//if (Constants.userType == User.USER_TYPE_REPORTER) {
				//	if ((mainStack.contains(usageView)))
				//		mainStack.removeChild(usageView);
				//} else {					
					//if (!(mainStack.contains(usageView)))
					//	mainStack.addChild(usageView);
				//}
				// AR. For now I am going to remove licence allocation except for the admin
				// but I think it will actually go for the admin too. Yes
				//if (Constants.userType != User.USER_TYPE_REPORTER) {
				//	if (!(mainStack.contains(licenceView)))
				//		mainStack.addChild(licenceView);
				//} else {
				//	if ((mainStack.contains(licenceView)))
				//		mainStack.removeChild(licenceView);
				//}
				// v3.1 A small change for reporters on the content screen. No, you can't refer to view children like this.
				//if (Constants.userType == User.USER_TYPE_REPORTER) {
				//	mainStack.managementView.contentView.detailedContentLabel.visible = false;
				//}
			}
			/**
			 * Show/hide various tabs based on the type of licence of the titles.
			 */
			public function configureTabsForTitles(Titles:Array):void {
				// See if every title is an AA licence.
				// v3.6 This should now be based on the licence type of RM
				// Except that you haven't got title for RM!
				// DONE. Sort this out later.
				// Now picked up and saved from login
				// v3.6.6 Concurrent Tracking licence should have User view as well, and network
				//TraceUtils.myTrace('your licence is ' + Constants.licenceType);
				//var allAAlicences:Boolean = true;
				//if (Constants.licenceType == Title.LICENCE_TYPE_LT ||
				//	Constants.licenceType == Title.LICENCE_TYPE_CT ||
				//	Constants.licenceType == Title.LICENCE_TYPE_NETWORK ||
				//	Constants.licenceType == Title.LICENCE_TYPE_TT)
				//	allAAlicences = false;
				/*
				if (allAAlicences) {
					if (mainStack.contains(managementView)) {
						TraceUtils.myTrace("so hide management view");
						mainStack.removeChild(managementView);
					}
				} else {
					//if ((mainStack.contains(managementView))) {
					//	mainStack.addChild(managementView);
					//}
				}
				*/
			}
			public function configureTabsForDirectStart(directStart:String):void {
				showAlert("Sorry, there is no direct access to Test Admin", "Starting problem");
			}
			/*
			 * For when you logout
			 */
			public function resetTabs():void {
				//if (!(mainStack.contains(testadminView))) 
				//	mainStack.addChild(testadminView);
				//if (!(mainStack.contains(usageView))) 
				//	mainStack.addChild(usageView);
				//if (!(mainStack.contains(loginOptsView))) 
				//	mainStack.addChild(loginOptsView);
			}
			
			public function showAlert(text:String, title:String):void {
				Alert.show(text, title);
			}
			
		]]>
	</mx:Script>
	
	<mx:ViewStack id="topStack" width="100%" height="100%" creationPolicy="all">		
		<login:LoginView id="loginView"/>
		
		<!-- The main application view -->
		<mx:VBox width="100%" height="100%" paddingBottom="4" paddingLeft="4" paddingRight="4"
				 paddingTop="4" verticalGap="0">
			<mx:HBox width="100%">
				<mx:Label id="brandingLabel" styleName="headingLabelBlack"/>
				<mx:Spacer width="100%"/>
				<mx:Label id="whoAmILabel" styleName="headingLabelBlack"/>
				<mx:Button id="logoutButton" click="onLogout()" color="0xFFFFFF"/>
			</mx:HBox>
			<mx:Spacer height="4"/>
			<!-- <mx:TabNavigator id="mainStack" width="100%" height="100%" borderStyle="solid"> -->
				<management:TestadminView id="testadminView" width="100%" height="100%"/>				
			<!-- </mx:TabNavigator> -->
			<!-- <usage:UsageView id="usageView" width="100%" height="100%"/>
			     <loginopts:LoginOptsView id="loginOptsView" width="100%" height="100%"/>  -->
		</mx:VBox>
	</mx:ViewStack>
</mx:Application>