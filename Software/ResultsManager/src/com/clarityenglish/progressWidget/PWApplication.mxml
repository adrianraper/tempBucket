<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:login="com.clarityenglish.progressWidget.view.login.components.*"
				xmlns:progress="com.clarityenglish.progressWidget.view.progress.components.*"
				disabledColor="0x00FF00"
				disabledOverlayAlpha="0.5"
				paddingLeft="1"
				paddingRight="1"
				paddingBottom="1"
				paddingTop="1"
				modalTransparency="0.8"
				backgroundColor="0xFFFFFF"
				creationComplete="creationComplete()"
				implements="com.clarityenglish.common.view.interfaces.CopyReceiver"
				>
	<mx:Script>
		<![CDATA[
			import com.clarityenglish.common.CommonNotifications;
			import com.clarityenglish.progressWidget.ApplicationFacade;
			import com.clarityenglish.progressWidget.Constants;
			import com.clarityenglish.common.model.interfaces.CopyProvider;
			import com.clarityenglish.common.vo.manageable.User;
			import com.clarityenglish.progressWidget.PWNotifications;
			import flash.display.MovieClip;
			import flash.ui.ContextMenu;
			import com.clarityenglish.utils.TraceUtils;			
			//import nl.demonsters.debugger.MonsterDebugger;
			import mx.controls.Alert;
			import flash.external.ExternalInterface;
			
			private var facade:ApplicationFacade = ApplicationFacade.getInstance();
			//private var debugger:MonsterDebugger;
			private function creationComplete():void {
				//debugger = new MonsterDebugger(this);
				
				TraceUtils.myTrace("Progress Widget started");
				//MonsterDebugger.trace(this, "Progress Widget started");
				
				// Hide the built in context menu
				var cm:ContextMenu = new ContextMenu();
				cm.hideBuiltInItems();
				this.contextMenu = cm;
				MovieClip(systemManager).contextMenu = this.contextMenu.clone();
				
				// Expose some functions to ExternalInterface
				if (ExternalInterface.available) {
					ExternalInterface.addCallback("switchView", switchView);
				}
				// Start the PureMVC framework
				facade.sendNotification(PWNotifications.STARTUP, this);

			}
			
			private function onLogout():void {
				facade.sendNotification(CommonNotifications.LOGOUT);
			}
			
			public function setCopyProvider(copyProvider:CopyProvider):void {
				//logoutButton.label = copyProvider.getCopyForId("logoutButton");
				//brandingLabel.text = "V" + Constants.version;
				//if (topStack.contains(progressView)) progressView.label = copyProvider.getCopyForId("progressView");
				//if (topStack.contains(comparisonView)) comparisonView.label = copyProvider.getCopyForId("comparisonView");
			}
			
			public function showAlert(text:String, title:String):void {
				Alert.show(text, title);
			}
			
			// This function is expected to be called from an external interface
			public function switchView(viewName:String):void {
				switch (viewName) {
					case "loginView":
						topStack.selectedChild = loginView;
						break;
					case "progressView":
						topStack.selectedChild = progressView;
						break;
					case "comparisonView":
						topStack.selectedChild = comparisonView;
						break;
					case "detailView":
						topStack.selectedChild = detailView;
						break;
					default:
						topStack.selectedIndex = -1;
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:Style source="/../css/clarity.css" />
	<mx:VBox includeInLayout="false" visible="false">
		<mx:HBox>
			<mx:Button id="goProgress" click="topStack.selectedIndex=1;" label="progress"></mx:Button>
			<mx:Button id="goComparison" click="topStack.selectedIndex=2;" label="comparison"></mx:Button>
			<mx:Button id="goDetail" click="topStack.selectedIndex=3;" label="detail"></mx:Button>
		</mx:HBox>
	</mx:VBox>
	<mx:ViewStack id="topStack" width="100%" height="100%" creationPolicy="all">		
		<!-- The login view  -->
		<login:LoginView id="loginView" />
		
		<!-- The progress view  -->
		<progress:ProgressView id="progressView" width="745" height="540" />
		
		<!-- The comparison view  -->
		<progress:ComparisonView id="comparisonView" width="745" height="540"/>
		
		<!-- The detail view  -->
		<progress:DetailView id="detailView" />
		
	</mx:ViewStack>
	
</mx:Application>