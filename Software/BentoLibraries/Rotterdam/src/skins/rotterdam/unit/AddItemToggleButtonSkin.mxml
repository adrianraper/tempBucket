<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark ToggleButton component.  

     @see spark.components.ToggleButton
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
                   xmlns:s="library://ns.adobe.com/flex/spark" 
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="21" minHeight="21" 
                   alpha.disabledStates="0.5">
    
    <!-- host component -->
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.ToggleButton")]
    ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
           For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = ["labelDisplay"];

        /**
         * @private
         */    
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            //useChromeColor = true;
            super.initializationComplete();
        }
        
    </fx:Script>
	
	<fx:Declarations>
		<s:GlowFilter id="glowFilter" alpha="0.6" blurX="2" blurY="2" color="0x000000" knockout="false" quality="3" />
		<s:DropShadowFilter id="dropShadowFilter" angle="0" distance="0.4" alpha="0.3" />
	</fx:Declarations>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>
    
	<s:transitions>
		<s:Transition fromState="up" toState="over" autoReverse="true" >
			<s:AnimateColor  targets="{[color1, color2]}"  duration="200" />
		</s:Transition>
		
		<s:Transition  fromState="over" toState="up" autoReverse="true" >
			<s:AnimateColor targets="{[color1, color2]}" duration="300" />
		</s:Transition>
		
	</s:transitions>
	
	<!--s:Rect left="0" right="0" height="48" topRightRadiusX="8" includeIn="over" filters="{glowFilter}" >
		<s:fill>
			<s:SolidColor color="0x000000"/>
		</s:fill>
	</s:Rect-->
	
	<!--s:Rect left="0" right="0" height="48" width="150" filters="{dropShadowFilter}" >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry id="color1" color.up="0x8CC63F" color.over="0x3C5C11" color.down="0x3C5C11" color.selectedStates="0x3C5C11" ratio="0"/>	
				<s:GradientEntry id="color2" color.up="0x72A133" color.over="0x213309" color.down="0x213309" color.selectedStates="0x213309" ratio="1"/>
				<s:GradientEntry id="color3" color.up="0x8CC63F" color.over="0x3A5A10" color.down="0x3A5A10" color.selectedStates="0x3A5A10" ratio="0.9"/>
				<s:GradientEntry id="color4" color.up="0x8CC63F" color.over="0x213309" color.down="0x213309" color.selectedStates="0x213309"/>				
			</s:LinearGradient>
		</s:fill>
	</s:Rect-->
	
	<s:HGroup verticalCenter="0">
		<!-- layer 8: text -->
		<!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
		<s:Label id="labelDisplay"
				 color="0x213309"
				 fontWeight="bold"
				 maxDisplayedLines="1"
				 left="10" right="10" paddingTop="5">
		</s:Label>
		
		<s:Group id="symbol" top="15">
			<s:Path winding="nonZero" data="M3.5 18C1.57031 18 0 16.4297 0 14.5L0 3.5C0 1.57031 1.57031 0 3.5 0L14.5 0C16.4297 0 18 1.57031 18 3.5L18 14.5C18 16.4297 16.4297 18 14.5 18L3.5 18Z" >
				<s:fill>
					<s:LinearGradient x="9.00049" y="18" scaleX="17.9995" rotation="-90">
						<s:GradientEntry id="color1" color="0x3C5E11" color.selectedStates="0x8CC63F" color.over="0x8CC63F" color.down="0x8CC63F" ratio="0" />
						<s:GradientEntry id="color2" color="0x709E33" color.selectedStates="0x72A133" color.over="0x72A133" color.down="0x72A133" ratio="1"/>
					</s:LinearGradient>
				</s:fill>
			</s:Path>
			<s:Path winding="nonZero" data="M15 1C16.6543 1 18 2.3457 18 4L18 15C18 16.6543 16.6543 18 15 18L4 18C2.3457 18 1 16.6543 1 15L1 4C1 2.3457 2.3457 1 4 1L15 1M15 0L4 0C1.7998 0 0 1.7998 0 4L0 15C0 17.2002 1.7998 19 4 19L15 19C17.2002 19 19 17.2002 19 15L19 4C19 1.7998
					17.2002 0 15 0L15 0Z" >
				<s:fill>
					<s:SolidColor color="0x213309"/>
				</s:fill>
			</s:Path>
			<s:Path winding="nonZero" data="M11.5449 12.7705C10.4434 12.7705 8.64063 12.7705 7.53906 12.7705 6.4375 12.7705 5.98682 11.9902 6.5376 11.0361 7.08838 10.082 7.98975 8.52148 8.54053 7.56738 9.09131 6.61328 9.99268 6.61328 10.543 7.56738 11.0947 8.52148 11.9951 10.082
					12.5469 11.0361 13.0977 11.9902 12.6465 12.7705 11.5449 12.7705Z" >
				<s:fill>
					<s:SolidColor color="0xFFFFFF" color.selectedStates="0x213309" color.over="0x213309" color.down="0x213309"/>
				</s:fill>
			</s:Path>
		</s:Group>
	</s:HGroup>

</s:SparkButtonSkin>