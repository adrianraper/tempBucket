<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:widgets="skins.assets.widgets.*">
	
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.rotterdam.view.unit.events.WidgetLinkEvent;
			import com.clarityenglish.rotterdam.view.unit.events.WidgetMenuEvent;
			
			[Bindable]
			public var icon:Object;
			
			[Bindable]
			public var caption:String;
			
			[Bindable]
			public var selected:Boolean;
			
			[Bindable]
			public var editing:Boolean;
			
			protected function onMenuButtonClick(event:MouseEvent):void {
				switch (currentState) {
					case "closed":
						currentState = "open";
						dispatchEvent(new WidgetMenuEvent(WidgetMenuEvent.MENU_SHOW, true));
						break;
					case "open":
						currentState = "closed";
						dispatchEvent(new WidgetMenuEvent(WidgetMenuEvent.MENU_HIDE, true));
						break;
				}
			}
			
			//gh #221
			protected function onLinkButtonClick(event:MouseEvent):void {
				linkButtonRect.alpha = 1;
				dispatchEvent(new WidgetLinkEvent(WidgetLinkEvent.ADD_LINK, true));
				//alice: When link button clicked, we should disable the menu button
				menuButton.enabled = false;
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dropShadowFilter" angle="0" distance="0.3" alpha="0.2" />
	</fx:Declarations>

	<fx:Metadata>
		[Event(name="menuShow", type="com.clarityenglish.rotterdam.view.unit.events.WidgetMenuEvent")]
		[Event(name="menuHide", type="com.clarityenglish.rotterdam.view.unit.events.WidgetMenuEvent")]
	</fx:Metadata>
	
	<s:states>
		<s:State name="closed" />
		<s:State name="open" />
	</s:states>
	
	<!-- Hit area -->
	<s:Rect left="0" right="0" top="0" bottom="0">
		<s:fill>
			<s:SolidColor color="#FFFFFF" />
		</s:fill>
	</s:Rect>
	
	<!-- Title bar -->
	<s:Group id="dragArea" left="0" right="0" top="0" height="25">
		<s:Rect left="0" right="0" top="0" bottom="0" bottomLeftRadiusX="4" bottomLeftRadiusY="4" bottomRightRadiusX="4" bottomRightRadiusY="4">
			<s:fill>
				<s:LinearGradient scaleX="-25" rotation="90">
					<s:GradientEntry ratio="0" color="#CBCBCB"/>
					<s:GradientEntry ratio="1" color="#FFFFFF"/>
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<!-- The icon -->
	<s:Image source="{icon}" mouseChildren="false" mouseEnabled="false" top="3" left="3" />
	
	<!-- The widget title -->
	<!--s:Label text="{caption}" color="#7F7F7F" fontSize="13" fontStyle="italic" left="33" top="9" mouseChildren="false" mouseEnabled="false" /-->
	<s:TextInput id="widgetCaptionTextInput" color="#7F7F7F" fontSize="13" fontStyle="italic" left="33" right="125" top="3" borderVisible="false" contentBackgroundAlpha="0" />
	
	<!--gh #221-->
	
	<s:Group right="40" mouseEnabled="true" click="onLinkButtonClick(event)" buttonMode="true" visible="{editing}" mouseOver="linkLabel.visible = true; linkButtonOverRect.alpha = 1" mouseOut="linkLabel.visible = false; linkButtonOverRect.alpha = 0" >
		<s:Label id="linkLabel" text="Add Link" right="35" top="8" visible="false" fontSize="11"/>
		<s:Rect id="linkButtonOverRect" width="30" height="24" right="0" alpha = "0">
			<s:stroke>
				<s:SolidColorStroke color="#D8D8D8" />
			</s:stroke>
			<s:fill>
				<s:SolidColor color="#F2F2F2" />
			</s:fill>
		</s:Rect>
		<s:Rect id="linkButtonRect" width="30" height="24" right="0" alpha = "0">
			<s:stroke>
				<s:SolidColorStroke color="#D8D8D8" />
			</s:stroke>
			<s:fill>
				<s:SolidColor color="#F2F2F2" />
			</s:fill>
		</s:Rect>
		<widgets:LinkIcon top="7" right="8" rotation="-5" />
	</s:Group>
	
	<!-- The menu button -->
	<s:Group id="menuButton" right="0" width="41" height="24" buttonMode="true" mouseEnabled="true" click="onMenuButtonClick(event)" visible="{editing}">
		<s:Rect right="0" width="41" height="24" alpha.open="1" alpha.closed="0">
			<s:stroke>
				<s:SolidColorStroke color="#D8D8D8" />
			</s:stroke>
			<s:fill>
				<s:SolidColor color="#F2F2F2" />
			</s:fill>
		</s:Rect>
		<widgets:CogIcon top="5" right="9" />
	</s:Group>
	
	<!-- The stroke, including the selection stroke -->
	<s:Rect left="0" right="0" top="0" bottom="0" radiusX="4" radiusY="4" filters="{dropShadowFilter}">
		<s:stroke>
			<s:SolidColorStroke color="{selected ? 0x1CBBB4 : 0xD4D4D4}" />
		</s:stroke>
	</s:Rect>
	
</s:Group>
