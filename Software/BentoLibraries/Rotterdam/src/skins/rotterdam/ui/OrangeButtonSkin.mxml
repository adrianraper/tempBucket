<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the Spark Button component.  

       @see spark.components.Button
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
             xmlns:s="library://ns.adobe.com/flex/spark" 
             xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
             minWidth="21" minHeight="21" 
             alpha.disabled="0.5">
     
    <fx:Metadata>
        <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.Button")]
        ]]>
    </fx:Metadata>
	
	<fx:Declarations>
		<s:GlowFilter id="glowFilter" alpha="0.6" blurX="2" blurY="2" color="0x000000" knockout="false" quality="10" />
		<s:DropShadowFilter id="dropShadowFilter" angle="90" distance="0.5" alpha="0.8" />
	</fx:Declarations>
     
	<fx:Script>
		<![CDATA[
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {
				if (shadow) {
					if (getStyle("buttonHeight"))
						shadow.height = getStyle("buttonHeight");
					else
						shadow.height = 35;
				}
				
				if (fill) {
					if (getStyle("buttonHeight")) 
						fill.height = getStyle("buttonHeight");
					else
						fill.height = 35;
				}
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
		]]>
	</fx:Script>
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" />
        <s:State name="down" />
        <s:State name="disabled" />
    </s:states>
	
	<s:transitions>
		<s:Transition fromState="up" toState="over" autoReverse="true" >
			<s:AnimateColor  targets="{[color1, color2]}"  duration="200" />
		</s:Transition>
		
		<s:Transition  fromState="over" toState="up" autoReverse="true" >
			<s:AnimateColor targets="{[color1, color2]}" duration="300" />
		</s:Transition>
		
	</s:transitions>
    
	<s:Rect id="shadow" left="0" right="0" radiusX="4" radiusY="4" includeIn="over" filters="{glowFilter}" >
		<s:fill>
			<s:SolidColor color="0x000000"/>
		</s:fill>
	</s:Rect>
	
	<s:Rect id="fill" left="0" right="0" radiusX="4" radiusY="4" filters="{dropShadowFilter}">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry id="color1" color="#FFC700" color.over="#FFD43B" color.down="#FFD43B" ratio="0.5" />
				<s:GradientEntry id="color2" color="#FF9D00" color.over="#FFE382" color.down="#FFE382"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
    
    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay  -->
    <s:Label id="labelDisplay"
             textAlign="center"
             maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="1" verticalAlign="middle"
             left="10" right="10" top="2" bottom="2">
    </s:Label>
    
</s:SparkButtonSkin>
