<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:bentoassets="skins.assets.*"
		xmlns:assets="skins.rotterdam.player.assets.*"
		xmlns:login="skins.rotterdam.player.assets.login.*"
		creationComplete="onCreationComplete(event)">

	<fx:Metadata>
		[HostComponent("com.clarityenglish.bento.view.login.LoginView")]
	</fx:Metadata>

    <fx:Style>
        @namespace s "library://ns.adobe.com/flex/spark";
        .signInHeader {
            fontSize: 15px;
            fontFamily: "Helvetica";
            fontWeight: "bold";
            color: #333333;
            textAlign: center;
        }
        .anonymousHeader {
            fontSize: 18px;
            fontFamily: "Helvetica";
            fontWeight: "bold";
            color: #333333;
            textAlign: center;
        }
        .signInPrompt {
            fontSize: 15px;
        }
        .buttonText {
            fontSize: 16px;
            fontFamily: "Helvetica";
            fontWeight: "bold";
            color: #FFFFFF;
        }
        .signInDetail {
            fontSize: 11px;
        }
    </fx:Style>

    <fx:Script>
        <![CDATA[
        import mx.core.FlexGlobals;

        protected function onCreationComplete(e:Event):void {
            // gh#1267
            if (hostComponent.isPlatformipad)
                FlexGlobals.topLevelApplication.resizeForSoftKeyboard = true;
        }

        protected function onLoginSoftKeyboardActivating(event:Event):void {
            if (height < 700 && hostComponent.isPlatformAndroid)
                signInGroup.verticalCenter = registerGroup.verticalCenter = -70;
        }

        protected function onLoginSoftKeyboardDeactivate(event:Event):void {
            if (height < 700 && hostComponent.isPlatformAndroid)
                signInGroup.verticalCenter = registerGroup.verticalCenter = 10;
        }

        protected var signInDetailsMargin:uint = 20;
        ]]>
    </fx:Script>

    <fx:Declarations>
		<s:GlowFilter id="glowFilter" alpha="0.60" blurX="8" blurY="8" color="#000000" knockout="true" quality="3" />
		<s:DropShadowFilter id="dropShadowFilter" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false"/>
		<s:DropShadowFilter id="dropShadowFilter2" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false" inner="true"/>
	</fx:Declarations>
	
	<!-- states -->
	<s:states>
		<s:State name="normal" />
		<s:State name="register" />
		<s:State name="error" />
		<s:State name="disabled" />
	</s:states>
	
	<!-- shadow -->
	<s:Rect top="0" bottom="0" left="0" right="0" filters="{glowFilter}" >
		<s:fill>
			<s:SolidColor color="0x808080" />
		</s:fill>
	</s:Rect>
	
	<!-- background gh#224 -->
	<s:Rect top="0" bottom="0" left="0" right="0" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" ratio="0" />
				<s:GradientEntry color="0xFFFFFF" ratio="0.3" />
				<s:GradientEntry color="0xE6E6E6" ratio="0.6" />
				<s:GradientEntry color="0xE6E6E6" ratio="1" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>		

	<!-- top header -->
	<s:Rect left="0" right="0" top="0" height="40"  >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x4D4D4D" />
				<s:GradientEntry color="0x333333"  />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- top header -->
	<s:Label text="{hostComponent.getCopyProvider().getCopyForId('licencedToName', {name: hostComponent.licenceeName})}" right="20" top="14" fontSize="13" color="0xFFFFFF" />
	
	<!-- gh#224 If it seems likely that more than 4 image components are needed, we should switch to a DataGroup and ItemRenderer -->
	<s:BitmapImage id="brandingImage1" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:BitmapImage id="brandingImage2" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:BitmapImage id="brandingImage3" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:BitmapImage id="brandingImage4" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:SWFLoader source="@Embed(source='/skins/rotterdam/player/assets/login/HoneyCones.png')" horizontalCenter="-260" top="330" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>
	<s:SWFLoader source="@Embed(source='/skins/rotterdam/player/assets/login/HoneyConesLarge.png')" horizontalCenter="250" top="360" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>
	<login:HoneyGraphic horizontalCenter="300" top="40" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>

	<!-- Sign in details -->
	<s:Group id="signInGroup" excludeFrom="register" verticalCenter="-70" horizontalCenter="0">
        <s:SkinnableContainer id="anonymousGroup" includeInLayout="{hostComponent.allowAnonymous}" visible="{hostComponent.allowAnonymous}">
            <s:VGroup paddingTop="{1.5*signInDetailsMargin}" paddingRight="{2*signInDetailsMargin}" paddingBottom="8" paddingLeft="{2*signInDetailsMargin}"
                      horizontalAlign="center" gap="10">
                <bentoassets:anonymousMask />
                <s:Rect height="5" />
                <s:Line width="90%" >
                    <s:stroke>
                        <s:SolidColorStroke color="#999999" weight="1" caps="square"/>
                    </s:stroke>
                </s:Line>
                <s:Label text="{hostComponent.anonymousCaption}" styleName="anonymousHeader" width="250" />
                <s:Line width="90%" >
                    <s:stroke>
                        <s:SolidColorStroke color="#999999" weight="1" caps="square"/>
                    </s:stroke>
                </s:Line>
                <s:Rect height="10" /> <!-- this is a spacer -->
                <s:Button id="anonymousStartButton" label="{hostComponent.anonymousStartButtonCaption}" styleName="buttonText" useHandCursor="true" buttonMode="true"/>
            </s:VGroup>
        </s:SkinnableContainer>
        <s:SkinnableContainer id="trackingGroup" includeInLayout="{hostComponent.allowLogin}" visible="{hostComponent.allowLogin}" left="{anonymousGroup.width+10}"  >
            <s:VGroup paddingTop="{2*signInDetailsMargin}" paddingRight="{signInDetailsMargin}" paddingBottom="8" paddingLeft="{signInDetailsMargin}"
                      horizontalAlign="center" gap="10">
                <s:Label text="{hostComponent.loginCaption}" styleName="signInHeader" width="260" />
                <s:TextInput id="loginKeyInput" prompt="{hostComponent.loginKeyCaption}" styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
                <s:VGroup visible="{hostComponent.verified}" includeInLayout="{hostComponent.verified}" gap="10" >
                    <s:TextInput id="passwordInput" displayAsPassword="true" prompt="{hostComponent.passwordCaption}" styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
                    <s:Button id="forgotPasswordButton" label="{hostComponent.forgotPasswordCaption}" useHandCursor="true" buttonMode="true"/>
                </s:VGroup>
                <s:VGroup width="100%" gap="0" includeInLayout="{hostComponent.allowSelfRegister}" visible="{hostComponent.allowSelfRegister}" >
                    <s:Button id="newUserButton" label="{hostComponent.newUserButtonCaption}" useHandCursor="true" buttonMode="true"
                              includeInLayout="{hostComponent.allowSelfRegister}" visible="{hostComponent.allowSelfRegister}" />
                    <s:Label id="loginDetail" text="{hostComponent.loginDetail}" styleName="signInDetail" width="260" />
                </s:VGroup>
                <s:Rect height="2" /> <!-- this is a spacer -->
                <s:Button id="loginButton" label="{hostComponent.loginButtonCaption}" styleName="buttonText" useHandCursor="true" buttonMode="true" />
            </s:VGroup>
        </s:SkinnableContainer>
	</s:Group>

	<!-- self register screen -->
	<s:SkinnableContainer id="registerGroup" excludeFrom="normal" verticalCenter="-70" horizontalCenter="0" >
        <s:VGroup paddingTop="{2*signInDetailsMargin}" paddingRight="{signInDetailsMargin}" paddingBottom="8" paddingLeft="{signInDetailsMargin}"
                  horizontalAlign="center" gap="10" >
            <s:Label text="{hostComponent.selfRegisterCaption}" styleName="signInHeader"  />
            <s:TextInput id="selfRegisterName" prompt="{hostComponent.selfRegisterNameCaption}"
                         includeInLayout="{hostComponent.selfRegisterNameCaption != null}" visible="{hostComponent.selfRegisterNameCaption != null}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="selfRegisterId" prompt="{hostComponent.selfRegisterIdCaption}"
                         includeInLayout="{hostComponent.selfRegisterIdCaption != null}" visible="{hostComponent.selfRegisterIdCaption != null}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="selfRegisterEmail" prompt="{hostComponent.selfRegisterEmailCaption}"
                         includeInLayout="{hostComponent.selfRegisterEmailCaption != null}" visible="{hostComponent.selfRegisterEmailCaption != null}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="selfRegisterPassword" displayAsPassword="true" prompt="{hostComponent.selfRegisterPasswordCaption}"
                         includeInLayout="{hostComponent.verified}" visible="{hostComponent.verified}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="confirmPassword" displayAsPassword="true" prompt="{hostComponent.confirmPasswordCaption}"
                         includeInLayout="{hostComponent.verified}" visible="{hostComponent.verified}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:Label id="selfRegisterDetail" text="{hostComponent.selfRegisterDetail}" styleName="signInDetail" width="260" />
            <s:HGroup gap="20">
                <s:Button id="cancelButton" label="{hostComponent.cancelButtonCaption}" styleName="buttonText" />
                <s:Button id="addUserButton" label="{hostComponent.addUserButtonCaption}" styleName="buttonText" />
            </s:HGroup>
        </s:VGroup>
	</s:SkinnableContainer>
	
	<s:BitmapImage source="@Embed(source='/skins/rotterdam/player/assets/login/CCBLogo.png')" horizontalCenter="0" bottom="100" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}" />
</s:Skin>
