<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:ui="com.clarityenglish.bento.view.progress.ui.*"
		creationComplete="onCreationComplete(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.bento.view.progress.components.ProgressAnalysisView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.bento.view.progress.components.ProgressAnalysisView;
			
			import mx.events.FlexEvent;
			
			protected function onCreationComplete(event:FlexEvent):void {
				hostComponent.type = ProgressAnalysisView.UNIT_BASED;
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="disabled" />
		
		<s:State name="normal" />
		<s:State name="blocked" />
		<s:State name="blockedScore" />
		<s:State name="blockedDuration" />
		<s:State name="demo"  />
	</s:states>
	
	<s:Label id="analysisInstructionLabel1" left="20" top="60" />
	<s:Label id="analysisInstructionLabel2" left="20" top="90" />
	<s:Label id="analysisTimeLabel" fontSize="16" left="20" top="120" />
	
	<ui:StackedCircleChart id="stackedChart" right="0" width="180" height="180" />
	
	<s:DataGroup id="durationDataGroup" left="20" top="220">
		<s:layout>
			<s:TileLayout horizontalGap="15" verticalGap="15" requestedColumnCount="3" />
		</s:layout>
		<s:itemRenderer>
			<fx:Component>
				<s:DataRenderer width="190" height="136">
					<fx:Script>
						<![CDATA[
							import com.clarityenglish.bento.model.DataProxy;
							import com.clarityenglish.common.model.interfaces.CopyProvider;
							
							import spark.components.DataGroup;
							import spark.components.supportClasses.ItemRenderer;
							
							[Bindable]
							public var copyProvider:CopyProvider;
							
							[Bindable("dataChange")]
							public function get strokeColour():Number {
								// Cycle the stroke colour through the 'unitColours' array (defined in the global tag of player.css)
								var itemIndex:int = (owner as DataGroup).dataProvider.getItemIndex(data);
								var unitColours:Array = getStyle("unitColours");
								return unitColours[itemIndex % unitColours.length];
							}
						]]>
					</fx:Script>
					<s:Rect left="0" right="0" top="0" bottom="0" radiusX="8" radiusY="8">
						<s:stroke>
							<s:SolidColorStroke color="{strokeColour}" weight="2" />
						</s:stroke>
					</s:Rect>
				</s:DataRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:DataGroup>
	
</s:Skin>
