<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:ui="com.clarityenglish.ielts.view.progress.ui.*"
		xmlns:skins="skins.ielts.progress.*"
		xmlns:ns1="com.anychart.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.ielts.view.progress.components.ProgressCoverageView")]
	</fx:Metadata>
	
	<fx:Script> 
		<![CDATA[ 
			import spark.events.IndexChangeEvent; 
			
			private function courseChangeHandler(event:IndexChangeEvent):void { 
				trace("Selected button label: " + event.target.selectedItem.label.toLowerCase()); 
				hostComponent.onCourseSelect(event.target.selectedItem.label.toLowerCase());
			} 
		]]> 
	</fx:Script> 
	
	<s:layout >
		<s:VerticalLayout paddingLeft="0" paddingTop="2" />
	</s:layout>
	
	<!-- <ui:ProgressCourseBarComponent id="progressCourseBar" width="100%" height="50" left="200" /> -->

	<s:Group width="100%">
		<s:ButtonBar id="progressCourseButtonBar" height="50"
					 requireSelection="true" 
					 change="courseChangeHandler(event);">
			<s:dataProvider>
				<s:ArrayList>
					<fx:Object label="Reading" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='ReadingIconSmall')" /> 
					<fx:Object label="Listening" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='ListeningIconSmall')" /> 
					<fx:Object label="Speaking" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='SpeakingIconSmall')" /> 
					<fx:Object label="Writing" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='WritingIconSmall')" />
				</s:ArrayList>
			</s:dataProvider>
		</s:ButtonBar>
	</s:Group>
	<s:Group width="100%" left="100" >
		<ui:ProgressBarRenderer id="progressBar" width="100%" height="60"/>
	</s:Group>

	<s:HGroup width="100%" height="100%" top="100" >
		<ui:CoverageExerciseComponent id="questionZoneCoverage" width="20%"
									  caption="Starting out"
									  dataProvider="{hostComponent.questionZoneDataProvider}" />
		<ui:CoverageExerciseComponent id="adviceZoneCoverage" width="20%"
									  caption="Advice and tutorials"
									  dataProvider="{hostComponent.adviceZoneDataProvider}" />
		<ui:CoverageExerciseComponent id="examPracticeCoverage"
									  caption="Test practice"
									  dataProvider="{hostComponent.examPracticeDataProvider}" />
		<ui:CoverageUnitComponent id="practiceZoneCoverage"
								  caption="Practice zone" 
								  dataProvider="{hostComponent.practiceZoneDataProvider}"  />
	</s:HGroup>

</s:Skin>