<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the first button in a Spark ButtonBar component.

 @see spark.components.ButtonBar
 @see spark.components.ButtonBarButton

 @langversion 3.0
 @playerversion Flash 10
 @playerversion AIR 1.5
 @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="90" minHeight="21"
                   alpha.disabled="0.5"
                   creationComplete="onCreationComplete(event)">

    <!-- host component -->
    <fx:Metadata>
		<![CDATA[
        /**
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.ButtonBarButton")]
        ]]>
	</fx:Metadata>

    <fx:Script>
		<![CDATA[
        import com.clarityenglish.ielts.view.zone.ZoneView;
        import com.clarityenglish.ielts.view.zone.ui.ZoneButtonBar;

        [Bindable]
        public var tabBar:ZoneButtonBar;

        public function onCreationComplete(event:Event):void {
            tabBar = parentDocument["hostComponent"];
        }
        ]]>
	</fx:Script>
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>

    <s:Group left="0" right="0" top="0" bottom="0">
        <!-- layer 2: fill -->
        <!--- @private -->
        <s:Rect id="fill" left="0" right="0" top="0" bottom="0">
            <s:fill>
                <s:LinearGradient rotation="90">
                    <s:GradientEntry color.up="#4A4A4B" color.over="#4A4A4B" color.down="#202020" color.selectedStates="{tabBar.selectedColor}" ratio="0"/>
                    <s:GradientEntry color.up="#4A4A4B" color.over="#4A4A4B" color.down="#202020" color.selectedStates="{tabBar.selectedColor}" ratio="0.2"/>
                    <s:GradientEntry color.up="#222222" color.over="#222222" color.down="#202020" color.selectedStates="{tabBar.selectedColor}" ratio="1"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>

        <!-- layer 7: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
        <!--- @private -->
        <s:Rect id="border" left="0" right="0" top="0" bottom="0">
            <s:stroke>
                <s:SolidColorStroke color="#E1E1E1" alpha="0.2" />
            </s:stroke>
        </s:Rect>
    </s:Group>

    <!-- layer 8: text -->
    <!---  @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
    <s:Label id="labelDisplay"
             textAlign="center"
             verticalAlign="middle"
             maxDisplayedLines="1"
             horizontalCenter="0" verticalCenter="3"
             left="10" right="10" top="2" bottom="2">
    </s:Label>

</s:SparkButtonSkin>