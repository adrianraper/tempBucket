<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:ui="com.clarityenglish.ielts.view.zone.ui.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.ielts.view.zone.ui.PopoutExerciseSelector")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ListEvent;
			import com.clarityenglish.ielts.view.zone.ZoneView;

			protected function onExerciseListItemRollOver(event:ListEvent):void {
				// On rollover change the thumbnail and difficulty renderers
				difficultyRenderer.data = event.item;
				imageItemRenderer.data = event.item;
			}
			protected function onExerciseListItemRollOut(event:ListEvent):void {
				// On rollout change back to the default
				difficultyRenderer.data = null;
				imageItemRenderer.data = null;
			}
			
		]]>
	</fx:Script>
	
	<!-- #212; make an invisible area around the popout to catch the rollOut event -->
	<s:Rect left="0" top="0" right="0" bottom="0">
		<s:fill>
			<s:SolidColor color="black" alpha="0" />
		</s:fill>
	</s:Rect>
	
	<s:Group left="0" top="0" right="0" bottom="30">
		
		<!-- drop shadow -->
		<s:Rect left="0" top="0" right="0" bottom="0" topLeftRadiusX="10" topLeftRadiusY="10" bottomLeftRadiusX="10" bottomLeftRadiusY="10" >
			<s:filters>
				<s:DropShadowFilter 
					blurX="6" blurY="6" 
					alpha="0.8" 
					distance="2" 
					angle="180"
					knockout="true"/>
			</s:filters>
			<s:fill>
				<s:SolidColor color="0x000000" alpha="1"/>
			</s:fill>
		</s:Rect>
	
		<s:Rect id="container" width="100%" height="100%" topLeftRadiusX="8" topLeftRadiusY="10" bottomLeftRadiusX="8" bottomLeftRadiusY="10">
			<s:stroke>
				<s:SolidColorStroke color="#B3B3B3" />
			</s:stroke>
			<s:fill>
				<s:LinearGradient rotation="0">
					<s:GradientEntry color="0xB3B3B3" ratio="0" />
					<s:GradientEntry color="0xFFFFFF" ratio="0.03" />
					<s:GradientEntry color="0xFFFFFF" ratio="0.98" />
					<s:GradientEntry color="0xB3B3B3" ratio="1" />
				</s:LinearGradient>
			</s:fill>
		</s:Rect>
		
		<s:VGroup left="24" right="25" top="20" bottom="20">
			<s:Label text="{hostComponent.group.@caption}" fontSize="18" />
			
			<s:HGroup>
				<s:VGroup width="149" >
					<ui:ImageItemRenderer id="imageItemRenderer" width="149" height="160" href="{hostComponent.href}" courseClass="{hostComponent.courseClass}" />
					<ui:DifficultyRenderer id="difficultyRenderer" courseClass="{hostComponent.courseClass}" />		
				</s:VGroup>
				
				<s:List id="exerciseList" borderVisible="false" dataProvider="{new XMLListCollection(hostComponent.exercises)}" 
						itemRollOver="onExerciseListItemRollOver(event)" itemRollOut="onExerciseListItemRollOut(event)">
					<s:layout>
						<s:VerticalLayout gap="1" />
					</s:layout>
					
					<s:itemRenderer>
						<fx:Component>
							<s:ItemRenderer>
								<fx:Script>
									<![CDATA[
										import com.clarityenglish.bento.vo.content.Exercise;									
										public override function set data(value:Object):void {
											
											super.data = value;
											captionLabel.text = value.@caption;
											// Check to see if the exercise is disabled.
											enabled = Exercise.exerciseEnabledInMenu(value as XML);
											//trace("set " + value.@caption + " enabled=" + enabled.toString() + "(@eF=" + value.@enabledFlag + ")");
											var courseColor:Number = getStyle(outerDocument.hostComponent.courseClass + 'Color'); 
											fillColor.color = (Number(data.@done.toString())>0) ? courseColor : 0xB3B3B3;
										}
									]]>
								</fx:Script>
								<s:HGroup verticalAlign="middle" left="7" paddingTop="5" paddingBottom="5" paddingRight="7">
									<s:Rect top="2" width="8" height="8" radiusX="2" radiusY="2">
										<s:fill>
											<s:SolidColor id="fillColor" />
										</s:fill>
									</s:Rect>
									<s:Label id="captionLabel" left="0" fontSize="12.6" paddingTop="4" />
								</s:HGroup>
							</s:ItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:List>
			</s:HGroup>
			
		</s:VGroup>
	</s:Group>
	
</s:Skin>
