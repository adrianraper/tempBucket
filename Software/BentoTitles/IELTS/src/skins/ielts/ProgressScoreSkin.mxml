<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:ui="com.clarityenglish.ielts.view.progress.ui.*"
		xmlns:ns1="com.anychart.*" >
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.ielts.view.progress.components.ProgressScoreView")]
	</fx:Metadata>

	<fx:Script> 
		<![CDATA[ 
			import spark.events.IndexChangeEvent; 
			
			private function courseChangeHandler(event:IndexChangeEvent):void { 
				hostComponent.onCourseSelect(event.target.selectedItem.label.toLowerCase());
			} 
		
			/**
			 * Sort the scores so that --- is less than 0
			 */
			private function sortScores(obj1:Object, obj2:Object, gc:GridColumn):int  {
				if (obj1[gc.dataField] == obj2[gc.dataField])
					return 0;
				
				if (obj1[gc.dataField].indexOf('-') >= 0) 
					return -1;
				
				if (obj2[gc.dataField].indexOf('-') >= 0) 
					return 1;
				
				if (Number(obj1[gc.dataField]) < Number(obj2[gc.dataField]))
					return -1;
				
				 return 1;
			}
			private function sortDuration(obj1:Object, obj2:Object, gc:GridColumn):int  {
				if (obj1[gc.dataField] == obj2[gc.dataField])
					return 0;
				
				if (Number(obj1[gc.dataField]) < Number(obj2[gc.dataField]))
					return -1;
				
				return 1;
			}
			private function sortUnits(obj1:Object, obj2:Object, gc:GridColumn):int  {
				if (obj1[gc.dataField] == obj2[gc.dataField])
					return 0;
				
				// Try to catch unit names with numbers in them
				if ((obj1[gc.dataField].substr(0,4).toLowerCase() == 'set ') && 
					(obj2[gc.dataField].substr(0,4).toLowerCase() == 'set ')) {
					if (Number(obj1[gc.dataField].substr(4)) < Number(obj2[gc.dataField].substr(4)))
						return -1;
				}
				
				return 1;
			}
			/**
			 * Display duration in a friendly format
			 * Convert from seconds to a nice string
			 */
			private function displayDuration(score:Object, column:GridColumn):String {
				
				var seconds:Number = Number(score.@duration);
				var minutes:Number = Math.round(seconds / 60);

				if (minutes < 1)
					return "<" + pluralUnits(1, "min");

				if (minutes < 60)
					return pluralUnits(minutes, "min");
				
				// Any figures after here will use hour and modulus of the minutes
				minutes = Math.floor(seconds / 60);
				var hours:Number = Math.floor(minutes / 60);
				minutes = minutes % 60;
				
				return pluralUnits(hours, "hr") + " " + pluralUnits(minutes, "min");
			}
			/**
			 * Utility function for 0, 1 and more of a unit
			 */
			private function pluralUnits(value:uint, unit:String):String {
				if (value==0)
					return "";
				if (value==1)
					return "1 " + unit;
				return value.toString() + " " + unit + "s";
			}

		]]> 
	</fx:Script> 
	
	<s:layout >
		<s:VerticalLayout paddingLeft="0" paddingTop="2" />
	</s:layout>

	<s:Group width="100%" >
		<s:ButtonBar id="progressCourseButtonBar" height="50" 
					 requireSelection="true" 
					 change="courseChangeHandler(event);">
			<s:dataProvider>
				<s:ArrayList>
					<fx:Object label="Reading" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='ReadingIconSmall')" /> 
					<fx:Object label="Listening" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='ListeningIconSmall')" /> 
					<fx:Object label="Speaking" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='SpeakingIconSmall')" /> 
					<fx:Object label="Writing" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='WritingIconSmall')" />
				</s:ArrayList>
			</s:dataProvider>
		</s:ButtonBar>
	</s:Group>
	
	<ui:ProgressBarRenderer id="progressBar" width="100%" height="60" />
	
	<s:HGroup width="100%" height="100%">
		<s:DataGrid id="scoreDetailsDataGrid" fontSize="12" alternatingRowColors="[#FFFFFF, #DDDDDD]" width="100%" height="93%" borderVisible="false" dataProvider="{hostComponent.tableDataProvider}" >
			<s:columns>
				<s:ArrayList>
					<s:GridColumn headerText="Unit" dataField="@unitCaption" sortCompareFunction="sortUnits" />
					<s:GridColumn headerText="Exercise" dataField="@caption" />
					<s:GridColumn headerText="Score %" dataField="@displayScore" sortCompareFunction="sortScores" />
					<s:GridColumn headerText="Time spent" dataField="@duration" sortCompareFunction="sortDuration" labelFunction="displayDuration" />
					<s:GridColumn headerText="Date" dataField="@datetime" />
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
	</s:HGroup>
	

		
</s:Skin>