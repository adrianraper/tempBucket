<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:local="*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.ielts.view.account.AccountView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import org.davekeen.util.DateUtil;
			import com.clarityenglish.common.vo.manageable.User;
			
			// TODO. There is a dateFormatter in configProxy that we should probably use
			// See HomeMediator for how it is injected into that view.
			import mx.events.CalendarLayoutChangeEvent;
			private function formatExamDetails(userDetails:User, type:String):String {
				// If examDate is not set, then default to expiryDate - 1 week
				if (userDetails.examDate) {
					var myDate:Date = userDetails.examDate;
				} else if (userDetails.expiryDate) {
						myDate = DateUtil.dateAdd(DateUtil.ansiStringToDate(userDetails.expiryDate), "d", -7);	
				} else {
					myDate = new Date();
				}
				switch (type) {
					case 'date':
						return DateUtil.formatDate(myDate,'yyyy-MM-dd');
						break;
					case 'hours':
						return DateUtil.formatDate(myDate,'HH');
						break;
					case 'mins':
						return DateUtil.formatDate(myDate,'mm');
						break;
				}
				return null;
			}
			private function dateChooserInit(userDetails:User):void {
				examDateField.selectedDate = userDetails.examDate;
				// Registration might be a long time ago - not much point being able to select anything in the past
				//var selectStartDate:Date = (userDetails.registrationDate) ? DateUtil.ansiStringToDate(userDetails.registrationDate) : new Date();
				var selectStartDate:Date = new Date();
				//var selectEndDate:Date = new Date((new Date().getTime() + (365*24*60*60*1000)));
				var selectEndDate:Date = DateUtil.dateAdd(selectStartDate, "y", 1);
				examDateField.selectableRange = {rangeStart: selectStartDate, rangeEnd: selectEndDate};
			}
			private function formatScreenDate(date:Date):String {
				return DateUtil.formatDate(date,'d MMMM yyyy');
			}
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:HorizontalLayout paddingTop="50" />
	</s:layout>
	
	<s:VGroup width="50%" paddingTop="20" >
		
		<s:Label text="My Profile" fontSize="20" width="50%" />
		<s:Rect left="100" right="0" top="100" bottom="0" width="100%" height="1" >
			<s:fill>
				<s:SolidColor color="0x999999" />
			</s:fill>
		</s:Rect>
		
		<s:Spacer height="5" />
		
		
		<s:VGroup width="120" height="100%" >	
			<local:CountdownDisplay id="countdownDisplay" targetDate="{hostComponent.userDetails.examDate}"/>
			
			<s:Spacer height="3" />
			
			<s:HGroup width="100%" height="100%" top="96" >
				<s:VGroup paddingTop="3">
					
					<s:Label id="countdownLabel" fontWeight="bold"  />
					
					<s:HGroup paddingTop="5">
						<s:VGroup width="100%" height="100%" top="150"  >
							<s:Label text="Date:" verticalAlign="bottom"  />
							<mx:DateField id="examDateField" creationComplete="dateChooserInit(hostComponent.userDetails);" 
										  labelFunction="formatScreenDate" />
						</s:VGroup>
						
						<s:VGroup>
							<s:Label text="Hour:" verticalAlign="bottom"  />
							<s:NumericStepper id="examHours" minimum="0" maximum="23" stepSize="1" 
											  value="{Number(formatExamDetails(hostComponent.userDetails, 'hours'))}" textAlign="center"/>
						</s:VGroup>
						
						<s:VGroup>
							<s:Label text="Minute:" verticalAlign="bottom"  />
							<s:NumericStepper id="examMinutes" minimum="0" maximum="45" stepSize="15" 
											  value="{Number(formatExamDetails(hostComponent.userDetails, 'mins'))}" textAlign="center"/>
						</s:VGroup>
						
					</s:HGroup>
							
						
					
					<s:VGroup paddingTop="13">	
						<s:HGroup>
							<s:Label text="Registered name:" />
							<s:Spacer width="30"/>
							<s:Label text="{hostComponent.userDetails.fullName}" fontWeight="bold" />
						</s:HGroup>
						<s:Spacer height="3" />
						<s:HGroup>
							<s:Label text="Email:"/>
							<s:Spacer width="94"/>
							<s:Label text="{hostComponent.userDetails.email}" fontWeight="bold" />
						</s:HGroup>
						<s:Spacer height="3" />
						<s:HGroup>
							<s:Label text="Account start date:"/>
							<s:Spacer width="22"/>
							<s:Label text="{DateUtil.formatDate(DateUtil.ansiStringToDate(hostComponent.userDetails.registrationDate),'d MMMM yyyy')}" fontWeight="bold"/>		
						</s:HGroup>
						<s:Spacer height="3" />
						<s:HGroup>
							<s:Label text="Account expiry date:"/>		
							<s:Spacer width="13"/>
							<s:Label text="{DateUtil.formatDate(DateUtil.ansiStringToDate(hostComponent.userDetails.expiryDate),'d MMMM yyyy')}" fontWeight="bold"/>
						</s:HGroup>
						<s:Spacer height="3" />
							<s:HGroup includeInLayout="{hostComponent.productVersion!='lastMinute'}" >
								<s:Label text="Current password:" />
								<s:Spacer width="24"/>
								<s:TextInput id="currentPassword" width="180" />
							</s:HGroup>
							<s:Spacer height="3" />
							<s:HGroup includeInLayout="{hostComponent.productVersion!='lastMinute'}" >
								<s:Label text="New password:"  />
								<s:Spacer width="40"/>
								<s:TextInput id="newPassword" width="180" />
							</s:HGroup>
							<s:Spacer height="3" />
							<s:HGroup includeInLayout="{hostComponent.productVersion!='lastMinute'}" >
								<s:Label text="Confirm password:"  />
								<s:Spacer width="22"/>
								<s:TextInput id="confirmPassword" width="180" />
							</s:HGroup>

				</s:VGroup>
				</s:VGroup>
			</s:HGroup>
		</s:VGroup>
		
		<s:Spacer height="3" />
		
		<s:Button id="saveChangesButton" label="Save changes" />
		
	</s:VGroup>
	
	<s:VGroup width="50%" paddingTop="20" >
		<s:Label text="IELTS Apps" fontSize="20" width="50%" />
		
		<s:Rect left="100" right="0" top="180" bottom="0" width="100%" height="1" >
			<s:fill>
				<s:SolidColor color="0x999999" />
			</s:fill>
		</s:Rect>
		<!-- 						 
		source="@Embed(source='skins/ielts/assets/countdown.swf?widgetdatawidth=200&widgetdataheight=300&widgetdatalanguage=EN&widgetdatacountry=none&widgetdatabclogo=true')"
		-->
		<s:Group width="241" height="301">
			<s:SWFLoader source="@Embed(source='skins/ielts/assets/bcwidget.png')" width="100%" top="8" />
		</s:Group>
	</s:VGroup>
</s:Skin>