<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:local="*"
        xmlns:ui="com.clarityenglish.ielts.view.account.ui.*"
        xmlns:components="com.clarityenglish.components.*">
    <!-- host component -->
    <fx:Metadata>
        [HostComponent("com.clarityenglish.ielts.view.account.AccountView")]
    </fx:Metadata>

    <fx:Script>
		<![CDATA[
        import com.clarityenglish.common.vo.content.Title;
        import com.clarityenglish.common.vo.manageable.User;

        import org.davekeen.util.DateUtil;

        private function formatExamDetails(user:User, type:String):String {
            // If examDate is not set, then default to expiryDate - 1 week
            if (user.examDate) {
                var myDate:Date = user.examDate;
            } else if (user.expiryDate) {
                myDate = DateUtil.dateAdd(DateUtil.ansiStringToDate(user.expiryDate), "d", -7);
            } else {
                myDate = new Date();
            }
            switch (type) {
                case 'date':
                    return DateUtil.formatDate(myDate, 'yyyy-MM-dd');
                    break;
                case 'hours':
                    return DateUtil.formatDate(myDate, 'HH');
                    break;
                case 'mins':
                    return DateUtil.formatDate(myDate, 'mm');
                    break;
            }
            return null;
        }

        private function dateChooserInit(user:User):void {
            examDateField.selectedDate = user.examDate;
            // Registration might be a long time ago - not much point being able to select anything in the past
            var selectStartDate:Date = new Date();
            var selectEndDate:Date = DateUtil.dateAdd(selectStartDate, "y", 1);
            examDateField.selectableRange = {rangeStart: selectStartDate, rangeEnd: selectEndDate};
        }

        private function formatScreenDate(thisDate:Date):String {
            if (thisDate) {
                var repObject:Object = new Object();
                repObject.day = thisDate.date;
                repObject.year = thisDate.fullYear;
                // gh#163 - probably better to get language code from explicit setting in the view
                //Alice delete this part for 1. TD failed to work. 2. useless
                /*if (languageDropDownList.selectedItem.data == "ZH") {
                 repObject.month = thisDate.month + 1;
                 } else {*/
                repObject.month = DateUtil.formatDate(thisDate, 'MMMM');
                //}
                return hostComponent.hostCopyProvider.getCopyForId("dateFormatLabel", repObject);
            }
            return '';
        }
        ]]>
	</fx:Script>

    <s:states>
        <s:State name="disabled"/>
        <s:State name="normal"/>

        <s:State name="demo" stateGroups="anonymousStates"/>
        <s:State name="fullVersion_anonymous" stateGroups="anonymousStates,fullVersionStates"/>
        <s:State name="fullVersion" stateGroups="fullVersionStates"/>
        <s:State name="lastMinute"/>
        <s:State name="homeUser"/>
        <s:State name="testDrive" stateGroups="anonymousStates"/>
    </s:states>

    <fx:Declarations>
        <s:DropShadowFilter id="dropShadowFilter" color="#CCCCCC" blurX="5" blurY="5" alpha="0.75" distance="1" angle="180" knockout="false"/>
    </fx:Declarations>

    <s:layout>
        <s:VerticalLayout paddingTop="60"/>
    </s:layout>

    <s:HGroup width="100%" gap="20">
        <s:VGroup paddingTop="20" filters="{dropShadowFilter}">

            <s:Label id="myProfileLabel" fontSize="20" fontWeight="bold" width="100%" paddingLeft="5"/>

            <s:Group width="385" height="505">
                <s:Rect left="0" right="0" top="0" bottom="0" radiusX="6" radiusY="6">
                    <s:fill>
                        <s:SolidColor color="#F1F1F3"/>
                    </s:fill>
                    <s:stroke>
                        <s:LinearGradientStroke rotation="90" weight="3">
                            <s:GradientEntry color="#FFFFFF" ratio="0.3" />
                            <s:GradientEntry color="#E0E0E0" ratio="1" />
                        </s:LinearGradientStroke>
                    </s:stroke>
                </s:Rect>

                <s:VGroup left="30" top="20" width="320" height="100%">
                    <s:Label id="countdownHeadingLabel" fontWeight="bold" />
                    <s:Spacer height="2"/>
                    <s:HGroup>
                        <s:VGroup width="100%" height="100%" top="150">
                            <s:Label id="dateLabel" verticalAlign="bottom"/>
                            <mx:DateField id="examDateField" creationComplete="dateChooserInit(hostComponent.user);"
                                          labelFunction="formatScreenDate" fontFamily="HelveticaMX"/>
                        </s:VGroup>

                        <s:VGroup>
                            <s:Label id="hourLabel" verticalAlign="bottom"/>
                            <s:NumericStepper id="examHours" minimum="0" maximum="23" stepSize="1"
                                              value="{Number(formatExamDetails(hostComponent.user, 'hours'))}"
                                              textAlign="center"/>
                        </s:VGroup>

                        <s:VGroup>
                            <s:Label id="minuteLabel" verticalAlign="bottom"/>
                            <s:NumericStepper id="examMinutes" minimum="0" maximum="45" stepSize="15"
                                              value="{Number(formatExamDetails(hostComponent.user, 'mins'))}"
                                              textAlign="center"/>
                        </s:VGroup>
                    </s:HGroup>
                    <s:Spacer height="5"/>
                    <s:Label id="countdownLabel" left="5" fontWeight="bold"/>
                    <s:Spacer height="2"/>
                    <local:CountdownDisplay id="countdownDisplay" targetDate="{hostComponent.user.examDate}"/>
                    <s:Spacer height="5"/>

                    <s:VGroup width="100%" top="96">
                        <s:SWFLoader width="100%" height="100%"
                                     source="{hostComponent.assetFolder}profile_demo.png"
                                     includeIn="demo"/>

                        <s:VGroup paddingLeft="-5" paddingRight="-5" width="100%" height="10">
                            <s:Rect width="100%" height="1">
                                <s:fill>
                                    <s:SolidColor color="0x999999"/>
                                </s:fill>
                            </s:Rect>
                        </s:VGroup>

                        <!-- This is the user's details section -->
                        <s:VGroup excludeFrom="anonymousStates" gap="15">
                            <s:HGroup width="320">
                                <s:Label id="registeredNameLabel"/>
                                <s:Spacer width="100%"/>
                                <s:Label text="{hostComponent.user.fullName}" fontWeight="bold"/>
                            </s:HGroup>
                            <s:HGroup width="320">
                                <s:Label id="emailLabel"/>
                                <s:Spacer width="100%"/>
                                <s:Label text="{hostComponent.user.email}" fontWeight="bold"/>
                            </s:HGroup>
                            <!-- gh#38 -->
                            <s:HGroup width="320" visible="{hostComponent.startDate != null}"
                                      includeInLayout="{hostComponent.startDate != null}">
                                <s:Label id="accountStartDateLabel"/>
                                <s:Spacer width="100%"/>
                                <s:Label id="startDateLabel" fontWeight="bold"/>
                            </s:HGroup>
                            <s:HGroup width="320" visible="{hostComponent.expiryDate != null}"
                                      includeInLayout="{hostComponent.expiryDate != null}">
                                <s:Label id="accountExpiryDateLabel"/>
                                <s:Spacer width="100%"/>
                                <s:Label id="endDateLabel" fontWeight="bold"/>
                            </s:HGroup>
                            <!-- gh#163 -->
                            <!--s:VGroup>
                                <s:HGroup width="320">
                                    <s:Label id="currentPwdLabel"/>
                                    <s:Spacer width="100%"/>
                                    <s:TextInput id="currentPassword" width="180"/>
                                </s:HGroup>
                                <s:Spacer height="3"/>
                                <s:HGroup width="320">
                                    <s:Label id="newPwdLabel"/>
                                    <s:Spacer width="100%"/>
                                    <s:TextInput id="newPassword" width="180"/>
                                </s:HGroup>
                                <s:Spacer height="3"/>
                                <s:HGroup width="320">
                                    <s:Label id="confirmPwdLabel"/>
                                    <s:Spacer width="100%"/>
                                    <s:TextInput id="confirmPassword" width="180"/>
                                </s:HGroup>
                                <s:Spacer height="3"/>
                            </s:VGroup-->
                        </s:VGroup>
                        <!-- gh#166 Everyone can see the language selection -->
                        <!--s:VGroup>
                            <s:HGroup width="320">
                                <s:Label id="languageLabel" left="20" top="10"/>
                                <s:Spacer width="100%"/>
                                <s:DropDownList id="languageDropDownList" fontSize="15" left="180" top="10"
                                                width="150"/>
                            </s:HGroup>
                        </s:VGroup-->
                    </s:VGroup>

                    <s:Spacer height="3"/>

                    <s:Button id="saveChangesButton" width="135" height="30"
                              excludeFrom="anonymousStates"
                              includeInLayout="{hostComponent.isDirty}"
                              visible="{hostComponent.isDirty}" useHandCursor="true" buttonMode="true" />
                </s:VGroup>
            </s:Group>
        </s:VGroup>

        <s:VGroup paddingTop="20" filters="{dropShadowFilter}">
            <s:Label id="myToolsLabel" fontSize="20" fontWeight="bold" width="50%" paddingLeft="5"/>

            <s:Group width="565" height="505">
                <s:Rect left="0" right="0" top="0" bottom="0" radiusX="6" radiusY="6">
                    <s:fill>
                        <s:SolidColor color="#F1F1F3"/>
                    </s:fill>
                    <s:stroke>
                        <s:LinearGradientStroke rotation="90" weight="3">
                            <s:GradientEntry color="#FFFFFF" ratio="0.3" />
                            <s:GradientEntry color="#E0E0E0" ratio="1" />
                        </s:LinearGradientStroke>
                    </s:stroke>
                </s:Rect>

                <s:VGroup width="100%" top="20" gap="7">
                    <s:Label id="calculatorLabel" paddingLeft="20" fontWeight="bold"/>
                    <s:HGroup id="calCulatorGroup" height="300" paddingLeft="35" gap="14">
                        <s:Group>
                            <s:Rect width="240" height="300">
                                <s:fill>
                                    <s:SolidColor color="#FFFFFF"/>
                                </s:fill>
                            </s:Rect>
                            <s:SWFLoader source="@Embed(source='/skins/ielts/assets/PredictYourBandScore.swf')"/>
                        </s:Group>
                        <s:Group>
                            <s:Rect width="240" height="300">
                                <s:fill>
                                    <s:SolidColor color="#FFFFFF"/>
                                </s:fill>
                            </s:Rect>
                            <s:SWFLoader source="@Embed(source='/skins/ielts/assets/BandScoreCalculator.swf')"/>
                        </s:Group>
                    </s:HGroup>
                    <s:Spacer height="8"/>
                    <s:Label id="studyGuideLabel" paddingLeft="20" paddingBottom="-8" fontWeight="bold"/>
                    <s:VGroup width="100%" paddingLeft="8">
                        <s:List id="studyGuideList" width="100%" height="195" borderVisible="false" contentBackgroundAlpha="0" horizontalScrollPolicy="off">
                            <s:layout>
                                <s:HorizontalLayout gap="0"/>
                            </s:layout>
                            <s:itemRenderer>
                                <fx:Component>
                                    <s:ItemRenderer autoDrawBackground="false">
                                        <ui:StudyGuideButton id="studyGuideButton" itemIndex="{itemIndex}"
                                                             linkSource="{outerDocument.hostComponent.copyProvider.getCopyForId('studyGuideButtonLink' + (itemIndex + 1))}" buttonMode="true" useHandCursor="true"/>
                                    </s:ItemRenderer>
                                </fx:Component>
                            </s:itemRenderer>
                        </s:List>
                    </s:VGroup>
                </s:VGroup>
                <!--s:SWFLoader width="100%" height="100%" source="{hostComponent.assetFolder}widget_demo.png"
                             includeIn="demo" /-->
            </s:Group>
        </s:VGroup>
    </s:HGroup>
    <s:Group width="100%" includeIn="testDrive">
        <s:Button id="registerInfoButton" width="100%" useHandCursor="true" buttonMode="true"/>
        <!-- Need this extra group to get the mouse to NOT react to the labels -->
        <s:Group width="100%" mouseChildren="false" mouseEnabled="false">
            <s:VGroup width="100%" paddingTop="20" paddingLeft="20">
                <s:Label id="registerInfoRichText" color="0xFFFFFF" fontWeight="bold" lineHeight="24" fontSize="18"
                         width="50%"/>
                <s:Label id="videoRichText" color="0xFFFFFF" width="50%" enabled="false" mouseEnabled="false"/>
                <s:Label id="mockTestRichText" color="0xFFFFFF" width="50%" enabled="false" mouseEnabled="false"/>
                <s:Label id="hourRichText" color="0xFFFFFF" width="50%" enabled="false" mouseEnabled="false"/>
            </s:VGroup>
        </s:Group>
    </s:Group>

</s:Skin>