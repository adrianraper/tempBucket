<?xml version="1.0" encoding="utf-8"?>
<!--

  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

-->


<!--- The default skin class for a Spark ToggleButton component.  

     @see spark.components.ToggleButton
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
                   xmlns:s="library://ns.adobe.com/flex/spark" 
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="21" minHeight="21" 
                   alpha.disabledStates="0.5">
	<fx:Metadata>
		[HostComponent("spark.components.ButtonBarButton")]
	</fx:Metadata>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dropShadowFilter" angle="270" distance="0.4" alpha="0.3" />
	</fx:Declarations>
	
	<fx:Script>  
		<![CDATA[  
			private var _image:Class;
			private var _overImage:Class;
			private var _bg:Class;
			private var _overBg:Class;
			
			[Bindable]
			public function get image():Class {
				return _image;
			}
			
			public function set image(value:Class):void {
				_image = value;
			}
			
			[Bindable]
			public function get overImage():Class {
				return _overImage;
			}
			
			public function set overImage(value:Class):void {
				_overImage = value;
			}
			
			[Bindable]
			public function get bg():Class {
				return _bg;
			}
			
			public function set bg(value:Class):void {
				_bg = value;
			}
			
			[Bindable]
			public function get overBg():Class {
				return _overBg;
			}
			
			public function set overBg(value:Class):void {
				_overBg = value;
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void  
			{  
				super.updateDisplayList((this.hostComponent as Object).outerDocument.hostComponent.width, unscaledHeight);  
				var textArray:Array = ((this as Object).hostComponent.label as String).split(" ");

				image = Class(getStyle(textArray[1] + "Icon"));
				overImage = Class(getStyle(textArray[1] + "OverIcon"));
				
				bg = Class(getStyle(textArray[1] + "Bg"));
				overBg = Class(getStyle(textArray[1] + "OverBg"));
			}            
			
		]]>  
	</fx:Script>  
    
    <!-- host component -->
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>
   
	<s:Group>
		<s:SWFLoader id="backGround" source.up="{bg}" source.over="{overBg}" source.down="{overBg}" source.selectedStates="{overBg}" filters="{[dropShadowFilter]}"/>
		<s:SWFLoader id="icon" source.up="{image}" source.over="{overImage}" source.down="{overImage}" source.selectedStates="{overImage}" top="10" left="15" filters="{[dropShadowFilter]}"/>
	</s:Group>  
    
    <!-- layer 8: text -->
    <!--- @copy spark.components.supportClasses.ButtonBase#labelDisplay -->
    <s:Label id="labelDisplay"
             textAlign="center"
             verticalAlign="middle"
             maxDisplayedLines="1"
			 left="40" top="12"
			 color.up="0x000000" color.selectedStates="0xFFFFFF" color.over="0xFFFFFF" color.down="0xFFFFFF">
    </s:Label>
    
</s:SparkButtonSkin>
