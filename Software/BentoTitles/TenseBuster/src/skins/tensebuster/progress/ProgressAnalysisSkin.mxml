<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
    	xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
		alpha.disabled="0.5" 
		xmlns:ui="com.clarityenglish.bento.view.progress.ui.*"
		xmlns:ui1="com.clarityenglish.tensebuster.view.progress.ui.*">
	
	<fx:Metadata>
		[HostComponent("com.clarityenglish.tensebuster.view.progress.ProgressAnalysisView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			public function get courseColor():Number {
				var courseCaption:String = hostComponent.courseCaption;
				trace("courseCpation: "+courseCaption);
				return getStyle(courseCaption.charAt(0) + "Color");
			}
		]]>
	</fx:Script>
	
    <s:states>
        <s:State name="normal" />
        <s:State name="disabled" />
    </s:states>
	
	<ui:ProgressCourseButtonBar id="progressCourseButtonBar" left="40" height="60">
		<ui:layout>
			<s:ButtonBarHorizontalLayout gap="16" />
		</ui:layout>
	</ui:ProgressCourseButtonBar>
	
	<s:Rect top="60" left="45" right="50" height="1">
		<s:fill>
			<s:SolidColor color="0xEC1C32" />
		</s:fill>
	</s:Rect>
	
	<s:Label id="analyseInstructionLabel" top="100" left="50" fontSize="15" fontWeight="bold" />
	
	<ui1:StackedCircleWedgeChart id="stackedChart" top="150" height="35" right="40"/>
	<s:Group right="190" top="190" width="200" id="circleWedgeTimeGroup">
		<s:VGroup id="timeWedgeVGroup" horizontalAlign="center" horizontalCenter="0" gap="10">
			<s:Label id="circleWedgeCourseLabel" fontSize="15"/>
			<s:HGroup>
				<s:Label id="analysisTimeLabel" fontSize="24" fontWeight="bold"/>
				<s:Label id="minLabel" fontSize="15" paddingTop="4" />
			</s:HGroup>			
		</s:VGroup>
		<s:VGroup horizontalAlign="center" horizontalCenter="0" gap="10">
			<s:Label id="emptyCircleWedgeCourseLabel" fontSize="15" visible="false"/>		
		</s:VGroup>
		<s:VGroup id="totalTimeWedgeVGroup" horizontalAlign="center" horizontalCenter="0" gap="10">
			<s:Label id="totalTimeLabel" fontSize="15"/>
			<s:HGroup>
				<s:Label id="totalTimeNumberLabel" fontSize="24" fontWeight="bold"/>
				<s:Label id="totalTimeMinLabel" fontSize="15" paddingTop="4" />
			</s:HGroup>			
		</s:VGroup>
	</s:Group>	
	
	<s:VGroup left="50" top="160">
		<s:DataGroup id="durationDataGroup" dataProvider="{hostComponent.unitListCollection}">
			<s:layout>
				<s:VerticalLayout gap="15" />
			</s:layout>
			<s:itemRenderer>
				<fx:Component>
					<s:DataRenderer>
						<fx:Script>
							<![CDATA[
								import com.clarityenglish.common.model.interfaces.CopyProvider;
								import com.googlecode.bindagetools.util.Util;
								
								import spark.components.DataGroup;
								
								[Bindable]
								public var copyProvider:CopyProvider;
								
								[Embed(source="skins/tensebuster/assets/progress/analyse/EDashline.png")]
								private static var EDashline:Class;
								
								[Embed(source="skins/tensebuster/assets/progress/analyse/LDashline.png")]
								private static var LDashline:Class;
								
								[Embed(source="skins/tensebuster/assets/progress/analyse/IDashline.png")]
								private static var IDashline:Class;
								
								[Embed(source="skins/tensebuster/assets/progress/analyse/UDashline.png")]
								private static var UDashline:Class;
								
								[Embed(source="skins/tensebuster/assets/progress/analyse/ADashline.png")]
								private static var ADashline:Class;
								
								
								private function getTimeColour(data:Object):Number {
									if (data) {
										var index:Number = (owner as DataGroup).dataProvider.getItemIndex(data);
										var courseCaption:String = (owner as DataGroup).dataProvider[index].parent().@caption;
										return getStyle(courseCaption.charAt(0) + "Color");
									}
									return 0;
								}
								
								override public function set data(value:Object):void {
									super.data = value;
									
									dashline.source = dashlineSource;
								}
								
								protected function get dashlineSource():Class {
									if (data) {
										var index:Number = (owner as DataGroup).dataProvider.getItemIndex(data);
										var courseCaption:String = (owner as DataGroup).dataProvider[index].parent().@caption;
										
										switch (courseCaption.charAt(0)) {
											case "E":
												return EDashline;
												break;
											case "L":
												return LDashline;
												break;
											case "I":
												return IDashline;
												break;
											case "U":
												return UDashline;
												break;
											case "A":
												return ADashline;
												break;
											default:
												return null;
										}										
									} else {
										return null;
									}
								}
							]]>
						</fx:Script>
						<s:Label text="{data.@caption}" fontSize="15"/>
						<s:HGroup horizontalAlign="right" left="260" top="-5" width="50">
							<s:Label id="durationLable" text="{copyProvider.getCopyForId('courseDurationRenderTime', { time: Math.floor(data.@duration / 60) })}" color="{getTimeColour(data)}"  fontSize="24" fontWeight="bold"  />
							<s:Label id="minLabel" fontSize="15" text="{copyProvider.getCopyForId('minLabel')}" color="{getTimeColour(data)}" paddingTop="6"/>
						</s:HGroup>
						<s:SWFLoader id="dashline" top="20"/>
					</s:DataRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:DataGroup>
		<s:VGroup paddingTop="-10">
			<s:Rect width="305" height="2">
				<s:fill>
					<s:SolidColor id="boundaryLineSolidColor" />
				</s:fill>
			</s:Rect>
			<s:Group top="16">
				<s:HGroup paddingTop="16">
					<s:Label id="totalLabel" fontSize="15" />
				</s:HGroup>
				<s:HGroup left="260" paddingTop="16" horizontalAlign="right" width="50">
					<s:Label id="totalDurationLabel" fontSize="24" fontWeight="bold" paddingTop="-5" />
					<s:Label id="totalMinLabel" fontSize="15" paddingTop="2" />
				</s:HGroup>
			</s:Group>			
		</s:VGroup>		
	</s:VGroup>	
</s:Skin>
