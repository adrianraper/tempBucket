<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:recorder="com.clarityenglish.bento.view.recorder.*"
		xmlns:exercise="skins.tensebuster.assets.exercise.*" xmlns:home="skins.tensebuster.assets.home.*"
		xmlns:assets="skins.tensebuster.assets.*"
		creationComplete="onCreationComplete(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.tensebuster.view.title.TitleView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.bento.BentoApplication;
			import com.clarityenglish.tensebuster.view.title.TitleView;

			import mx.core.FlexGlobals;

			import mx.events.FlexEvent;

			protected function onCreationComplete(event:FlexEvent):void {
				buttonHGroup.width = FlexGlobals.topLevelApplication.width * 0.5;
				buttonHGroup.horizontalCenter = FlexGlobals.topLevelApplication.width * 0.25;
				sectionNavigator.tabBar.width = FlexGlobals.topLevelApplication.width * 0.5;

				if (FlexGlobals.topLevelApplication.width  >= 1280) {
					header.visible = false;
					header.includeInLayout = false;
					longHeader.visible = true;
					longHeader.includeInLayout = true;
				} else {
					header.visible = true;
					header.includeInLayout = true;
					longHeader.visible = false;
					longHeader.includeInLayout = false;
				}
			}
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="disabled" />
		<s:State name="normal" />
		
		<s:State name="home" />
		<s:State name="unit" />
		<s:State name="zone" />
		<s:State name="exercise" />
		<s:State name="progress" />
		<s:State name="profile" />
		<s:State name="help" />
	</s:states>

	<!--Background-->
	<s:BitmapImage source="@Embed(source='/skins/tensebusterair/assets/hexagonBg.png')" bottom="-50" width="100%" fillMode="repeat" excludeFrom="home" />

	<!--s:SWFLoader source="@Embed(source='skins/tensebusterair/assets/hexagonBg.png')" /-->
	<assets:logo top="27" right="15" excludeFrom="exercise"/>
	
	<s:TabbedViewNavigator id="sectionNavigator" left="0" right="0" top="0" bottom="0" creationPolicy="all">
		<s:ViewNavigator id="homeViewNavigator" firstView="com.clarityenglish.tensebuster.view.home.HomeView" label="Menu"  left="0" right="0" height="100%" />
		<s:ViewNavigator id="progressViewNavigator" firstView="com.clarityenglish.tensebuster.view.progress.ProgressView" label="My Progress" left="0" right="0" height="100%" />
		<!--s:ViewNavigator id="profileViewNavigator" firstView="com.clarityenglish.tensebuster.view.profile.ProfileView" label="My Profile" left="0" right="0" height="100%" /-->
		<!--s:ViewNavigator id="helpViewNavigator" firstView="com.clarityenglish.tensebuster.view.help.HelpView" label="Help" left="0" right="0" height="100%" /-->
	</s:TabbedViewNavigator>

	<s:HGroup id="buttonHGroup" bottom="-1" gap="1">
		<s:Button id="helpButton" width="49%" buttonMode="true" useHandCursor="true" excludeFrom="exercise"/>
		<s:Button id="logoutButton" width="49%" fontWeight="normal" buttonMode="true" useHandCursor="true" excludeFrom="exercise" />
	</s:HGroup>

	<!--tense buster brand header-->
	<assets:header id="header" top="10" visible="false" includeInLayout="false" excludeFrom="exercise" />
	<assets:longHeader id="longHeader" top="10" visible="false" includeInLayout="false" excludeFrom="exercise" />

	<!--Demo version label-->
	<s:Group width="250" height="40" right="140" right.exercise="30" top="0">
		<s:Rect width="100%" height="100%" bottomLeftRadiusX="10" bottomRightRadiusX="10" visible="{hostComponent.productVersion == BentoApplication.DEMO}">
			<s:fill>
				<s:SolidColor color="#591117" />
			</s:fill>
		</s:Rect>
		<s:HGroup top="16" left="10" gap="7">
			<s:Label id="topLeftDemoLabel" fontSize="18" color="#FFFFFF" fontWeight="bold" />
			<s:VGroup paddingTop="-2">
				<s:Line yFrom="0" yTo="18">
					<s:stroke>
						<s:SolidColorStroke color="#FFFFFF" />
					</s:stroke>
				</s:Line>
			</s:VGroup>
			<s:Label id="topRightDemoLabel" fontSize="16" color="#FFFFFF" />
		</s:HGroup>
	</s:Group>
	
	<s:Group top="20" left="{FlexGlobals.topLevelApplication.width * 0.5 - 450}" visible="{hostComponent.currentState == 'exercise'}">
		<s:HGroup verticalAlign="middle">
			<s:HGroup verticalAlign="middle" id="coursePath">
				<s:Group>
					<exercise:elementarySIcon visible="{hostComponent.courseCaption == 'Elementary'}" />
					<exercise:lowerinterSIcon visible="{hostComponent.courseCaption == 'Lower Intermediate'}" />
					<exercise:interSIcon visible="{hostComponent.courseCaption == 'Intermediate'}" />
					<exercise:upperinterSIcon visible="{hostComponent.courseCaption == 'Upper Intermediate'}" />
					<exercise:advanceSIcon visible="{hostComponent.courseCaption == 'Advanced'}" />
				</s:Group>
				<s:Label text="{hostComponent.courseCaption}" color="0x333333" fontSize="19" paddingTop="2" />
			</s:HGroup>
			<s:HGroup verticalAlign="middle" id="unitPath">
				<s:SWFLoader source="@Embed(source='skins/tensebuster/assets/arrow.png')" />
				<s:Group>
					<exercise:elementaryPencil visible="{hostComponent.courseCaption == 'Elementary'}" />
					<exercise:lowerinterPencil visible="{hostComponent.courseCaption == 'Lower Intermediate'}" />
					<exercise:interPencil visible="{hostComponent.courseCaption == 'Intermediate'}" />
					<exercise:upperinterPencil visible="{hostComponent.courseCaption == 'Upper Intermediate'}" />
					<exercise:advancedPencil visible="{hostComponent.courseCaption == 'Advanced'}" />
				</s:Group>
				<s:Label text="{hostComponent.unitCaption}" color="0x333333" fontSize="14" paddingTop="6" />
			</s:HGroup>
			<s:HGroup verticalAlign="middle" id="exercisePath">
				<s:SWFLoader source="@Embed(source='skins/tensebuster/assets/arrow.png')" />
				<s:Label text="{hostComponent.exerciseCaption}" color="{getStyle(TitleView.courseCode + 'Color')}" fontSize="14" paddingTop="6" />
			</s:HGroup>
		</s:HGroup>	
	</s:Group>
	<!--s:Button id="backToMenuButton" label="Back to Menu" horizontalCenter="375" top="28" color="0xFFFFFF" fontWeight="bold" fontSize="12" includeIn="exercise" buttonMode="true" useHandCursor="true"/-->
</s:Skin>
