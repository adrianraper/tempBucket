<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:view="com.clarityenglish.bento.view.*"
        xmlns:recorder="com.clarityenglish.bento.view.recorder.*" xmlns:exercise="skins.tensebuster.assets.exercise.*"
        xmlns:android="skins.tensebusterair.assets.android.*">
    <!-- host component -->
    <fx:Metadata>
        [HostComponent("com.clarityenglish.bento.view.exercise.ExerciseView")]
    </fx:Metadata>
    <fx:Script>
		<![CDATA[
        import mx.core.FlexGlobals;
        ]]>
	</fx:Script>

    <fx:Declarations>
        <s:DropShadowFilter id="dropShadowFilter" angle="90" distance="1.5" alpha="0.2" blurX="7" blurY="7"/>
    </fx:Declarations>

    <s:states>
        <s:State name="disabled"/>
        <s:State name="normal"/>

        <s:State name="exercise"/>
        <s:State name="other"/>
    </s:states>

    <!-- Exercise -->
    <view:DynamicView id="dynamicView" left="10" right="10" horizontalCenter="0" top="60" bottom="24"/>

    <!--exercise side bar-->
    <s:Rect width="10" bottom="0" top="0" left="0" includeIn="exercise">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="0xFFFFFF"/>
                <s:GradientEntry color="0xEA2133"/>
            </s:LinearGradient>
        </s:fill>
    </s:Rect>
    <s:Rect width="10" bottom="0" top="0" right="0" includeIn="exercise">
        <s:fill>
            <s:LinearGradient rotation="90">
                <s:GradientEntry color="0xFFFFFF"/>
                <s:GradientEntry color="0xEA2133"/>
            </s:LinearGradient>
        </s:fill>
    </s:Rect>

    <!-- Control bar -->
    <s:Rect left="0" right="0" height="47" top="10" filters="{[dropShadowFilter]}">
        <s:fill>
            <s:SolidColor color="#FFFFFF"/>
        </s:fill>
    </s:Rect>

    <!-- Home buttons -->
    <s:Button id="backToMenuButton" color="0xFFFFFF" left="0" top="8" fontSize="12" buttonMode="true"
              useHandCursor="true"/>

    <s:HGroup right="10" top="0" includeIn="exercise" gap="5">
        <s:Button id="backButton" color="0xEA2133" fontSize="13" buttonMode="true" useHandCursor="true"
                  enabled="{!hostComponent.isFirstExercise}" visible="{!hostComponent.isDirectStartEx}"/>
        <s:Button id="forwardButton" color="0xEA2133" fontSize="13" buttonMode="true" useHandCursor="true"
                  visible="{!hostComponent.isDirectStartEx}"/>
        <s:HGroup paddingLeft="20" gap="5">
            <s:Button id="feedbackButton" visible="false" includeInLayout="false" color="0xEA2133" fontSize="13"
                      buttonMode="true" useHandCursor="true"/>
            <s:Button id="markingButton" color="0xEA2133" fontSize="13" buttonMode="true" useHandCursor="true"/>
            <s:Button id="startAgainButton" color="0xEA2133" fontSize="13" buttonMode="true" useHandCursor="true"/>
            <s:Button id="recorderButton" color="0xEA2133" fontSize="13" buttonMode="true" useHandCursor="true"/>
            <s:Button id="ruleButton" color="0xEA2133" fontSize="13" buttonMode="true" useHandCursor="true"
                      visible="{hostComponent.ruleLink != null}"
                      includeInLayout="{hostComponent.ruleLink != null}"/>
        </s:HGroup>
    </s:HGroup>

    <!-- Header -->
    <s:Rect left="0" right="0" height="8" top="0">
        <s:fill>
            <s:SolidColor color="0xEA2133"/>
        </s:fill>
    </s:Rect>

    <!--Footer-->
    <s:Rect left="10" right="10" height="10" bottom="0">
        <s:fill>
            <s:SolidColor color="0xEA2133" />
        </s:fill>
    </s:Rect>

</s:Skin>