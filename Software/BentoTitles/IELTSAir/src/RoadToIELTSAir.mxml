<?xml version="1.0" encoding="utf-8"?>
<ielts:IELTSApplication xmlns:fx="http://ns.adobe.com/mxml/2009"
						xmlns:s="library://ns.adobe.com/flex/spark"
						xmlns:ielts="com.clarityenglish.ielts.*"
						width="100%"
						height="100%"
						initialize="onInitialize(event)"
						applicationComplete="onApplicationComplete(event)"
						addedToStage="onAddedToStage(event)">
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.common.CommonNotifications;
			import com.clarityenglish.common.vo.config.BentoError;
			
			import flash.utils.setTimeout;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.logging.Log;
			import mx.logging.LogEventLevel;
			
			import spark.components.TextArea;
			
			protected function onInitialize(event:FlexEvent):void {
				FlexGlobals.topLevelApplication.parameters.configFile = "ios-config.xml";
			}
			
			protected function onApplicationComplete(event:FlexEvent):void {
				FlexGlobals.topLevelApplication.loaderInfo.uncaughtErrorEvents.addEventListener(UncaughtErrorEvent.UNCAUGHT_ERROR, onUncaughtError);
			}
			
			override protected function onAddedToStage(event:Event):void {
				super.onAddedToStage(event);
				
				/*if (!logTextArea.visible) {
					logTextArea.visible = true;
					
					// Configure logging
					var logTarget:TextAreaLogTarget = new TextAreaLogTarget(logTextArea);
					logTarget.filters = [ "com.*", "org.*", "AnswerableBehaviour.*" ];
					logTarget.level = LogEventLevel.ALL;
					logTarget.includeDate = false;
					logTarget.includeTime = false;
					logTarget.includeCategory = true;
					logTarget.includeLevel = true;
					Log.addTarget(logTarget);
				}*/
			}
			
			protected function onUncaughtError(event:UncaughtErrorEvent):void {
				var bentoError:BentoError = new BentoError();
				
				if (event.error is Error) {
					log.error((event.error as Error).message + " - " + (event.error as Error).getStackTrace());
				} else if (event.error is ErrorEvent) {
					log.error((event.error as ErrorEvent).toString());
				} else {
					log.error("Unknown: " + event.error);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace ielts "com.clarityenglish.ielts.*";
		
		@font-face {
			src: url("skins/ielts/assets/HelveticaNeueLTStd-Roman.otf");
			fontFamily: HelveticaNeueLtStd;
			fontWeight: normal;
			fontAntiAliasType: advanced;
			fontSharpness: 400;
			fontThickness: -200;
			embedAsCFF: false;
		}
		
		@font-face {
			src: url("skins/ielts/assets/HelveticaNeueLTStd-Bd.otf");
			fontFamily: HelveticaNeueLtStd;
			fontWeight: bold;
			fontAntiAliasType: advanced;
			fontSharpness: 400;
			fontThickness: -200;
			embedAsCFF: false;
		}
	</fx:Style>
	
	<fx:Style source="ielts.css" />
	<fx:Style source="ieltsair.css" />
	
</ielts:IELTSApplication>