<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:controls="com.clarityenglish.controls.*" xmlns:zone="skins.ieltsair.assets.zone.*" xmlns:components="com.clarityenglish.textLayout.components.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.ieltsair.view.zone.ExamPracticeZoneSectionView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import caurina.transitions.Tweener;
			
			public var idx:int = 0;
			
			private function moveList(delta:int):void {
				if (idx + delta >= 0 && idx + delta < list.dataProvider.length) {
					idx += delta;
					
					var newHorizontalScrollPosition:int = 386 * idx;
					Tweener.removeTweens(list.scroller.viewport);
					Tweener.addTween(list.scroller.viewport, { horizontalScrollPosition: newHorizontalScrollPosition, time: 0.6 });
					
					hostComponent.stopAllAudio();
				}
			}
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="disabled" />
		<s:State name="normal" />
		
		<s:State name="reading" />
		<s:State name="writing" />
		<s:State name="listening" />
		<s:State name="speaking" />
	</s:states>
	
	<s:Label text="Test practice" fontSize="18" fontWeight="bold" left="20" top="12" />
	<s:Label visible="{list.dataProvider.length > 0}" text="Download complete test papers. Click the audio button to start the mock listening test. As in the test, you cannot pause the audio once you have started." fontSize="14" left="20" top="35" right="25" />
	<s:Label visible="{list.dataProvider.length == 0}" text="There is no downloadable test practice materials in this section.  Watch the tutorials in the Advice and tutorials section to see what happens in the {hostComponent.courseClass} test interview." fontSize="14" left="20" top="35" right="25" />
	
	<zone:LeftArrow left="18" top="200" click="moveList(-1)" visible="{list.dataProvider.length > 0}" />
	<zone:RightArrow right="18" top="200" click="moveList(1)" visible="{list.dataProvider.length > 0}" />
	
	<s:List id="list" width="386" top="90" horizontalCenter="0" contentBackgroundColor="#FFFFFF" horizontalScrollPolicy="off" verticalScrollPolicy="off">
		<s:layout>
			<s:HorizontalLayout gap="0" useVirtualLayout="true" />
		</s:layout>
		<s:itemRenderer>
			<fx:Component>
				<s:DataRenderer width="386" addedToStage="onAddedToStage(event)" removedFromStage="onRemovedFromStage(event)">
					<fx:Script>
						<![CDATA[
							import com.clarityenglish.ielts.view.zone.ExerciseEvent;
							import com.clarityenglish.ielts.view.zone.ZoneView;
							
							import mx.binding.utils.ChangeWatcher;
							import mx.events.FlexEvent;
							
							private var changeWatcher:ChangeWatcher;
							
							protected function onAddedToStage(event:Event):void {
								var zoneView:ZoneView = outerDocument.parentDocument["hostComponent"];
								changeWatcher = ChangeWatcher.watch(zoneView, "courseClass", onCourseClassChanged, false, true);
							}
							
							protected function onRemovedFromStage(event:Event):void {
								changeWatcher.unwatch();
								changeWatcher = null;
							}
							
							private function onCourseClassChanged(e:Event):void {
								invalidateProperties();
							}
							
							override protected function commitProperties():void {
								super.commitProperties();
								
								var courseClass:String = outerDocument.hostComponent.courseClass;
								practiceTestButton.setStyle('chromeColor', getStyle(courseClass + 'Color'));
								answerKeyButton.setStyle('chromeColor', getStyle(courseClass + 'Color'));
								swfLoader.source = "/skins/ieltsair/assets/zone/testpractice_" + courseClass + (outerDocument.idx + 1) + ".png";
							}
							
							private function onButtonClick(url:String):void {
								dispatchEvent(new ExerciseEvent(ExerciseEvent.EXERCISE_SELECTED, url));
							}
						]]>
					</fx:Script>
					<s:SWFLoader id="swfLoader" />
					<s:Label text="{data.@caption}" top="268" horizontalCenter="0" fontSize="16" />
					
					<s:HGroup top="295" gap="10" horizontalCenter="0">
						<components:AudioPlayer visible="{data.hasOwnProperty('@audioHref')}" includeInLayout="{data.hasOwnProperty('@audioHref')}" styleName="examPracticeAudioPlayer" src="{outerDocument.hostComponent.href.createRelativeHref(null, data.@audioHref).url}" controls="compact" />
						<s:Button id="practiceTestButton" width="141" height="40" color="#FFFFFF" icon="@Embed(source='skins/ielts/assets/assets.swf', symbol='SearchIcon')" label="Practice test 1" click="onButtonClick(data.@href)" />
						<s:Button id="answerKeyButton" label="{data.@answerCaption}" width="141" height="40" color="#FFFFFF" chromeColor="#000000" click="onButtonClick(data.@answerHref)" />
					</s:HGroup>
				</s:DataRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
	
	<s:SWFLoader visible="{list.dataProvider.length == 0}" source="/skins/ieltsair/assets/zone/testpractice_empty.png" width="386" top="90" horizontalCenter="0" />
	
</s:Skin>