<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:zone="skins.ielts.zone.*"
		creationComplete="creationComplete()" xmlns:controls="com.clarityenglish.controls.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.controls.BentoVideoSelector")]
	</fx:Metadata>

	<fx:Script>
		<![CDATA[
			import com.clarityenglish.bento.vo.Href;
			import com.clarityenglish.ielts.view.zone.ExerciseEvent;
			
			import org.osflash.signals.Signal;
			
			public var exerciseSelect:Signal = new Signal(Href);
			
			protected function creationComplete():void {
				//the listener previously in the zoneMediator, for now we changed to selector it cannot be there anymore in that case we move it here
				videoList.addEventListener(ExerciseEvent.EXERCISE_SELECTED, onExerciseSelected);
			}
			
			private function onExerciseSelected(event:ExerciseEvent):void {
				// Fire the exerciseSelect signal
				exerciseSelect.dispatch(hostComponent.viewHref.createRelativeHref(Href.EXERCISE, event.hrefFilename));
			}
			
			public function onVideoBitSelect(event:Event):void {
				hostComponent.zoneVideoSelected(videoList.selectedItem.@href);
				trace("the selected index is " + channelButtonBar.selectedIndex);
				channelButtonBar.enabled = true;
			}
		]]>
	</fx:Script>
	<s:VGroup gap="11">
		<s:HGroup>
			<s:Group>
				<!--<s:VideoPlayer id="videoPlayer" autoDisplayFirstFrame="true" width="411" height="231" pauseWhenHidden="true" autoPlay="true" scaleMode="letterbox" />-->
				<controls:WebViewVideoPlayer id="webViewVideoPlayer" width="411" height="231" visible="{videoList.selectedItem != null}" />
				
				<!-- Placeholder image -->
				<s:Image id="placeholderImage" source="{hostComponent.placeholderSource}" visible="{videoList.selectedItem == null}" />
								
			</s:Group>
			<s:Group left="0" visible="{hostComponent.channelCollection.length > 1}">
				<s:ButtonBar id="channelButtonBar" labelField="caption" verticalCenter="0" horizontalCenter="0" enabled="{hostComponent.zone == 'question-zone'}" requireSelection="true">
					<s:layout>
						<s:VerticalLayout gap="3" />
					</s:layout>
				</s:ButtonBar>
			</s:Group>
		</s:HGroup>

		<s:List id="videoList" width="460" horizontalScrollPolicy="off" borderVisible="false" contentBackgroundColor="#FFFFFF">
			<s:layout>
				<s:TileLayout requestedColumnCount="2" requestedRowCount="3" orientation="columns" columnWidth="230" verticalGap="11" horizontalGap="5" />
			</s:layout>
			
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer>
						<fx:Script>
							<![CDATA[
								import com.clarityenglish.ielts.view.zone.ExerciseEvent;
								
								import spark.components.List;
								
								override protected function createChildren():void {
									super.createChildren();
									
									scriptButton.addEventListener(MouseEvent.CLICK, onScriptButtonClick);
									image.addEventListener(MouseEvent.CLICK, onVideoPlayClick);
									videoLabel.addEventListener(MouseEvent.CLICK, onVideoPlayClick);
								}
								
								override public function set data(value:Object):void {
									super.data = value;
									
									image.source = outerDocument.hostComponent.viewHref.createRelativeHref(null, data.@thumbnail).url;
									imageBorder.visible = this.selected;
									videoLabel.text = data.@caption;
									
									scriptButton.visible = data.hasOwnProperty("@scriptHref");
									blankButton.visible = !scriptButton.visible;
									
									// #213
									enabled = !(data.hasOwnProperty("@enabledFlag") && (Number(data.@enabledFlag.toString()) & 8));
								}
								
								private function onScriptButtonClick(event:MouseEvent):void {
									dispatchEvent(new ExerciseEvent(ExerciseEvent.EXERCISE_SELECTED, data.@scriptHref));
									(owner as List).selectedItem = null;
								}
								
								private function onVideoPlayClick(event:MouseEvent):void {
									outerDocument.onVideoBitSelect(event);
								}
							]]>
						</fx:Script>
						<s:Rect id="imageBorder" width="75" height="35" top="-2" left="-2">
							<s:fill>
								<s:SolidColor color="#000000" />
							</s:fill>
						</s:Rect>
						<s:HGroup top="0" left="0" height="38">
							<s:HGroup gap="0">
								<s:Group>
									<s:Rect id="blankButton" width="14" height="38" visible="false">
										<s:fill>
											<s:SolidColor color="#1a1a1a" />
										</s:fill>
									</s:Rect>
									<zone:ScriptIcon id="scriptButton" width="14" height="38" useHandCursor="true" buttonMode="true" visible="false" />
								</s:Group>
								<s:Image id="image" width="68" />
							</s:HGroup>

							<s:Label id="videoLabel" width="135" paddingTop="7" fontWeight="bold" />
						</s:HGroup>
						<!--<s:Button id="tooltipHolder" width="100%" height="100%" toolTip="Only available in the Last Minute version" />-->
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>
	</s:VGroup>
</s:Skin>
