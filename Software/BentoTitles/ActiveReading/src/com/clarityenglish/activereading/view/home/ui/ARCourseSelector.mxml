<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" xmlns:ui="com.clarityenglish.activereading.view.home.ui.*">
	
	<fx:Metadata>
		[Event(name="elementarySelected", type="flash.events.Event")]
		[Event(name="preInterSelected", type="flash.events.Event")]
		[Event(name="intermediateSelected", type="flash.events.Event")]
		[Event(name="upperInterSelected", type="flash.events.Event")]
		[Event(name="advancedSelected", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.activereading.view.event.NodeSelectEvent;
			import com.greensock.TweenMax;
			import com.greensock.plugins.BezierPlugin;
			
			import mx.collections.XMLListCollection;
			import mx.events.FlexEvent;
			
			import spark.components.supportClasses.ButtonBase;
			private static const ActivePos_x:Number = 197;
			private static const ActivePos_y:Number = 238;
			private static const FirstPos_x:Number = 189;
			private static const FirstPos_y:Number = 292;
			private static const SecondPos_x:Number = 167;
			private static const SecondPos_y:Number = 340;
			private static const ThirdPos_x:Number = 135;
			private static const ThirdPos_y:Number = 383;
			private static const FourthPos_x:Number = 90;
			private static const FourthPos_y:Number = 418;
			private static const FifthPos_x:Number = 41;
			private static const FifthPos_y:Number = 440;
			
			private var pathA1:Array = [{x:230, y:140}, {x:120, y:57}];
			private var pathA2:Array = [{x:183, y:315}, {x:189, y:289}];
			private var pathA3:Array = [{x:156, y:362}, {x:167, y:340}];
			private var pathA4:Array = [{x:120, y:401}, {x:135, y:383}];
			private var pathA5:Array = [{x:71, y:431}, {x:90, y:418}];
			private var pathA6:Array = [{x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}];
			private var pathA:Array = [pathA1, pathA2, pathA3, pathA4, pathA5, pathA6];
			
			private var pathB1:Array = [{x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}];
			private var pathB2:Array = [{x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}];
			private var pathB3:Array = [{x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}];
			private var pathB4:Array = [{x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}];
			private var pathB5:Array = [{x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}];
			private var pathB6:Array = [{x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}];
			private var pathB:Array = [pathB1, pathB2, pathB3, pathB4, pathB5, pathB6];
			
			private var pathC1:Array = [{x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:289}, {x:230, y:140}, {x:120, y:57}];
			private var pathC2:Array = [{x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}];
			private var pathC3:Array = [{x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}];
			private var pathC4:Array = [{x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}];
			private var pathC5:Array = [{x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}];
			private var pathC6:Array = [{x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}];
			private var pathC:Array = [pathC1, pathC2, pathC3, pathC4, pathC5, pathC6];
			
			private var pathD1:Array = [{x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}];
			private var pathD2:Array = [{x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}];
			private var pathD3:Array = [{x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}];
			private var pathD4:Array = [{x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}];
			private var pathD5:Array = [{x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}];
			private var pathD6:Array = [{x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}];
			private var pathD:Array = [pathD1, pathD2, pathD3, pathD4, pathD5, pathD6];
			
			private var pathE1:Array = [{x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}];
			private var pathE2:Array = [{x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}];
			private var pathE3:Array = [{x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}];
			private var pathE4:Array = [{x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}, {x:120, y:401}, {x:135, y:383}];
			private var pathE5:Array = [{x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}, {x:71, y:431}, {x:90, y:418}];
			private var pathE6:Array = [{x:120, y:401}, {x:135, y:383}, {x:156, y:362}, {x:167, y:340}, {x:183, y:315}, {x:189, y:292}, {x:230, y:140}, {x:120, y:57}, {x:66, y:7}, {x:0, y:0}, {x:0, y:449}, {x:28, y:447}, {x:41, y:440}];
			private var pathE:Array = [pathE1, pathE2, pathE3, pathE4, pathE5, pathE6];
			
			private var pathF1:Array = [{x: 205, y:121}, {x: 120, y: 57}];
			private var pathF:Array = [pathF1];
			
			[Bindable]
			private var courseXMLList:XMLList;
			
			[Bindable]
			private var _dataProvider:XML;
			
			[Bindable]
			private var _level:XML;
			private var _isBackToHome:Boolean;
			private var _isDirectStart:Boolean;
			
			public function set dataProvider(value:XML):void {
				_dataProvider = value;
				invalidateProperties();
			}
			
			public function set level(value:XML):void {
				_level = value;
				invalidateProperties();
			}
			
			[Bindable]
			public function get level():XML {
				return _level;
			}
			
			public function set isDirectStart(value:Boolean):void {
				_isDirectStart = value;
			}
			
			[Bindable]
			public function get isDirectStart():Boolean {
				return _isDirectStart;
			}
			
			public function set isBackToHome(value:Boolean):void {
				_isBackToHome = value;
			}
			
			protected override function commitProperties():void {
				super.commitProperties();
				
				if (_level) {
					switch (_level.@["caption"].toString()) {
						case "Elementary":
							showElementary();
							break;
						case "Pre-Intermediate":
							showPreInter();
							break;
						case "Intermediate":
							showIntermediate();
							break;
						case "Upper Intermediate":
							showUpperInter();
							break;
						case "Pre-Advanced":
							showPreAdvanced();
							break;
						case "Advanced":
							showAdvanced();
							break; 						
					}
				} else {
					initializeCourseSelector();
				}
				
				if (_dataProvider) {
					courseXMLList =  new XMLList(_dataProvider.course);
					for each (var courseXML:XML in courseXMLList) {
						if (courseXML.attribute("enabledFlag").length() > 0 && (Number(courseXML.@enabledFlag.toString()) & 8)) {
							switch (courseXML.@caption.toString()) {
								case "Elementary":
									elementary.enabled = false;
									break;
								case "Pre-Intermediate":
									preInter.enabled = false;
									break;
								case "Intermediate":
									intermediate.enabled = false;
									break;
								case "Upper Intermediate":
									upperInter.enabled = false;
									break;
								case "Pre-Advanced":
									preAdvanced.enabled = false;
									break;
								case "Advanced":
									advanced.enabled = false;
									break;
							}
						}
					}
				}
			}
			
			protected function onElementaryClick(event:MouseEvent):void {
				dispatchEvent(new NodeSelectEvent(NodeSelectEvent.NODE_SELECT, true, courseXMLList[0]));
				dispatchEvent(new Event("courseSelectorClicked", true));
			}
			
			protected function onPreInterClick(event:MouseEvent):void {
				dispatchEvent(new NodeSelectEvent(NodeSelectEvent.NODE_SELECT, true, courseXMLList[1]));
				dispatchEvent(new Event("courseSelectorClicked", true));
			}
			
			protected function onIntermediateClick(event:MouseEvent):void {
				dispatchEvent(new NodeSelectEvent(NodeSelectEvent.NODE_SELECT, true, courseXMLList[2]));
				dispatchEvent(new Event("courseSelectorClicked", true));
			}
			
			protected function onUpperInterClick(event:MouseEvent):void {
				dispatchEvent(new NodeSelectEvent(NodeSelectEvent.NODE_SELECT, true, courseXMLList[3]));
				dispatchEvent(new Event("courseSelectorClicked", true));
			}
			
			protected function onPreAdvancedClick(event:MouseEvent):void {
				dispatchEvent(new NodeSelectEvent(NodeSelectEvent.NODE_SELECT, true, courseXMLList[4]));
				dispatchEvent(new Event("courseSelectorClicked", true));
			}
				
			protected function onAdvancedClick(event:MouseEvent):void {
				dispatchEvent(new NodeSelectEvent(NodeSelectEvent.NODE_SELECT, true, courseXMLList[5]));
				dispatchEvent(new Event("courseSelectorClicked", true));
			}
			
			protected function getPathName(level:ButtonBase):Array {
				if (Math.abs(level.x-FirstPos_x) < 1) {
					return pathA;
				} else if (Math.abs(level.x - SecondPos_x) < 1) {
					return pathB;
				} else if (Math.abs(level.x - ThirdPos_x) < 1) {
					return pathC;
				} else if (Math.abs(level.x-FourthPos_x) < 1) {
					return pathD;
				} else if (Math.abs(level.x - FifthPos_x) < 1) {
					return pathE;
				} else if (Math.abs(level.x - ActivePos_x) == 0) {
					return pathF;
				} else {
					trace("cannot find path from level x value, using default path E");
					return null;
				}
			}
			
			protected function showElementary():void {
				var pathArray:Array = getPathName(elementary);
				if (pathArray) {
					if (pathArray.length == 1) {
						TweenMax.to(elementary, 0.5, {bezier: pathArray[0], scaleX: 1.6, scaleY:1.6, onStart: onStart, onComplete: onFirstComplete});
					} else {
						TweenMax.to(elementary, 1, {bezier: pathArray[0], scaleX: 1.6, scaleY:1.6, onStart: onStart, onComplete: onComplete});
						TweenMax.to(preInter, 1, {bezier: pathArray[1], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preInter]});
						TweenMax.to(intermediate, 1, {bezier: pathArray[2], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [intermediate]});
						TweenMax.to(upperInter, 1, {bezier: pathArray[3], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [upperInter]});
						TweenMax.to(preAdvanced, 1, {bezier: pathArray[4], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preAdvanced]});
						TweenMax.to(advanced, 1, {bezier: pathArray[5], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [advanced]});
					}		
				}					
			}
			
			protected function showPreInter():void
			{
				// TODO Auto-generated method stub
				var pathArray:Array = getPathName(preInter);
				if (pathArray) {
					TweenMax.to(preInter, 1, {bezier: pathArray[0], scaleX: 1.6, scaleY:1.6, onStart: onStart, onComplete: onComplete});
					TweenMax.to(intermediate, 1, {bezier: pathArray[1], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [intermediate]});
					TweenMax.to(upperInter, 1, {bezier: pathArray[2], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [upperInter]});
					TweenMax.to(preAdvanced, 1, {bezier: pathArray[3], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preAdvanced]});
					TweenMax.to(advanced, 1, {bezier: pathArray[4], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [advanced]});
					TweenMax.to(elementary, 1, {bezier: pathArray[5], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [elementary]});
				}			
			}
			
			protected function showIntermediate():void
			{
				// TODO Auto-generated method stub
				var pathArray:Array = getPathName(intermediate);
				if (pathArray) {
					TweenMax.to(intermediate, 1, {bezier: pathArray[0], scaleX: 1.6, scaleY:1.6, onStart: onStart, onComplete: onComplete});
					TweenMax.to(upperInter, 1, {bezier: pathArray[1], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [upperInter]});
					TweenMax.to(preAdvanced, 1, {bezier: pathArray[2], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preAdvanced]});
					TweenMax.to(advanced, 1, {bezier: pathArray[3], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [advanced]});
					TweenMax.to(elementary, 1, {bezier: pathArray[4], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [elementary]});
					TweenMax.to(preInter, 1, {bezier: pathArray[5], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preInter]});
				}			
			}
			
			protected function showUpperInter():void
			{
				// TODO Auto-generated method stub
				var pathArray:Array = getPathName(upperInter);
				if (pathArray) {
					TweenMax.to(upperInter, 1, {bezier: pathArray[0], scaleX: 1.6, scaleY:1.6, onStart: onStart, onComplete: onComplete});
					TweenMax.to(preAdvanced, 1, {bezier: pathArray[1], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preAdvanced]});
					TweenMax.to(advanced, 1, {bezier: pathArray[2], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [advanced]});
					TweenMax.to(elementary, 1, {bezier: pathArray[3], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [elementary]});
					TweenMax.to(preInter, 1, {bezier: pathArray[4], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preInter]});
					TweenMax.to(intermediate, 1, {bezier: pathArray[5], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [intermediate]});
				}			
			}
			
			protected function showPreAdvanced():void
			{
				// TODO Auto-generated method stub
				var pathArray:Array = getPathName(preAdvanced);
				if (pathArray) {
					TweenMax.to(preAdvanced, 1, {bezier: pathArray[0], scaleX: 1.6, scaleY:1.6, onStart: onStart, onComplete: onComplete});
					TweenMax.to(advanced, 1, {bezier: pathArray[1], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [advanced]});
					TweenMax.to(elementary, 1, {bezier: pathArray[2], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [elementary]});
					TweenMax.to(preInter, 1, {bezier: pathArray[3], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preInter]});
					TweenMax.to(intermediate, 1, {bezier: pathArray[4], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [intermediate]});
					TweenMax.to(upperInter, 1, {bezier: pathArray[5], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [upperInter]});
				}			
			}
			
			protected function showAdvanced():void
			{
				// TODO Auto-generated method stub
				var pathArray:Array = getPathName(advanced);
				if (pathArray) {
					TweenMax.to(advanced, 1, {bezier: pathArray[0], scaleX: 1.5, scaleY:1.5, onStart: onStart, onComplete: onComplete});
					TweenMax.to(elementary, 1, {bezier: pathArray[1], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [elementary]});
					TweenMax.to(preInter, 1, {bezier: pathArray[2], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preInter]});
					TweenMax.to(intermediate, 1, {bezier: pathArray[3], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [intermediate]});
					TweenMax.to(upperInter, 1, {bezier: pathArray[4], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [upperInter]});
					TweenMax.to(preAdvanced, 1, {bezier: pathArray[5], scaleX: 1, scaleY:1, onComplete: enableClick, onCompleteParams: [preAdvanced]});
				}			
			}
			
			protected function onStart():void {
				elementary.enabled = false;
				preInter.enabled = false;
				intermediate.enabled = false;
				upperInter.enabled = false;
				preAdvanced.enabled = false;
				advanced.enabled = false;
			}
			
			protected function onComplete():void {				
				dispatchEvent(new Event("animationCompleted", true));
			}
			
			protected function enableClick(level:ButtonBase):void {
				if (!isDirectStart) {
					level.enabled = true;
					level.useHandCursor = true;
					level.buttonMode = true;
				}	
			}
			
			protected function onFirstComplete():void {
				onComplete();
				if (!isDirectStart) {
					preInter.enabled = true;
					intermediate.enabled = true;
					upperInter.enabled = true;
					preAdvanced.enabled = true;
					advanced.enabled = true;
				}
			}
			
			protected function initializeCourseSelector():void {
				elementary.x = ActivePos_x;
				elementary.y = ActivePos_y;
				elementary.scaleX = 1;
				elementary.scaleY = 1;
				elementary.enabled = true;
				
				preInter.x = FirstPos_x;
				preInter.y = FirstPos_y;
				preInter.scaleX = 1;
				preInter.scaleY = 1;
				preInter.enabled = true;
				
				intermediate.x = SecondPos_x;
				intermediate.y = SecondPos_y;
				intermediate.scaleX = 1;
				intermediate.scaleY = 1;
				intermediate.enabled = true;
				
				upperInter.x = ThirdPos_x;
				upperInter.y = ThirdPos_y;
				upperInter.scaleX = 1;
				upperInter.scaleY = 1;
				upperInter.enabled = true;
				
				preAdvanced.x = FourthPos_x;
				preAdvanced.y = FourthPos_y;
				preAdvanced.scaleX = 1;
				preAdvanced.scaleY = 1;
				preAdvanced.enabled = true;
				
				advanced.x = FifthPos_x;
				advanced.y = FifthPos_y;
				advanced.scaleX = 1;
				advanced.scaleY = 1;
				advanced.enabled = true;
			}
			
		]]>
	</fx:Script>
	
	<s:Group id="levelGroup" x="0" y="0" color="#FF0000">
		<ui:LevelButton id="elementary" x="{ActivePos_x}" y="{ActivePos_y}" click="onElementaryClick(event)" isLabelVisible="{level == null}" label="Elementary" useHandCursor="true" buttonMode="true" />
		<ui:LevelButton id="preInter" x="{FirstPos_x}" y="{FirstPos_y}" click="onPreInterClick(event)" isLabelVisible="{level == null}" label="Pre-Intermediate" useHandCursor="true" buttonMode="true" />
		<ui:LevelButton id="intermediate" x="{SecondPos_x}" y="{SecondPos_y}" click="onIntermediateClick(event)" isLabelVisible="{level == null}" label="Intermediate" useHandCursor="true" buttonMode="true" />
		<ui:LevelButton id="upperInter" x="{ThirdPos_x}" y="{ThirdPos_y}" click="onUpperInterClick(event)" isLabelVisible="{level == null}" label="Upper Intermediate" useHandCursor="true" buttonMode="true" />
		<ui:LevelButton id="preAdvanced" x="{FourthPos_x}" y="{FourthPos_y}" click="onPreAdvancedClick(event)" isLabelVisible="{level == null}" label="Pre-Advanced" useHandCursor="true" buttonMode="true" />
		<ui:LevelButton id="advanced" x="{FifthPos_x}" y="{FifthPos_y}" click="onAdvancedClick(event)" isLabelVisible="{level == null}" label="Advanced" useHandCursor="true" buttonMode="true" />
	</s:Group>
</s:Group>
