<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
    	xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
		alpha.disabled="0.5" 
		xmlns:ui="com.clarityenglish.bento.view.progress.ui.*"
		xmlns:ui1="com.clarityenglish.clearpronunciation.view.progress.ui.*" 
		xmlns:progress="skins.clearpronunciation.progress.*" 
		creationComplete="onCreationComplete(event)">
	
	<fx:Metadata>
		[HostComponent("com.clarityenglish.clearpronunciation.view.progress.ProgressAnalysisView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			public function get courseColor():Number {
				var courseCaption:String = hostComponent.courseCaption;
				return getStyle(courseCaption.charAt(0) + "Color");
			}
			
			protected function onCreationComplete(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				stackedChart.left = FlexGlobals.topLevelApplication.width * 0.5;
			}
			
		]]>
	</fx:Script>
	
    <s:states>
        <s:State name="normal" />
		<s:State name="normal7Inches" />
		<s:State name="normal10Inches" />
        <s:State name="disabled" />
    </s:states>

	<s:VGroup left="20" right="20" top="20" bottom="0" gap="15">
		<ui:ProgressCourseButtonBar id="progressCourseButtonBar" height="40">
			<ui:layout>
				<s:ButtonBarHorizontalLayout gap="35" />
			</ui:layout>
		</ui:ProgressCourseButtonBar>
		
		<s:Rect id="titleLine" height="1" width="100%">
			<s:fill>
				<s:SolidColor color="#000000" />
			</s:fill>
		</s:Rect>	
	
		<s:Label id="analyseInstructionLabel" top="80" left="50" fontSize="13" />
		
		<s:HGroup width="100%" height="100%" gap="100">
			<s:Scroller left="0" width="35%">
				<s:VGroup width="100%" height="100%">
					<s:DataGroup id="durationDataGroup" dataProvider="{hostComponent.unitListCollection}" width="100%" height="100%">
						<s:layout>
							<s:VerticalLayout gap="4"/>
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:DataRenderer width="100%">
									<fx:Script>
										<![CDATA[
											import com.clarityenglish.common.model.interfaces.CopyProvider;
											import com.googlecode.bindagetools.util.Util;
											
											import spark.components.DataGroup;
											
											[Bindable]
											private var unitDuration:Number;
											
											public function getIndex(data:Object):Number {
												return (owner as DataGroup).dataProvider.getItemIndex(data);
											}
											
											override public function set data(value:Object):void {
												super.data = value;
												
												if (data) {
													if (getIndex(data) < 9) {
														unitItemIndexLabel.text = "0" + String(getIndex(data) + 1);
													} else {
														unitItemIndexLabel.text = String(getIndex(data) + 1);
													}
													
													if (String(data.@rightIcon).length > 0) {
														unitItemRightButton.visible = true;
														unitItemRightLabel.visible = true;
													} else {
														unitItemRightButton.visible = false;
														unitItemRightLabel.visible = false;
													}
													// correct unit name text is split from caption rather than the iconNames
													var leftIconString:String = String(data.@caption).split(' ')[0];
													var rightIconString:String = String(data.@caption).split(' ')[1];
													unitItemLeftLabel.text = leftIconString;
													unitItemRightLabel.text = rightIconString;

													// gh#1092
													unitDuration = data.@duration;
												}			
											}
										]]>
									</fx:Script>
									<s:VGroup width="100%" height="100%" gap="4">
										<s:Group width="100%" height="100%">
											<s:HGroup width="100%" height="100%" verticalAlign="middle">
												<s:Label id="unitItemIndexLabel" fontSize="14" verticalCenter="0" color="#005D5F" />
												<s:Spacer width="10" />
												<s:HGroup left="0" width="80" verticalCenter="0" verticalAlign="middle">
													<s:Button id="unitItemLeftButton" scaleX="0.8" scaleY="0.8" label="{outerDocument.hostComponent.getCopyProvider().getCopyForId(data.@leftIcon)}" />
													<s:Label id="unitItemLeftLabel" fontSize="14" color="#005D5F" />
												</s:HGroup>
												<s:Spacer width="20" />
												<s:HGroup width="80" verticalCenter="0" verticalAlign="middle">
													<s:Button id="unitItemRightButton" scaleX="0.8" scaleY="0.8" label="{outerDocument.hostComponent.getCopyProvider().getCopyForId(data.@rightIcon)}" />
													<s:Label id="unitItemRightLabel" fontSize="14" color="#005D5F" />
												</s:HGroup>	
											</s:HGroup>
											<s:HGroup id="durationHGroup" top="5" width="100%" horizontalAlign="right" verticalCenter="0">
												<s:Label id="durationLabel" text="{outerDocument.hostComponent.getCopyProvider().getCopyForId('courseDurationRenderTime', { time: Math.floor(unitDuration / 60) })}" color="#204C57" fontFamily="Mgbold" fontSize="21" fontWeight="bold" />
												<s:Label id="minLabel" fontSize="10" text="{outerDocument.hostComponent.getCopyProvider().getCopyForId('minLabel')}" color="#204C57" paddingTop="8"/>
											</s:HGroup>	
										</s:Group>	
										<progress:DottedLine width="100%" height="1" dotColor="#263A45" dotWidth="5" />		
									</s:VGroup>														
								</s:DataRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:DataGroup>
					<!-- Total time line-->
					<s:VGroup left="20" paddingTop="-8" width="100%" horizontalAlign="right" gap="5">
						<s:Rect width="100%" height="2">
							<s:fill>
								<s:SolidColor color="#204C57" />
							</s:fill>
						</s:Rect>
						<s:Group width="100%">
							<s:HGroup left="0" paddingTop="5">
								<s:Label id="totalLabel" fontSize="13" fontWeight="bold" color="#204C57" />
							</s:HGroup>
							<s:HGroup horizontalAlign="right" right="0" paddingTop="5 ">
								<s:Label id="totalDurationLabel" paddingTop="-5" color="#204C57" fontFamily="Mgbold" fontSize="21" fontWeight="bold" />
								<s:Label id="totalMinLabel" paddingTop="2" fontSize="10" color="#204C57" />
							</s:HGroup>
						</s:Group>			
					</s:VGroup>		
				</s:VGroup>	
			</s:Scroller>
			
			<s:Group width="500">
				<ui1:StackedCircleWedgeChart id="stackedChart" horizontalCenter="0" height="35" />
				
				<s:VGroup id="timeWedgeVGroup" horizontalCenter="0" top="70" horizontalAlign="center" gap="10" visible="false">
					<s:Label id="circleWedgeCourseLabel" fontSize="14" color="#333333" />
					<s:HGroup>
						<s:Label id="analysisTimeLabel" fontSize="28" fontWeight="bold" color="#204C57" />
						<s:Label id="minLabel" fontSize="14" paddingTop="9" color="#204C57"  />
					</s:HGroup>			
				</s:VGroup>
				<s:VGroup id="totalTimeWedgeVGroup" horizontalCenter="0" top="70" horizontalAlign="center" gap="10">
					<s:Label id="totalTimeLabel" fontSize="14" color="#333333"/>
					<s:HGroup>
						<s:Label id="totalTimeNumberLabel" fontSize="28" fontWeight="bold" color="#204C57" />
						<s:Label id="totalTimeMinLabel" fontSize="14" paddingTop="9" color="#204C57" />
					</s:HGroup>			
				</s:VGroup>
				<s:Button id="circleWedgeInstructionLabel" top="270" horizontalCenter="0" fontSize="13" fontWeight="normal" />
			</s:Group>		
		</s:HGroup>	
	</s:VGroup>	

</s:Skin>
