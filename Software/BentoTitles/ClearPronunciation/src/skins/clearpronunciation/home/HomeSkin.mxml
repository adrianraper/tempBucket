<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		enabled="{hostComponent.enabled}" xmlns:video="com.clarityenglish.controls.video.*" creationComplete="onCreationComplete(event)" xmlns:home="skins.clearpronunciation.assets.home.*" xmlns:vo="com.clarityenglish.clearpronunciation.vo.*" xmlns:title="skins.clearpronunciation.assets.title.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.clearpronunciation.view.home.HomeView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.layouts.VerticalLayout;
			
			protected function onCreationComplete(event:FlexEvent):void
			{
				// position course list part
				courseList.height = stage.stageHeight * 0.33;
				var verticalLayout:VerticalLayout = new VerticalLayout();
				verticalLayout.gap = (courseList.height - 185) / 3;
				courseList.layout = verticalLayout;
				
				// position unit list part
				unitListGroup.left = stage.stageWidth * 0.31;
				unitListGroup.width = stage.stageWidth * 0.66;
				unitListGroup.height = stage.stageHeight * 0.86;
				myHomeBubble.scaleX = myHomeBubble.scaleY = unitListGroup.width / myHomeBubble.width < unitListGroup.height / myHomeBubble.height ? unitListGroup.width / myHomeBubble.width : myHomeBubble.height / myHomeBubble.height;
				unitListInstuctionGroup.width = myHomeBubble.width * myHomeBubble.scaleX;
				unitListTileLayout.columnWidth = (unitListGroup.width - 130) * 0.5;
				unitListTileLayout.rowHeight = (stage.stageHeight * unitList.percentHeight) / 800;
				
				// position title bar
				homeTitleBarHGroup.width = stage.stageWidth;
				menuBarLT.width = Math.round((homeTitleBarHGroup.width - 64) * 0.35);
				menuBarMid.width = 64;
				menuBarRT.width = Math.round((homeTitleBarHGroup.width - 64) * 0.65);
				
				// position footer
				homeFooterGroup.top = stage.stageHeight - 290;
				
				courseList.addEventListener(IndexChangeEvent.CHANGE, onCourseListIndexChange);
				// when user back from unit, the bubble should zoom in to big size
				if (unitList.selectedItem) {
					myHomeBubble.scaleX = myHomeBubble.scaleY = stage.stageWidth / myHomeBubble.width;
				}
			}
			
			protected function onCourseListIndexChange(evnet:IndexChangeEvent):void {
				myHomeBubble.scaleX = myHomeBubble.scaleY = stage.stageWidth / myHomeBubble.width;
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="disabled" />
		<s:State name="normal" />
	</s:states>
			
	<s:Group>
		<s:List id="courseList" labelField="@caption" verticalCenter="-20" width="205" left="70" borderVisible="false" contentBackgroundAlpha="0">
			<s:itemRenderer>
				<fx:Component>
					<s:ItemRenderer autoDrawBackground="false" useHandCursor="true" buttonMode="true">
						<fx:Declarations>
							<s:DropShadowFilter id="dropDownShadowFilter" distance="2" angle="320" alpha="0.6" />
						</fx:Declarations>
						
						<s:states>
							<s:State name="normal" />
							<s:State name="hovered" />
							<s:State name="selected" />
						</s:states>
						
						<s:Rect radiusX="10" radiusY="10" width="180" height="45" includeIn="normal, hovered">
							<s:fill>
								<s:LinearGradient rotation="90">
									<s:GradientEntry color="#315D6B" color.hovered="#FFE6A9" />
									<s:GradientEntry color="#142730" color.hovered="#E8BB27" />
								</s:LinearGradient>
							</s:fill>
						</s:Rect>
						<home:triangleButton includeIn="selected" />
						
						<s:Group width="185" height="100%">
							<s:Label horizontalCenter="0" verticalCenter="0" verticalAlign="middle" text="{data.@caption}" color="#FFFFFF" color.hovered="#1D2D36" color.selected="#1D2D36" fontWeight="bold" fontSize="20" fontFamily="Mgbold" />
						</s:Group>
					</s:ItemRenderer>
				</fx:Component>
			</s:itemRenderer>
		</s:List>
		
		<s:Group id="unitListGroup">
			<!--unilit list background bubble-->
			<home:homeBubble id="myHomeBubble" verticalCenter="10" />
			
			<!--instruction-->
			<s:Group id="unitListInstuctionGroup" height="100" left="0" verticalCenter="-30">
				<home:homeInstructionArrow verticalCenter="-60" horizontalCenter="-220" />
				<s:Label id="homeInstructionLabel" width="380" horizontalCenter="20" verticalCenter="0" fontWeight="bold" fontSize="25" color="#333333" />
			</s:Group>
			
			<video:VideoSelector id="videoSelector" visible="false" />
			<s:List id="unitList" width="100%" height="80%" left="120" verticalCenter="0" borderVisible="false" contentBackgroundAlpha="0">
				<s:layout>
					<s:TileLayout id="unitListTileLayout" requestedColumnCount="2" orientation="columns" verticalGap="0"/>
				</s:layout>
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer autoDrawBackground="false" useHandCursor="true" buttonMode="true">
							<fx:Script>
								<![CDATA[
									import flash.utils.getDefinitionByName;
									
									import mx.charts.PieChart;
									import mx.charts.series.PieSeries;
									import mx.collections.ArrayCollection;
									import mx.core.UIComponent;
									import mx.events.FlexEvent;
									
									import org.osmf.events.LoaderEvent;									
									
									[Bindable]
									private var mediaFolder:String
									
									[Bindable]
									private var unitItemPieChartArrayCollection:ArrayCollection;
									
									private var _leftIconSrc:String;
									
									public override function set data(value:Object):void {
										super.data = value;
										
										if (data) {
											if (data.@coverage == 0) {
												pieChart.visible = false;
											} else {
												pieChart.visible = true;
												unitItemPieChartArrayCollection = new ArrayCollection([{coverage: 100 - data.@coverage}, {coverage: data.@coverage}]);	
											}
																						
											if (itemIndex < 9) {
												unitItemIndexLabel.text = "0" + String(itemIndex + 1);
											} else {
												unitItemIndexLabel.text = String(itemIndex + 1);
											}
											
											unitItemLeftLabel.text = data.@leftIcon;
											unitItemRightLabel.text = data.@rightIcon;
										}
									}
									
								]]>
							</fx:Script>
							<s:HGroup id="unitHGroup" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" gap="0">
								<mx:PieChart id="pieChart" dataProvider="{unitItemPieChartArrayCollection}" width="50" height="50" left="0">
									<mx:series>
										<mx:PieSeries field="coverage" labelPosition="none" filters="{[]}" />
									</mx:series>
								</mx:PieChart>
								<s:Label id="unitItemIndexLabel" fontSize="20" color="#333333" verticalCenter="0" />
								<s:Spacer width="10" />
								<s:Group id="unitItemHGroup" width="70%" verticalCenter="0">
									<s:HGroup left="0" verticalAlign="middle">
										<s:Button id="unitItemLeftButton" height="100%" verticalCenter="0" label="{outerDocument.hostComponent.getCopyProvider().getCopyForId(data.@leftIcon)}"  />
										<s:Label id="unitItemLeftLabel" fontSize="20" />
									</s:HGroup>
									<s:HGroup right="20" verticalAlign="middle" width="60">
										<s:Button id="unitItemRightButton" height="100%" verticalCenter="0" label="{outerDocument.hostComponent.getCopyProvider().getCopyForId(data.@rightIcon)}"/>
										<s:Label id="unitItemRightLabel" fontSize="20" />
									</s:HGroup>							
								</s:Group>
							</s:HGroup>							
						</s:ItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>
		</s:Group>
	</s:Group>
	
	<!--home title bar-->
	<s:HGroup id="homeTitleBarHGroup" gap="0" left="0" top="-50">
		<title:menuBarLT id="menuBarLT" />
		<title:menuBarMid id="menuBarMid" />
		<title:menuBarRT id="menuBarRT" />
	</s:HGroup>
	
	<!--home left corner logo-->
	<s:SWFLoader source="@Embed(source='skins/clearpronunciation/assets/home/homeLogo.png')" top="-50" left="0" />
	
	<!--home footer-->
	<s:Group id="homeFooterGroup">
		<home:homeFooter left="0" top="130" />
		<s:SWFLoader id="girlSWFLoader" source="@Embed(source='skins/clearpronunciation/assets/home/homeGirl.png')" left="0" />
	</s:Group>
	
</s:Skin>
