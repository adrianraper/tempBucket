<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" 
		xmlns:ui="com.clarityenglish.rotterdam.view.unit.ui.*" 
		xmlns:layouts="com.clarityenglish.rotterdam.view.unit.layouts.*"
		xmlns:widgets="skins.rotterdam.unit.widgets.*" xmlns:layouts1="com.clarityenglish.clearpronunciation.view.course.layouts.*" creationComplete="onCreationComplete(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.rotterdam.view.unit.widgets.GroupWidget")]
	</fx:Metadata>
	
	<fx:Declarations>
		<s:Animate id="groupWidgetCollapse" duration="500" target="{groupWidgetGroup}">
			<s:SimpleMotionPath property="height" valueTo="50" />
		</s:Animate>
		
		<s:Animate id="groupWidgetListCollapse" duration="500" target="{groupWidgetList}">
			<s:SimpleMotionPath property="height" valueTo="0" />
		</s:Animate>
		
		<s:Animate id="groupWidgetExpand" duration="500" target="{groupWidgetGroup}">
			<s:SimpleMotionPath property="height" valueTo="{hostComponent.groupWidgetHeight}" />
		</s:Animate>
		
		<s:Animate id="groupWidgeListExpand" duration="500" target="{groupWidgetList}">
			<s:SimpleMotionPath property="height" valueTo="{hostComponent.groupWidgetListHeight}" />
		</s:Animate>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ListCollectionView;
			import mx.collections.XMLListCollection;
			import mx.events.FlexEvent;
			
			protected function onCollapseToggleButtonClick(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if (collapseToggleButton.selected) {
					// store group widget height, for expand later
					hostComponent.groupWidgetHeight = contentHeight;
					groupWidgetCollapse.play();
					groupWidgetListCollapse.play();					
				} else {
					groupWidgetExpand.play();
					groupWidgeListExpand.play();
				}
			}
			
			protected function onCreationComplete(event:FlexEvent):void
			{
				// For the gourp of audio, the skin for group widget is different
				if (hostComponent.src == "audio") {
					groupWidgetList.percentWidth = 60;
					widgetVGroup.top = 0;
					widgetText.visible = false;
					widgetText.includeInLayout = false;
					collapseToggleButton.visible = false;
					collapseToggleButton.includeInLayout = false;
				} else {
					widgetVGroup.top = 10;
					widgetText.visible = true;
					widgetText.includeInLayout = true;
					collapseToggleButton.visible = true;
					collapseToggleButton.includeInLayout = true;
				}
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="normal" />
		<s:State name="editing_normal" stateGroups="editing"  />
		<s:State name="editing_selected" stateGroups="editing,selected" />
	</s:states>
	
	<s:Group id="groupWidgetGroup" width="100%" height="100%">
		<!--s:Rect right="0" left="0" top="0" bottom="0">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" />
			</s:fill>
		</s:Rect-->
		
		<s:VGroup id="widgetVGroup" top="10" width="100%" paddingBottom="20">
			<widgets:WidgetText id="widgetText" widget="{hostComponent}" editing.editing="true" width="100%" minHeight="20" />
			
			<ui:WidgetList id="groupWidgetList" width="100%" dataProvider="{new XMLListCollection(hostComponent.xml.exercise)}" borderVisible="false" useVirtualLayout="false" verticalScrollPolicy="off">
				<ui:layout>
					<layouts1:FreeUnitLayout />
				</ui:layout>
			</ui:WidgetList>
		</s:VGroup>
		
		<s:ToggleButton id="collapseToggleButton" click="onCollapseToggleButtonClick(event)" bottom="0" right="0" />
	</s:Group>
</s:Skin>
