<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:view="com.clarityenglish.bento.view.*"
		xmlns:course1="skins.clearpronunciation.assets.course.*"
		xmlns:ui="skins.clearpronunciation.home.ui.*"
		xmlns:ui1="com.clarityenglish.clearpronunciation.view.exercise.ui.*"
		xmlns:exercise="skins.clearpronunciation.assets.exercise.*"
		alpha.disabled="0.5"
		addedToStage="onAddedToStage(event)" creationComplete="onCreationComplete(event)"
		width="100%" height="100%">

	<fx:Metadata>
		[HostComponent("com.clarityenglish.clearpronunciation.view.exercise.ExerciseView")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
		import com.clarityenglish.bento.events.ExerciseEvent;
		import com.googlecode.bindagetools.Bind;

		import mx.collections.XMLListCollection;

			[Bindable]
			public var expandBottom:Number;

			public var isMakeSoundsExpand:Boolean;

			protected function onAddedToStage(event:Event):void {
				hostComponent.actionBarVisible = false;
			}

			protected function onExpandEnd(event:Event):void {
				makeSoundsGroup.top = 38;
				makeSoundsCollapseButton.visible = true;
				isMakeSoundsExpand = true;
			}

			protected function onCollapseStart(event:Event):void {
				makeSoundsGroup.top = null;
				makeSoundsCollapseButton.visible = false;
				isMakeSoundsExpand = false;
			}

			protected function onCreationComplete(event:Event):void {
				// Due to the position for tablet and browser is different, I have to assigned
				expandBottom = 44;

				Bind.fromProperty(hostComponent, "selectedExerciseNode").toFunction(function(node:XML):void {
					if (node) {
						// Exercises in introduction course won't have aniamtion. Collapse the animation page when switch to other exercise.
						if ( node.parent().parent().attribute('class') != 'introduction') {
							if (node.childIndex() == 0) {
								makeSoundsGroup.visible = practiseSoundsTitle.visible = true;
							} else {
								makeSoundsGroup.visible = practiseSoundsTitle.visible = false;
							}

							if (isMakeSoundsExpand)
								collapseAnimate.play();
						} else {
							makeSoundsGroup.visible = practiseSoundsTitle.visible = false;
						}
					}
				});
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<s:Animate id="expandAnimate" target="{makeSoundsGroup}" effectEnd="onExpandEnd(event)">
			<s:SimpleMotionPath id="expandMotionPath" property="height" valueFrom="50" valueTo="{height - 84}" />
		</s:Animate>
		<s:Animate id="collapseAnimate" target="{makeSoundsGroup}" effectStart="onCollapseStart(event)">
			<s:SimpleMotionPath id="collapseMotionPath" property="height" valueFrom="{height - 84}" valueTo="50" />
		</s:Animate>
		<s:DropShadowFilter id="dropShadowFilter" blurX="6" blurY="6" alpha="0.4" distance="0" angle="90" knockout="false"/>
	</fx:Declarations>

	<s:states>
		<s:State name="disabled" />
		<s:State name="normal" />
		
		<s:State name="exercise" />
		<s:State name="other" />
	</s:states>
	
	<!-- Background coloured blocks -->
	<s:Rect width="100%" top="0" bottom="0">
		<s:fill>
			<s:SolidColor color="#19B5E0" />
		</s:fill>
	</s:Rect>
	<s:Rect left="13" right="13" top="70" bottom="10">
		<s:fill>
			<s:SolidColor color="#FFFFFF" />
		</s:fill>
	</s:Rect>
		
	<!-- Exercise -->
	<view:DynamicView id="dynamicView" left="13" right="13" top="130" bottom="10" />

	<!--Practise the sounds title-->
	<!--Because cannot embed a new font in exercise, so insert the title fxg here-->
	<exercise:practiseTheSounds id="practiseSoundsTitle" left="90" top="170"/>

	<!--Make sounds-->
	<s:Group id="makeSoundsGroup" width="100%" bottom="{expandBottom}" height="50">
		<s:Group width="100%" height="100%" top="50" left="13" right ="13">
			<s:Rect width="100%" height="100%" filters="{[dropShadowFilter]}">
				<s:fill>
					<s:SolidColor color="#FFFFFF" />
				</s:fill>
			</s:Rect>
			<s:VGroup gap="40" top="80" paddingLeft="75" width="100%" height="100%" visible="{!hostComponent.isPlatformTablet}" includeInLayout="{!hostComponent.isPlatformTablet}">
				<exercise:howDoIMakeTheSounds />
				<s:Group width="100%">
					<s:VGroup left="0" width="300" gap="20">
						<s:SWFLoader id="leftAnimation" />
						<s:Label id="leftAnimationLabel" fontSize="15" width="100%" color="#263A45" visible="false" />
					</s:VGroup>
					<s:Group  left="290" top="20">
						<exercise:instructionBox />
						<s:Label id="instructionLabel" left="50" top="50" width="130" height="50" fontSize="14" color="#008391" />
					</s:Group>
					<s:VGroup left="520" width="300" gap="20">
						<s:SWFLoader id="rightAnimation" />
						<s:Label id="rightAnimationLabel" fontSize="15" width="100%" color="#263A45" visible="false" />
					</s:VGroup>
				</s:Group>
				<s:VGroup id="arrowInstructionGroup" paddingLeft="250">
					<s:Group>
						<s:Rect width="316" height="56" radiusX="10" radiusY="10">
							<s:fill>
								<s:SolidColor color="#23565A" />
							</s:fill>
						</s:Rect>
						<s:HGroup top="12" left="15">
							<exercise:redArrow />
							<s:Label id="redArrowTitleLabel" color="#FFFFFF" fontWeight="bold" fontSize="11" />
							<s:Label id="redArrowLabel" color="#FFFFFF" fontSize="11" />
						</s:HGroup>
						<s:HGroup bottom="10" left="15">
							<exercise:yellowArrow />
							<s:Label id="yellowArrowTileLabel" color="#FFFFFF" fontWeight="bold" fontSize="11" />
							<s:Label id="yellowArrowLabel" color="#FFFFFF" fontSize="11" />
						</s:HGroup>
					</s:Group>
				</s:VGroup>
			</s:VGroup>
			<s:Group width="544" height="340" top="120" horizontalCenter="0" verticalCenter="-30" visible="{hostComponent.isPlatformTablet}" includeInLayout="{hostComponent.isPlatformTablet}" >
				<s:SWFLoader source="@Embed(source='/skins/clearpronunciation/assets/exercise/tabletAnimationAlert.png')" />
				<s:Label id="tabletAnimationAlertLabel" width="200" height="200" left="40" top="100" fontSize="16" color="#263a45" />
			</s:Group>
		</s:Group>
		<!--Expand and collapse button-->
		<s:VGroup horizontalAlign="right" width="100%" paddingRight="12" paddingLeft="12" top="0" gap="0">
			<s:Button id="makeSoundsExpandButton" useHandCursor="true" buttonMode="true" click="expandAnimate.play()" />
			<s:Button id="makeSoundsCollapseButton" useHandCursor="true" buttonMode="true" visible="false" click="collapseAnimate.play()" />
		</s:VGroup>
	</s:Group>
	
	<!-- Title bar background -->
	<s:Group top="70" left="0" right="0" bottom="0">
			
		<s:Rect left="13" right="13" height="13" top="7">
			<s:fill>
				<s:SolidColor color="#FBCF57" />
			</s:fill>
		</s:Rect>
		<s:Rect width="100%" top="-70" height="80" bottomRightRadiusX="30" bottomRightRadiusY="30">
			<s:fill>
				<s:SolidColor color="#19B5E0" />
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="#000000" />
			</s:stroke>
		</s:Rect>
		<s:Rect width="100%" top="-70" height="9">
			<s:fill>
				<s:SolidColor color="#273B46" />
			</s:fill>
		</s:Rect>
				
		<!-- Left buttons -->
		<s:HGroup top="20" left="150">
			<s:Button id="backButton" useHandCursor="true" buttonMode="true" />
			<s:Button id="forwardButton" useHandCursor="true" buttonMode="true" />
		</s:HGroup>
		
		<!-- Right buttons -->
		<s:HGroup right="45" top="20">
			<s:Button id="feedbackButton" useHandCursor="true" buttonMode="true" />
			<s:Button id="markingButton" useHandCursor="true" buttonMode="true" />
			<s:Button id="startAgainButton" useHandCursor="true" buttonMode="true" />
		</s:HGroup>
		
		<!-- Rectangle to cover left and right sections of dynamic view -->
		<s:Rect top="38" bottom="0" width="13">
			<s:fill>
				<s:SolidColor color="#19B5E0" />
			</s:fill>
		</s:Rect>
		<s:Rect right="0" top="38" bottom="0" width="13">
			<s:fill>
				<s:SolidColor color="#19B5E0" />
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<!-- Top row -->
	<s:HGroup left="0" right="0">
		<course1:courseLogo />	
		
		<s:Spacer width="100%" />
		
		<s:Group width="350" height="61">
			<s:Group>
				<course1:dropDownListBg />
				<ui:UnitListItemRenderer id="currentUnitRenderer" showPieChart="false" showItemIndex="false" color="#FFFFFF" horizontalCenter="-10" verticalCenter="2" scaleX="1.2" scaleY="1.2" />
			</s:Group>
			<ui1:WindowShade id="windowShade" x="35" y="61" width="278" height="420">
				<s:Rect width="270" height="420" top="0" bottom="0" bottomLeftRadiusX="10" bottomLeftRadiusY="10" bottomRightRadiusX="10" bottomRightRadiusY="10" horizontalCenter="0">
					<s:stroke>
						<s:SolidColorStroke color="#497A7A" weight="8" />
					</s:stroke>
					<s:fill>
						<s:SolidColor color="#FFFFFF" />
					</s:fill>
				</s:Rect>
				<s:List id="unitList" dataProvider="{new XMLListCollection(hostComponent.getEnalbedUnitList(hostComponent.selectedExerciseNode.parent().parent()))}" width="283" bottom="10" top="12" horizontalCenter="4" verticalScrollPolicy="on" scaleX="0.9" scaleY="0.9" borderVisible="false" contentBackgroundAlpha="0" color="#333333">
					<s:layout>
						<s:VerticalLayout gap="10" />
					</s:layout>
				</s:List>
			</ui1:WindowShade>
		</s:Group>
		
		<s:Spacer width="100%" />
		
		<s:HGroup paddingTop="22" paddingRight="32" gap="43">
			<s:Button id="backToMenuButton" buttonMode="true" useHandCursor="true" />
			<s:Button id="recorderButton" buttonMode="true" useHandCursor="true" />
			<s:Button id="phonemicChartButton" buttonMode="true" useHandCursor="true" />
			<s:Button id="youWillButton" buttonMode="true" useHandCursor="true" />
		</s:HGroup>
	</s:HGroup>
	
	<s:Button id="logoutButton" top="9" right="10" scaleX="0.6" scaleY="0.6" buttonMode="true" useHandCursor="true" />
	
</s:Skin>
