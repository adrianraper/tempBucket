<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:login="skins.clearpronunciation.assets.login.*"
		xmlns:home="skins.clearpronunciation.assets.home.*"
        xmlns:bentoassets="skins.assets.*"
        creationComplete="onCreationComplete(event)">

	<fx:Metadata>
		[HostComponent("com.clarityenglish.bento.view.login.LoginView")]
	</fx:Metadata>

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		.signInHeader {
			fontSize: 16px;
			fontFamily: "MyriadPro";
			fontWeight: "bold";
			color: #125558;
			textAlign: center;
		}
		.anonymousHeader {
			fontSize: 18px;
			fontFamily: "MyriadPro";
			fontWeight: "bold";
			color: #125558;
			textAlign: center;
		}
		.signInPrompt {
			fontSize: 14px;
		}
		.buttonText {
			fontSize: 15px;
			fontFamily: "MyriadPro";
			fontWeight: "bold";
			color: #FFFFFF;
		}
		.signInDetail {
			fontSize: 11px;
		}
	</fx:Style>
    <fx:Script>
        <![CDATA[
        import mx.core.FlexGlobals;

        protected function onCreationComplete(e:Event):void {
            // gh#1267
            if (hostComponent.isPlatformipad)
                FlexGlobals.topLevelApplication.resizeForSoftKeyboard = true;
        }

        protected function onLoginSoftKeyboardActivating(event:Event):void {
            if (height < 700 && hostComponent.isPlatformAndroid)
                signInGroup.verticalCenter = registerGroup.verticalCenter = -100;
        }

        protected function onLoginSoftKeyboardDeactivate(event:Event):void {
            if (height < 700 && hostComponent.isPlatformAndroid)
                signInGroup.verticalCenter = registerGroup.verticalCenter = 10;
        }

        protected var signInDetailsMargin:uint = 20;
        ]]>
    </fx:Script>

	<fx:Declarations>
		<s:DropShadowFilter id="dropShadowFilter" blurX="3" blurY="3" alpha="0.3" distance="0" angle="180" knockout="false"/>
		<s:DropShadowFilter id="dropShadowFilter2" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false" inner="true"/>
	</fx:Declarations>

	<s:states>
		<s:State name="normal" />
		<s:State name="register" />
		<s:State name="error" />
		<s:State name="disabled" />
	</s:states>

	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:RadialGradient y="300" scaleX="2000" scaleY="2000" >
				<s:GradientEntry ratio="0.00" color="#03BBC6"/>
				<s:GradientEntry ratio="0.25" color="#07B0D3"/>
				<s:GradientEntry ratio="0.44" color="#1295D3"/>
				<s:GradientEntry ratio="0.68" color="#097DC2"/>
				<s:GradientEntry ratio="0.97" color="#0D5AA9"/>
			</s:RadialGradient>
		</s:fill>
	</s:Rect>
	
	<home:homeBgBubbles top="300" left="300" />
	<home:homeBgBubbles top="350" left="350" />
	<home:homeBgBubbles top="100" left="-100" scaleX="2" scaleY="2" />
	<home:homeBgBubbles verticalCenter="-100" left="500" scaleX="1" scaleY="1" />
	<home:homeBgBubbles bottom="0" left="200" scaleX="2" scaleY="2" />
	
	<!-- CP1 logo -->
	<s:BitmapImage left="0" top="0" source="@Embed(source='/skins/clearpronunciation/assets/login/loginLogo.png')" />

	<s:BitmapImage left="200" bottom="40" width="100%" fillMode="repeat" source="@Embed(source='/skins/clearpronunciation/assets/login/waveformFull.png')" />
	<s:BitmapImage left="0" bottom="30" source="@Embed(source='/skins/clearpronunciation/assets/login/loginGirl.png')" />

	<s:Label text="{hostComponent.getCopyProvider().getCopyForId('licencedToName', {name: hostComponent.licenceeName})}" includeInLayout="{hostComponent.licenceeName!=''}" visible="{hostComponent.licenceeName!=''}"
			 right="14" top="14" fontSize="13" color="0xFFFFFF" />

	<!-- branding -->
	<s:BitmapImage id="brandingImage1" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:BitmapImage id="brandingImage2" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:BitmapImage id="brandingImage3" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>
	<s:BitmapImage id="brandingImage4" visible="{hostComponent.branding}" includeInLayout="{hostComponent.branding}"/>

	<!-- Sign in details -->
	<s:Group id="signInGroup" excludeFrom="register" verticalCenter="0" horizontalCenter="0">
        <s:SkinnableContainer id="anonymousGroup" includeInLayout="{hostComponent.allowAnonymous}" visible="{hostComponent.allowAnonymous}" >
			<s:VGroup paddingTop="{1.5*signInDetailsMargin}" paddingRight="{2*signInDetailsMargin}" paddingBottom="8" paddingLeft="{2*signInDetailsMargin}"
					  horizontalAlign="center" gap="10">
				<bentoassets:anonymousMask />
				<s:Rect height="5" />
                <s:Line width="90%"  >
                    <s:stroke>
                        <s:SolidColorStroke color="#999999" weight="1" caps="square"/>
                    </s:stroke>
                </s:Line>
                <s:Label text="{hostComponent.anonymousCaption}" styleName="anonymousHeader" width="250" />
                <s:Line width="90%"  >
                    <s:stroke>
                        <s:SolidColorStroke color="#999999" weight="1" caps="square"/>
                    </s:stroke>
                </s:Line>
                <s:Rect height="10" /> <!-- this is a spacer -->
                <s:Button id="anonymousStartButton" label="{hostComponent.anonymousStartButtonCaption}" styleName="buttonText" useHandCursor="true" buttonMode="true"/>
            </s:VGroup>
        </s:SkinnableContainer>
		<s:SkinnableContainer id="trackingGroup" includeInLayout="{hostComponent.allowLogin}" visible="{hostComponent.allowLogin}" left="{anonymousGroup.width+10}"  >
            <s:VGroup paddingTop="{1.5*signInDetailsMargin}" paddingRight="{signInDetailsMargin}" paddingBottom="8" paddingLeft="{signInDetailsMargin}"
                      horizontalAlign="center" gap="10">
                <bentoassets:loginlogoCE horizontalCenter="0" />
                <s:Label text="{hostComponent.loginCaption}" styleName="signInHeader" width="260" />
                <s:TextInput id="loginKeyInput" prompt="{hostComponent.loginKeyCaption}" styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
                <s:VGroup visible="{hostComponent.verified}" includeInLayout="{hostComponent.verified}" gap="10" >
                    <s:TextInput id="passwordInput" displayAsPassword="true" prompt="{hostComponent.passwordCaption}" styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
                    <s:Button id="forgotPasswordButton" label="{hostComponent.forgotPasswordCaption}" useHandCursor="true" buttonMode="true"/>
                </s:VGroup>
                <s:VGroup width="100%" gap="0" includeInLayout="{hostComponent.allowSelfRegister}" visible="{hostComponent.allowSelfRegister}" >
                    <s:Button id="newUserButton" label="{hostComponent.newUserButtonCaption}" useHandCursor="true" buttonMode="true"
                              includeInLayout="{hostComponent.allowSelfRegister}" visible="{hostComponent.allowSelfRegister}" />
                    <s:Label id="loginDetail" text="{hostComponent.loginDetail}" styleName="signInDetail" width="260" />
                </s:VGroup>
                <s:Rect height="2" /> <!-- this is a spacer -->
                <s:Button id="loginButton" label="{hostComponent.loginButtonCaption}" styleName="buttonText" useHandCursor="true" buttonMode="true" />
            </s:VGroup>
		</s:SkinnableContainer>
	</s:Group>

	<!-- self register screen -->
	<s:SkinnableContainer id="registerGroup" excludeFrom="normal" verticalCenter="0" horizontalCenter="0" >
        <s:VGroup paddingTop="{1.5*signInDetailsMargin}" paddingRight="{signInDetailsMargin}" paddingBottom="8" paddingLeft="{signInDetailsMargin}"
                  horizontalAlign="center" gap="10" >
            <bentoassets:loginlogoCE horizontalCenter="0" />
            <s:Line width="90%">
                <s:stroke>
                    <s:SolidColorStroke color="#999999" weight="1" caps="square"/>
                </s:stroke>
            </s:Line>
            <s:Label text="{hostComponent.selfRegisterCaption}" styleName="signInHeader"  />
            <s:TextInput id="selfRegisterName" prompt="{hostComponent.selfRegisterNameCaption}"
                         includeInLayout="{hostComponent.selfRegisterNameCaption != null}" visible="{hostComponent.selfRegisterNameCaption != null}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="selfRegisterId" prompt="{hostComponent.selfRegisterIdCaption}"
                         includeInLayout="{hostComponent.selfRegisterIdCaption != null}" visible="{hostComponent.selfRegisterIdCaption != null}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="selfRegisterEmail" prompt="{hostComponent.selfRegisterEmailCaption}"
                         includeInLayout="{hostComponent.selfRegisterEmailCaption != null}" visible="{hostComponent.selfRegisterEmailCaption != null}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="selfRegisterPassword" displayAsPassword="true" prompt="{hostComponent.selfRegisterPasswordCaption}"
                         includeInLayout="{hostComponent.verified}" visible="{hostComponent.verified}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:TextInput id="confirmPassword" displayAsPassword="true" prompt="{hostComponent.confirmPasswordCaption}"
                         includeInLayout="{hostComponent.verified}" visible="{hostComponent.verified}"
                         styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter}" borderVisible="false" textIndent="5" softKeyboardActivating="onLoginSoftKeyboardActivating(event)" softKeyboardDeactivate="onLoginSoftKeyboardDeactivate(event)" />
            <s:Label id="selfRegisterDetail" text="{hostComponent.selfRegisterDetail}" styleName="signInDetail" width="260" />
            <s:HGroup gap="20">
                <s:Button id="cancelButton" label="{hostComponent.cancelButtonCaption}" styleName="buttonText" />
                <s:Button id="addUserButton" label="{hostComponent.addUserButtonCaption}" styleName="buttonText" />
            </s:HGroup>
        </s:VGroup>
	</s:SkinnableContainer>

	<!--Demo button-->
	<s:VGroup right="10" top="80" gap="5" visible="{hostComponent.isPlatformTablet}" includeInLayout="{hostComponent.isPlatformTablet}">
		<s:Button id="demoButton1" />
	</s:VGroup>

	<!-- Footer -->
	<s:Rect left="0" right="0" bottom="33" height="11">
		<s:fill>
			<s:SolidColor color="#008391" />
		</s:fill>
	</s:Rect>
	<s:Group left="0" right="0" height="33" bottom="0">
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:SolidColor color="#263A45" />
			</s:fill>
		</s:Rect>
		<login:ClarityEnglishLogo left="23" top="8" scaleX="0.8" scaleY="0.8" />
		<s:Label id="copyrightLabel" color="#FFFFFF" right="20" verticalCenter="0" fontSize="12" />
		<s:Label id="versionLabel" color="#FFFFFF" right="{copyrightLabel.width + 40}" verticalCenter="0" fontSize="12" />
	</s:Group>

</s:Skin>