<?xml version="1.0"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:view="com.clarityenglish.bento.view.*"
        xmlns:timer="com.clarityenglish.bento.view.timer.*"
        xmlns:ui="com.clarityenglish.practicalwriting.view.exercise.ui.*"
        xmlns:exercise="skins.practicalwriting.assets.exercise.*">

    <fx:Metadata>
        [HostComponent("com.clarityenglish.practicalwriting.view.exercise.ExerciseView")]
    </fx:Metadata>

    <fx:Declarations>
        <s:DropShadowFilter id="dropShadowFilter" color="#989898" blurX="10" blurY="10" alpha="0.6" distance="0" angle="90" knockout="false" inner="true"/>
    </fx:Declarations>

    <fx:Script>
        <![CDATA[
            import com.clarityenglish.practicalwriting.view.progress.ProgressView;

        import mx.collections.XMLListCollection;

            /*protected function onSoftKeyboardActivate(event:SoftKeyboardEvent):void {
                trace("softkeyboard heigth: "+this.stage.softKeyboardRect.height);
                timerComponent.bottom = this.stage.softKeyboardRect.height;
            }

            protected function onSoftKeyboardDeactivate(event:SoftKeyboardEvent):void {
                timerComponent.bottom = 0;
            }*/
        ]]>
    </fx:Script>

    <!-- states -->
    <s:states>
        <s:State name="disabled" />
        <s:State name="normal" />

        <s:State name="exercise" />
        <s:State name="other" />
    </s:states>

    <s:layout>
        <s:BasicLayout/>
    </s:layout>

    <s:Group id="exerciseGroup" right="0" left="0" top="0" bottom="0">
        <!--Header-->
        <s:Rect left="0" right="0" top="0" height="5">
            <s:fill>
                <s:SolidColor color="#FFD988"/>
            </s:fill>
        </s:Rect>

        <!--Exercise Background-->
        <s:Group top="45" left="15" right="15" height="100%">
            <s:Rect left="0" right="0" height="100%">
                <s:fill>
                    <s:SolidColor color="#FFFFFF"/>
                </s:fill>
            </s:Rect>
        </s:Group>

        <!-- Exercise -->
        <view:DynamicView id="dynamicView" left="17" right="15" top="65" bottom="10"/>

        <!--dynamicView disable cover-->
        <s:Rect id="dynamicViewCover" left="17" right="15" top="30" visible="false">
            <s:fill>
                <s:SolidColor color="#606060" alpha="0.2"/>
            </s:fill>
        </s:Rect>

        <!--Exercise Left Bar-->
        <s:Rect width="20" left="-5" top="40" bottom="-5" filters="{[dropShadowFilter]}">
            <s:fill>
                <s:LinearGradient rotation="90">
                    <s:GradientEntry color="#FFFFFF"/>
                    <s:GradientEntry color="#DBDBDB"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>

        <!--Exercise Right Bar-->
        <s:Rect width="20" right="-5" top="40" bottom="-5" filters="{[dropShadowFilter]}">
            <s:fill>
                <s:LinearGradient rotation="90">
                    <s:GradientEntry color="#FFFFFF"/>
                    <s:GradientEntry color="#DBDBDB"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>

        <!--Button Bar background-->
        <s:Rect top="5" height="40 " left="0" right="0">
            <s:fill>
                <s:LinearGradient rotation="90">
                    <s:GradientEntry color="#FFFFFF"/>
                    <s:GradientEntry color="#EDEBEB"/>
                </s:LinearGradient>
            </s:fill>
        </s:Rect>

        <!--Course Label-->
        <s:Button id="courseLabelButton" left="52" top="20"
                 label="{hostComponent.selectedExerciseNode.parent().parent().attribute('caption')}" fontSize="15" fontWeight="normal"
                 color="{getStyle('pieChartFillColor')[hostComponent.courseIndex]}" useHandCursor="true" buttonMode="true"/>

        <!-- Top Right Buttons -->
        <s:HGroup right="0" top="5" gap="1" horizontalAlign="right" scaleX="{width > 990 ? 1 : 0.92}">
            <s:Button id="markingButton" color="0x333333" fontSize="15" fontFamily="HelveticaMd" buttonMode="true"
                      useHandCursor="true"/>
            <s:Button id="feedbackButton" visible="false" includeInLayout="false" color="0x333333" fontSize="15"
                      fontFamily="HelveticaMd" buttonMode="true" useHandCursor="true"/>
            <s:Button id="startAgainButton" color="0x333333" fontSize="15" fontFamily="HelveticaMd" buttonMode="true"
                      useHandCursor="true"/>
            <!--s:Button id="recorderButton" color="0x333333" fontSize="15" fontFamily="HelveticaMd" buttonMode="true"useHandCursor="true"/-->
            <s:Button id="backButton" color="0x333333" fontSize="15" fontFamily="HelveticaMd" buttonMode="true"
                      useHandCursor="true" visible="{!hostComponent.isDirectStartEx &amp;&amp; !hostComponent.isFirstExercise}"/>
            <s:Button id="forwardButton" color="0x333333" fontSize="15" fontFamily="HelveticaMd" buttonMode="true"
                      useHandCursor="true" visible="{!hostComponent.isDirectStartEx}" />
        </s:HGroup>

        <!--Top Dropdown menu-->
        <s:Group top="0" left="300" width="272" visible="{!hostComponent.isDirectStartEx}">
            <ui:WindowShade id="windowShade" top="47" width="300" height="368">
                <s:Rect width="252" height="368" top="0" bottom="0" bottomLeftRadiusX="8" bottomLeftRadiusY="8"
                        bottomRightRadiusX="8" bottomRightRadiusY="8" horizontalCenter="0"
                        filters="{[dropShadowFilter]}">
                    <s:fill>
                        <s:SolidColor color="#FFFFFF"/>
                    </s:fill>
                </s:Rect>
                <s:List id="exerciseList"
                        dataProvider="{new XMLListCollection(hostComponent.selectedExerciseNode.parent().exercise)}"
                        width="265" bottom="10" top="10" left="8" verticalScrollPolicy="on" scaleX="0.9" scaleY="0.9"
                        borderVisible="false" contentBackgroundAlpha="0">
                    <s:layout>
                        <s:VerticalLayout gap="0"/>
                    </s:layout>
                    <s:itemRenderer>
                        <fx:Component>
                            <s:ItemRenderer width="100%">
                                <s:states>
                                    <s:State name="normal"/>
                                    <s:State name="selected"/>
                                    <s:State name="hovered"/>
                                </s:states>

                                <s:Rect left="0" right="0" top="0" bottom="0" includeIn="selected, hovered">
                                    <s:fill>
                                        <s:SolidColor color="#FEE9CB"/>
                                    </s:fill>
                                </s:Rect>

                                <s:HGroup left="10" top="10" bottom="10" verticalAlign="middle">
                                    <exercise:arrow/>
                                    <s:Label text="{data.@caption}" color="#333333" color.selected="#09789C"
                                             color.hovered="#333333" fontSize="13"/>
                                </s:HGroup>
                            </s:ItemRenderer>
                        </fx:Component>
                    </s:itemRenderer>
                </s:List>
            </ui:WindowShade>
            <s:Group id="exerciseCaptionGroup" width="300" height="48" useHandCursor="true" buttonMode="true">
                <exercise:dropDownMenu top="-5" width="300"/>
                <s:Label text="{hostComponent.selectedExerciseNode.@caption}" horizontalCenter="0" verticalCenter="0"
                         color="#FFFFFF" fontSize="15" fontFamily="Helvetica"/>
            </s:Group>
        </s:Group>

        <!--Timer-->
        <timer:TimerComponent id="timerComponent" bottom="0" width="100%" height="94"
                              timerTotalTime="{hostComponent.timerTotalTime}"
                              timerSectionLabels="{hostComponent.timerSectionLabels}"
                              contentPath="{hostComponent.href.rootPath}"
                              copyProvider="{hostComponent.copyProvider}"
                              textSize="20" trackColor="#15516D" trackHighLightColor="#0681A8"
                              isPlatformTablet="{hostComponent.isPlatformTablet}"
                              visible="{hostComponent.timerTotalTime.length > 0}"
                              includeInLayout="{hostComponent.timerTotalTime.length > 0}"/>

        <!--Footer-->
        <s:Rect left="0" right="0" bottom="0" height="5">
            <s:fill>
                <s:SolidColor color="#09789C"/>
            </s:fill>
        </s:Rect>
    </s:Group>

</s:Skin>
