<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:login="skins.rotterdam.builder.assets.login.*"
		xmlns:assets="skins.assets.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.bento.view.login.LoginView")]
	</fx:Metadata>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		.signInHeader {
			fontSize: 16;
			fontFamily: "MyriadPro";
			fontWeight: "bold";
			color: #125558;
		}
		.signInPrompt {
			fontSize: 14;
		}
		.buttonText {
			fontSize: 14;
			fontFamily: "MyriadPro";
			fontWeight: "bold";
			color: #FFFFFF;
		}
	</fx:Style>
	<fx:Declarations>
		<s:GlowFilter id="glowFilter" alpha="0.60" blurX="8" blurY="8" color="#000000" knockout="true" quality="3" />
		<s:DropShadowFilter id="dropShadowFilter" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false"/>
		<s:DropShadowFilter id="dropShadowFilter2" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false" inner="true"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
		import mx.core.FlexGlobals;
		import mx.events.FlexEvent;

		protected function onFreeCourseClick(event:MouseEvent):void {
			navigateToURL(new URLRequest("http://www.clarityenglish.com/service/prog/CCB-GettingStarted/index.html"),"_blank");
		}
		protected function onSoftKeyboardActivating(event:SoftKeyboardEvent):void {
			signInGroup.verticalCenter = -70;
		}

		protected function onSoftKeyboardDeactivate(event:SoftKeyboardEvent):void {
			if (event.triggerType == SoftKeyboardTrigger.USER_TRIGGERED)
				signInGroup.verticalCenter = 0;
		}

		protected var signInDetailsMargin:uint = 20;

		]]>
	</fx:Script>
	<s:states>
		<s:State name="normal" />
		<s:State name="register" />
		<s:State name="error" />
		<s:State name="disabled" />
	</s:states>
	
	<!-- shadow -->
	<s:Rect top="0" bottom="0" left="0" right="0" filters="{glowFilter}" >
		<s:fill>
			<s:SolidColor color="0x808080" />
		</s:fill>
	</s:Rect>
	
	<!-- background gh#224 -->
	<s:Rect top="0" bottom="0" left="0" right="0" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}">
		<s:fill >
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0xFFFFFF" ratio="0" />
				<s:GradientEntry color="0xFFFFFF" ratio="0.3" />
				<s:GradientEntry color="0xE6E6E6" ratio="0.6" />
				<s:GradientEntry color="0xE6E6E6" ratio="1" />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>		

	<!-- top header -->
	<s:Rect left="0" right="0" top="0" height="40"  >
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry color="0x4D4D4D" />
				<s:GradientEntry color="0x333333"  />
			</s:LinearGradient>
		</s:fill>
	</s:Rect>

	<!-- top header -->
	<s:Label id="sch_lbl" text="{hostComponent.getCopyProvider().getCopyForId('licencedToName', {name: hostComponent.licenceeName})}" right="20" top="14" fontSize="13" color="0xFFFFFF" visible="{hostComponent.licenceeName}" includeInLayout="{hostComponent.licenceeName}" />
	
	<!-- gh#224 If it seems likely that more than 4 image components are needed, we should switch to a DataGroup and ItemRenderer -->
	<s:BitmapImage id="brandingImage1" />
	<s:BitmapImage id="brandingImage2" />
	<s:BitmapImage id="brandingImage3" />
	<s:BitmapImage id="brandingImage4" />
	<s:SWFLoader source="@Embed(source='/skins/rotterdam/builder/assets/login/HoneyCones.png')" horizontalCenter="-260" top="330" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>
	<s:SWFLoader source="@Embed(source='/skins/rotterdam/builder/assets/login/HoneyConesLarge.png')" horizontalCenter="250" top="360" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>
	<login:HoneyGraphic horizontalCenter="300" top="40" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>
	<s:SWFLoader source="@Embed(source='/skins/rotterdam/builder/assets/login/FreeCourse.png')" horizontalCenter="240" top="400" click="onFreeCourseClick(event)" buttonMode="true" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>

	<!-- Sign in details -->
	<s:HGroup id="signInGroup" excludeFrom="register" horizontalCenter="0" verticalCenter="0" gap="20" >
		<s:SkinnableContainer includeInLayout="{hostComponent.allowLogin}" visible="{hostComponent.allowLogin}" >
			<s:VGroup paddingTop="{signInDetailsMargin}" paddingRight="{signInDetailsMargin}" paddingBottom="{signInDetailsMargin}" paddingLeft="{signInDetailsMargin}" 
					  horizontalAlign="center" gap="10">
				<assets:loginlogoCE horizontalCenter="0" />
				<s:Rect height="10" /> <!-- this is a spacer -->
				<s:Label text="{hostComponent.loginCaption}" styleName="signInHeader"  />
				<s:TextInput id="loginKeyInput" prompt="{hostComponent.loginKeyCaption}" styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter2}" borderVisible="false"/>
				<s:VGroup visible="{hostComponent.verified}" includeInLayout="{hostComponent.verified}" >
					<s:TextInput id="passwordInput" displayAsPassword="true" prompt="{hostComponent.passwordCaption}" styleName="signInPrompt" width="260" height="35" filters="{dropShadowFilter2}" borderVisible="false"/>
					<s:Button id="forgotPasswordButton" label="{hostComponent.forgotPasswordCaption}" useHandCursor="true" buttonMode="true" />
				</s:VGroup>
				<s:Button id="loginButton" label="{hostComponent.loginButtonCaption}" right="10" bottom="0"/>
			</s:VGroup>
		</s:SkinnableContainer>
	</s:HGroup>
	
	<!--
	<s:Group horizontalCenter="0" top="40">
		<s:Rect width="424" height="290" filters="{dropShadowFilter}" radiusX="8" radiusY="8" verticalCenter="70" horizontalCenter="0" alpha="0.7">
			<s:fill>
				<s:SolidColor color="0xFFFFFF"/>
			</s:fill>
		</s:Rect>	
		<s:Group horizontalCenter="0" verticalCenter="90">
			<s:VGroup horizontalAlign="center">
				<s:VGroup>
					<s:Spacer height="1" />
					<s:VGroup>
						<s:Label id="loginKey_lbl" fontSize="16" fontWeight="bold" color="0x333333" text="{hostComponent.loginKeyCaption}"/>
						<s:TextInput id="loginKeyInput" fontSize="14" width="220" height="35" filters="{dropShadowFilter2}" borderVisible="false"/>
					</s:VGroup>
					<s:Spacer height="20" />
					<s:VGroup>
						<s:Label id="loginPassword_lbl" fontSize="16" fontWeight="bold" color="0x333333" text="{hostComponent.passwordCaption}" />
						<s:TextInput id="passwordInput" displayAsPassword="true" width="220" height="35" fontSize="14" fontWeight="bold" filters="{dropShadowFilter2}" borderVisible="false"/>
					    <s:VGroup paddingLeft="77">
							<s:Button id="forgotPassword_btn" label="{hostComponent.forgotPasswordCaption}" click="forgotPasswordHandler(event)" useHandCursor="true" buttonMode="true" />
						</s:VGroup>					
					</s:VGroup>
					<s:Spacer height="10" />
				</s:VGroup>
				<s:Button id="loginButton" label="{hostComponent.getCopyProvider().getCopyForId('loginButton')}" />	
			</s:VGroup>
		</s:Group>
	</s:Group>
	-->
	
	<s:BitmapImage source="@Embed(source='/skins/rotterdam/builder/assets/login/CCBLogo.png')" horizontalCenter="0" top="100" visible="{!hostComponent.branding}" includeInLayout="{!hostComponent.branding}"/>
</s:Skin>
