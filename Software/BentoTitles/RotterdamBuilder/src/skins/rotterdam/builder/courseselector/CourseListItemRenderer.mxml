<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false">
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.common.vo.content.Course;
			import com.clarityenglish.rotterdam.view.courseselector.events.CourseDeleteEvent;
			import com.clarityenglish.rotterdam.view.courseselector.events.CourseSelectEvent;
			
			import mx.collections.ArrayCollection;

			[Bindable]
			private var usageStatsDataProvider:ArrayCollection;
			
			[Bindable]
			private var maxValue:uint;
			
			// gh#689
			public override function set data(value:Object):void {
				super.data = value;
				// gh#91 can you see this course? can you delete it (only the owner can)
				if (data) {
					this.enabled = !(data.attribute("enabledFlag").length() > 0) || (data.@enabledFlag > 0);
					this.deleteCourseButton.enabled = (data.@enabledFlag & Course.EF_OWNER);
					
					// gh#954 Format the data provider for the usage stats
					maxValue = 0;
					if (data.hasOwnProperty('timesUsed')) {
						var usageStats:Array = new Array();
						var valuesArray:Array = data.timesUsed.split(',');
						for (var i:uint=0; i<valuesArray.length; i++) {
							usageStats[i] = { month:i+1, times:valuesArray[i] };
							maxValue = (valuesArray[i] > maxValue) ? valuesArray[i] : maxValue; 
						}
						usageStatsDataProvider = new ArrayCollection(usageStats);
					}
				}
			}
			
			protected function onItemGroupClick(event:MouseEvent):void {
				dispatchEvent(new CourseSelectEvent(CourseSelectEvent.COURSE_SELECT, true));
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dropShadowFilter" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false" />
		<s:DropShadowFilter id="dropShadowFilter2" blurX="6" blurY="6" alpha="0.4" distance="1.5" angle="200" knockout="false" />
			
		<mx:SolidColor id="sc1" color="#FFCB1C" alpha=".3"/>
		<mx:SolidColorStroke id="lineStroke" color="#FFCB1C" weight="2"/>
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:Group click="onItemGroupClick(event)" filters="{[dropShadowFilter]}" filters.hovered="{[dropShadowFilter2]}" width="100%">
		<s:Rect height="60" left="3" top="3" right="3" bottom="3" bottomLeftRadiusX="4" bottomLeftRadiusY="4" bottomRightRadiusX="4" bottomRightRadiusY="4" topLeftRadiusX="4" topRightRadiusX="4" topLeftRadiusY="4" topRightRadiusY="4">		
			<s:fill>
				<s:SolidColor color="0xFFFFFF" color.hovered="0xFFF6CC" color.selected="0xFFF6CC" />
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<s:Group includeIn="hovered, selected" x="3" y="3">
		<s:Path data="M 4 0 L 20 0 L 0 20 L 0 4 Q 0 0 4 0 Z">
			<s:fill>
				<s:LinearGradient rotation="45" scaleX="50" x="0" y="0">
					<s:GradientEntry color="0xFFC700" />
					<s:GradientEntry color="0xD19026"/>
				</s:LinearGradient>
			</s:fill>
		</s:Path>
	</s:Group>
	
	<!--The course caption here is on the top of course list item, so we also need to add click listener here-->
	<s:Group verticalCenter="0" left="25" right="25" width="100%" click="onItemGroupClick(event)">
		<s:HGroup verticalAlign="middle" width="100%">
			<s:Label text="{data.@caption}" fontSize="15" fontWeight="bold" width="100%" />
			<s:Spacer />
			<s:HGroup paddingTop="10" verticalAlign="top" height="100%" >
				<s:Label text="{maxValue}" fontSize="9" visible="{maxValue > 0}" />
				<mx:AreaChart id="timesUsedChart" width="120" height="60" dataProvider="{usageStatsDataProvider}" visible="{maxValue > 0}" 
							  seriesFilters="[]" >
					<mx:backgroundElements>
						<mx:GridLines gridDirection="both" horizontalTickAligned="true" verticalTickAligned="true"/>
					</mx:backgroundElements>
					<mx:verticalAxis>
						<mx:LinearAxis id="vaxis" minimum="0" maximum="{Math.ceil(maxValue/5)*5}" interval="{Math.ceil(maxValue/5)}" />
					</mx:verticalAxis>
					<mx:horizontalAxis>
						<mx:CategoryAxis id="haxis" categoryField="month" title="12 months use"/>
					</mx:horizontalAxis>
					<mx:horizontalAxisRenderers>
						<mx:AxisRenderer axis="{haxis}" tickPlacement="none" minorTickPlacement="none" showLabels="false" showLine="false" />
					</mx:horizontalAxisRenderers>
					<mx:verticalAxisRenderers>
						<mx:AxisRenderer axis="{vaxis}" tickPlacement="none" minorTickPlacement="none" showLabels="false" showLine="false" />
					</mx:verticalAxisRenderers>
					<mx:series>
						<mx:AreaSeries yField="times" xField="month" areaStroke="{lineStroke}" areaFill="{sc1}" radius="2">
							<mx:itemRenderer>
								<fx:Component>
									<mx:CircleItemRenderer />
								</fx:Component>
							</mx:itemRenderer>
						</mx:AreaSeries>
					</mx:series>			
				</mx:AreaChart>
			</s:HGroup>
			<s:Spacer width="36" />
		</s:HGroup>
	</s:Group>

    <!-- delete button has to be outside any group with item click event -->
    <s:Group verticalCenter="0" width="100%">
        <s:HGroup verticalAlign="middle" width="100%" horizontalAlign="right" right="25" >
            <s:Button id="deleteCourseButton" width="21"
                  skinClass="skins.rotterdam.ui.DeleteButtonSkin"
                  click="dispatchEvent(new CourseDeleteEvent(CourseDeleteEvent.COURSE_DELETE, data as XML, true))" />
        </s:HGroup>
    </s:Group>


</s:ItemRenderer>
