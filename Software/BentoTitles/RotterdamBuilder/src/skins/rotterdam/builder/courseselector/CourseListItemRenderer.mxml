<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				autoDrawBackground="false">
	<fx:Script>
		<![CDATA[
			import com.clarityenglish.rotterdam.view.courseselector.events.CourseDeleteEvent;
			import com.clarityenglish.rotterdam.view.courseselector.events.CourseSelectEvent;

			// gh#689
			public override function set data(value:Object):void {
				super.data = value;
				// gh#91
				if (data) this.enabled = !data.hasOwnProperty("@enabledFlag") || (data.@enabledFlag > 0);
			}
			
			protected function onItemGroupClick(event:MouseEvent):void {
				trace("on item group click");
				dispatchEvent(new CourseSelectEvent(CourseSelectEvent.COURSE_SELECT, true));
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dropShadowFilter" blurX="6" blurY="6" alpha="0.5" distance="0" angle="180" knockout="false" />
		<s:DropShadowFilter id="dropShadowFilter2" blurX="6" blurY="6" alpha="0.5" distance="1" angle="200" knockout="false" />
	</fx:Declarations>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="hovered" />
		<s:State name="selected" />
	</s:states>
	
	<s:Group width="100%" click="onItemGroupClick(event)" filters="{[dropShadowFilter]}">
		<s:Rect height="70" left="3" top="3" right="3" bottom="3" bottomLeftRadiusX="4" bottomLeftRadiusY="4" bottomRightRadiusX="4" bottomRightRadiusY="4" topLeftRadiusX="4" topRightRadiusX="4" topLeftRadiusY="4" topRightRadiusY="4">		
			<s:fill>
				<s:SolidColor color="0xFFFFFF" color.hovered="0xFFF6CC" color.selected="0xFFF6CC" />
			</s:fill>
		</s:Rect>
	</s:Group>
	
	<s:Group includeIn="hovered, selected" x="3" y="3">
		<s:Path data="M 0 0 L 20 0 L 0 20 L 0 0 Z">
			<s:fill>
				<s:LinearGradient rotation="45" scaleX="50" x="0" y="0">
					<s:GradientEntry color="0XFFC700" />
					<s:GradientEntry color="0xD19026" />
				</s:LinearGradient>
			</s:fill>
		</s:Path>
	</s:Group>
	
	<!--The course caption here is on the top of course list item, so we also need to add click listener here-->
	<s:Group left="25" verticalCenter="0" click="onItemGroupClick(event)">
		<s:Label text="{data.@caption}" fontSize="15" fontWeight="bold" width="350" />
	</s:Group>
	
	<s:Group right="25" verticalCenter="0">
		<s:Button id="deleteCourseButton"
				  skinClass="skins.rotterdam.ui.DeleteButtonSkin"
				  click="dispatchEvent(new CourseDeleteEvent(CourseDeleteEvent.COURSE_DELETE, data as XML, true))" />
	</s:Group>
	
</s:ItemRenderer>
