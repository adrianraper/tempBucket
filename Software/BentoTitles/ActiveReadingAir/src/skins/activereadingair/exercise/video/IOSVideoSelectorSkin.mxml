<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" xmlns:players="com.clarityenglish.controls.video.players.*" creationComplete="onCreationComplete(event)">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.clarityenglish.controls.video.VideoSelector")]
	</fx:Metadata>
	
	<fx:Declarations>
		<s:DropShadowFilter id="dropShadowFilter" angle="0" distance="0" alpha="0.5" blurX="8" blurY="5" />
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.components.VideoPlayer;
			import spark.events.IndexChangeEvent;
			
			protected function onCreationComplete(event:FlexEvent):void {
				channelList.visible = false;
				
				videoPlayer.stop();
				videoList.addEventListener(IndexChangeEvent.CHANGE, onVideoListIndexChange);
				stage.addEventListener(MouseEvent.CLICK, onStageClick);
				
				videoList.selectedIndex = 0;
				videoList.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
				
				if (hostComponent.videoCollection.length > 1) {
					videoList.visible = true;
				} else {
					videoList.visible = false;
				}
			}
			
			protected function onStageClick(event:MouseEvent):void {
				var component:Object = event.target;
				var componentArray:Array = component.toString().split(".");
				var componentID:String = componentArray[componentArray.length - 1];
				if (component is Button && componentID != "readButton") {
					videoList.selectedItem = null;
					videoPlayer.visible = false;
				}
			}
			
			protected override function commitProperties():void {
				super.commitProperties();
				
				if (hostComponent.autoPlay) {
					videoList.selectedIndex = 0;
					videoList.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
					hostComponent.autoPlay = false;
				}
			}
			
			protected function onVideoListIndexChange(event:Event):void {
				videoPlayer.createStageWebView();
				videoPlayer.visible = true; 
			}
			
			protected function onPlaceholderClick(event:MouseEvent = null):void {
				// For now the default index is 0, but latter we will get index from widgetlist which is user prefered.
				videoList.selectedIndex = 0;
				videoList.dispatchEvent(new IndexChangeEvent(IndexChangeEvent.CHANGE));
				// Manually set the focus here, for we manually change the video list index.
				focusManager.setFocus(videoList);
			}
		]]>
	</fx:Script>
	
	<!--Video background-->
	<!--s:Group left="84" top="20" width="240" height="320">
		<s:Rect width="100%" height="100%" filters="{[dropShadowFilter]}">
			<s:fill>
				<s:SolidColor color="#FFFFFF" />
			</s:fill>
		</s:Rect>
		<s:SWFLoader source="@Embed(source='skins/activereading/assets/loading.swf')" verticalCenter="0" horizontalCenter="0" />
	</s:Group-->	
	
	<!-- The video players -->
	<players:WebViewVideoPlayer id="videoPlayer" left="42" top="10" width="245" height="325" placeholderSource="{hostComponent.placeholderSource}"/>
	<!--players:OSMFVideoPlayer id="videoPlayer" left="0" width="290" height="400" /-->
	
	<!-- Placeholder image -->
	<!--s:Image id="placeholderImage" filters="{[dropShadowFilter]}" left="83" top="20" source="{hostComponent.placeholderSource}" visible="{videoList.selectedItem == null}" buttonMode="true" useHandCursor="true" click="onPlaceholderClick(event)" /-->
	
	<!-- Channel list -->
	<s:List id="channelList" top="260" left="30" width="320" horizontalScrollPolicy="off" >
		<s:layout>
			<s:HorizontalLayout />
		</s:layout>
	</s:List>
	<s:Button id="scriptButton" left="411" top="172" width="50" height="45" />
	
	<!-- Video list -->
	<s:List id="videoList" top="4" right="-69" width="64" height="100%" horizontalScrollPolicy="off" minHeight="0" minWidth="0" borderVisible="false" contentBackgroundAlpha="0">
	</s:List>	
</s:Skin>
