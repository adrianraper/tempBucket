<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:view="com.clarityenglish.resultsmanager.view.management.components.*"
		   implements="com.clarityenglish.common.view.interfaces.CopyReceiver">
	<mx:Script>
		<![CDATA[
		import com.clarityenglish.common.model.interfaces.CopyProvider;
		import com.clarityenglish.common.vo.content.Content;
		import com.clarityenglish.common.vo.content.Title;
		import com.clarityenglish.resultsmanager.vo.manageable.Manageable;
		import com.clarityenglish.resultsmanager.Constants;
		import com.clarityenglish.resultsmanager.view.management.events.ReportEvent;
		import com.clarityenglish.resultsmanager.view.management.ui.ReportWindow;
		import com.clarityenglish.utils.TraceUtils;

		import flash.text.StyleSheet;

		import mx.core.UIComponent;
		import mx.managers.PopUpManager;

		import org.davekeen.utils.ClassUtils;

		private var copyProvider:CopyProvider;

		public var content:Array;
		public var contentExcludeAA:Array = [];

		public var manageables:Array;

		private var reportWindow:ReportWindow;

		public function setCopyProvider(copyProvider:CopyProvider):void {
			this.copyProvider = copyProvider;

			var replaceObj:Object = new Object();
			replaceObj.helpFolder = Constants.HOST + Constants.HELP_FOLDER;
			replaceObj.helpFile = replaceObj.helpFolder + copyProvider.getCopyForId("guide");
			// I can directly link to a destination with #tutorials. But this is not the same as bookmarks which Word will build for me.
			replaceObj.iconsRef = copyProvider.getCopyForId("helpPageIconsRef");
			replaceObj.pdfBookmarks = "&pagemode=bookmarks";
			replaceObj.searchAnimation = "http://www.viewletcentral.com/vc/viewlet/463414924/";
			replaceObj.hiddenContentAnimation = replaceObj.helpFolder + copyProvider.getCopyForId("tutorialHiddenContent");
			//TraceUtils.myTrace("helpFolder=" + replaceObj.helpFolder);
			helpTextArea.htmlText = copyProvider.getCopyForId("userManagementHelp", replaceObj);
			//TraceUtils.myTrace("filtered htmltext=" + helpTextArea.htmlText);
			helpTextLabel.text = copyProvider.getCopyForId("helpArea");

			// v3.5 New location for version
			versionLabel.text = "V" + Constants.version;

			setHelpStyles();
		}

		public function showReportWindow(e:ReportEvent):void {
			if (!reportWindow) {
				reportWindow = PopUpManager.createPopUp(UIComponent(parentApplication), ReportWindow, true) as ReportWindow;
			} else {
				PopUpManager.addPopUp(reportWindow, UIComponent(parentApplication), true);
			}

			reportWindow.setCopyProvider(copyProvider);
			reportWindow.parentView = this;
			reportWindow.onReportables = e.onReportables;

			var testClass:Object = new (ClassUtils.checkObjectClasses(e.onReportables))();

			//RM BUG: #150
			var i:Number = 0;
			if (testClass is Manageable) {
				for each (var contentObj:Object in content) {
					trace("contentObj licentype is " + contentObj.licenceType);
					if (contentObj.licenceType != Title.LICENCE_TYPE_AA) {
						contentExcludeAA[i] = contentObj;
						i++;
					}

				}
				trace("the number of contentExcludeAA is " + i);
				reportWindow.setTreeDataProvider(contentExcludeAA);
			} else if (testClass is Content) {
				reportWindow.setTreeDataProvider(manageables);
			} else {
				throw new Error("Can only open a report window for manageable/content of the same types");
			}

			PopUpManager.centerPopUp(reportWindow);
		}

		[Bindable]
		private var helpStyle:StyleSheet;

		private function setHelpStyles():void {
			helpStyle = new StyleSheet();

			var heading:Object = new Object();
			heading.fontWeight = "bold";
			heading.color = "#5B5072";
			heading.fontSize = "11";

			var body:Object = new Object();
			body.fontFamily = "Verdana";
			body.fontSize = "10";

			var list:Object = new Object();
			list.marginLeft = "12";
			//list.leading = "4";

			var spacing:Object = new Object();
			spacing.fontSize = "4";
			//list.leading = "4";

			helpStyle.setStyle(".heading", heading);
			helpStyle.setStyle(".list", list);
			helpStyle.setStyle("body", body);
		}
		]]>
	</mx:Script>
	
	<mx:HDividedBox width="100%" height="100%" paddingLeft="4" paddingRight="4" paddingBottom="4" >
		<!-- try with three verticals to stop the spacing looking so odd -->
		<!-- <mx:VDividedBox width="50%" height="100%">
			<view:ContentView id="contentView" width="100%" height="70%" />
			<mx:TextArea id="helpTextArea" condenseWhite="true" selectable="true" editable="false" width="100%" height="30%" />
		</mx:VDividedBox>
		-->
		<view:ContentView id="contentView" width="40%" height="100%" />
		<view:ManageablesView id="manageablesView" width="40%" height="100%"/>
		<mx:VBox width="20%" height="100%">
			<mx:HBox width="100%" >
				<mx:Label id="helpTextLabel" styleName="subHeadingLabelBlack" />
				<mx:Spacer width="100%" />
				<mx:Label id="versionLabel" styleName="subHeadingLabelBlack" />
			</mx:HBox>
			<mx:TextArea id="helpTextArea" 
						condenseWhite="true" 
						selectable="true" editable="false" 
						width="100%" height="100%"
						backgroundColor="0xF9FFA7"
						styleSheet="{helpStyle}" />
		</mx:VBox>
	</mx:HDividedBox>
</mx:Canvas>