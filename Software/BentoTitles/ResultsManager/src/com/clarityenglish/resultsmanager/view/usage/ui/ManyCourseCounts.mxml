<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
		  xmlns:arc90="com.arc90.flexlib.containers.*"
		  horizontalScrollPolicy="off"
		  horizontalAlign="center"
		  implements="com.clarityenglish.common.view.interfaces.CopyReceiver">
	<mx:Script>
		<![CDATA[
		import com.clarityenglish.common.model.interfaces.CopyProvider;
		import com.clarityenglish.utils.TraceUtils;
		import mx.charts.chartClasses.IAxis;
		import mx.charts.HitData;
		import mx.charts.series.items.PieSeriesItem;
		import mx.controls.dataGridClasses.DataGridColumn;
		// AR added for padding numbers
		import com.gskinner.StringUtils;
		import com.clarityenglish.utils.TraceUtils;
		
		[Bindable]
		public var dataProvider:Object;
		//public var dataProvider:Object;
		// Is there any case where these two dataProviders are not mergable on courseName?
		// For instance count>0 but duration=0? Or is that still present?
		
		// AR To let us work out what units to use on the x axis
		public var maxDuration:Number;		
		// v3.0.2 This panel is a table for examples where too much table for our charts
		
		private var copyProvider:CopyProvider;
		public function setCopyProvider(copyProvider:CopyProvider):void {
			title = copyProvider.getCopyForId("detailTitle");
			//courseInfoLabel.text = copyProvider.getCopyForId("courseInfoTable");
			gridCourseName.headerText = copyProvider.getCopyForId("courseName");
			gridCourseCounts.headerText = copyProvider.getCopyForId("courseCountColumn");
			//gridCourseDuration.headerText = copyProvider.getCopyForId("courseDurationColumn");
			this.copyProvider = copyProvider;
		}
		
		// For labelling and display
		public function setDataMaximum(value:Number):void {
			maxDuration = value;
			// More than 1 hours, use hours and minutes
			if (maxDuration>60*60) {
				gridCourseDuration.headerText = copyProvider.getCopyForId("courseTimeLabelHoursMinutes");
			} else {
				gridCourseDuration.headerText = copyProvider.getCopyForId("courseTimeLabelMinutesSeconds");
			}
		};
		private function getFormattedSeconds(seconds:Number = 0, thisMax:Number = 3600):String {
			// AR This breaks seconds down into xx:yy where xx is either hours or minutes depending
			// on how big the value of seconds is.
			var lblhours:Number;
			var lblminutes:Number;
			var lblseconds:Number;
			if (thisMax > 60*60) {
				// Round the seconds if you are showing hours
				lblhours = Math.floor(seconds / 3600);
				lblminutes = Math.round((seconds - (lblhours * 3600)) / 60);
				return String(lblhours) + ":" + StringUtils.padLeft(String(lblminutes),"0",2);
			} else {
				// Drop hours label if less than 1
				lblminutes = Math.floor(seconds / 60);
				lblseconds = seconds - (lblminutes * 60);
				return String(lblminutes) + ":" + StringUtils.padLeft(String(lblseconds),"0",2);
			}
		}
		private function secondsToDisplay(item:Object, column:DataGridColumn):String {
			var seconds:Number = new Number(item.duration);
			//TraceUtils.myTrace("convert " + seconds + " into hh:mm");
			return getFormattedSeconds(seconds, maxDuration);
		}
		
		]]>
	</mx:Script>
	<mx:VBox width="100%">
		<!--  
		<mx:HBox width="100%">
			<mx:Label width="100%" id="courseInfoLabel" fontWeight="bold" />
		</mx:HBox>
		-->
		<mx:HBox id="courseCountsContainer" width="100%">
			<mx:DataGrid id="dataGrid" dataProvider="{dataProvider}" width="100%" height="100%" alternatingItemColors="[#F4FBFF, #FFFFFF]" resizableColumns="true" rowHeight="22" rowCount="15" >
				<mx:columns>
					<mx:DataGridColumn id="gridCourseName" dataField="courseName" width="300" />
					<mx:DataGridColumn id="gridCourseCounts" dataField="courseCount" />
					<mx:DataGridColumn id="gridCourseDuration" dataField="duration" labelFunction="secondsToDisplay" />
				</mx:columns>
			</mx:DataGrid>
		</mx:HBox>
	</mx:VBox>
</mx:TitleWindow>